{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "Firefox",
      "version": "131.0.3"
    },
    "browser": {
      "name": "Firefox",
      "version": "131.0.3"
    },
    "pages": [
      {
        "id": "page_3",
        "pageTimings": {
          "onContentLoad": 70,
          "onLoad": 486
        },
        "startedDateTime": "2024-10-24T10:38:16.035-04:00",
        "title": "http://localhost:4173/about"
      }
    ],
    "entries": [
      {
        "startedDateTime": "2024-10-24T10:38:16.035-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "http://localhost:4173/about",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Host",
              "value": "localhost:4173"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Upgrade-Insecure-Requests",
              "value": "1"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "document"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "navigate"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "cross-site"
            },
            {
              "name": "Priority",
              "value": "u=0, i"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 548
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Content-Type",
              "value": "text/html"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Etag",
              "value": "W/\"284-hKPBXl/apSm/MVMWOCIoggE0dg4\""
            },
            {
              "name": "Date",
              "value": "Thu, 24 Oct 2024 14:38:16 GMT"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "name": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "text/html",
            "size": 644,
            "text": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>PA Real Estate Support Services LLC</title>\n    <meta name=\"description\" content=\"Professional real estate transaction coordination services for Keller Williams agents and other real estate professionals.\">\n    <script type=\"module\" crossorigin src=\"/assets/index-Bwf9VAWW.js\"></script>\n    <link rel=\"stylesheet\" crossorigin href=\"/assets/index-Db97OO48.css\">\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>"
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 900
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 1,
          "ssl": 0,
          "send": 0,
          "wait": 26,
          "receive": 0
        },
        "time": 27,
        "_securityState": "insecure",
        "serverIPAddress": "127.0.0.1",
        "connection": "4173",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.137-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "http://localhost:4173/assets/index-Bwf9VAWW.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Host",
              "value": "localhost:4173"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "http://localhost:4173/about"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 446
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Content-Type",
              "value": "text/javascript"
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 24 Oct 2024 14:35:31 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"306988-1729780531829\""
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Date",
              "value": "Thu, 24 Oct 2024 14:38:16 GMT"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "name": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "text/javascript",
            "size": 306988,
            "text": "const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=[\"assets/Home-LjjMtf8L.js\",\"assets/Services-tDFIqNFn.js\",\"assets/file-text--HzZFpy5.js\",\"assets/phone-CVGZvBqk.js\",\"assets/star-mFY1VHpQ.js\",\"assets/Contact-IuLco-Pe.js\",\"assets/check-circle-9T0l8mFI.js\",\"assets/AboutUs-Bwlags-U.js\",\"assets/PageHero-mt02hWK2.js\",\"assets/AnimatedSection-BY5jeHuA.js\",\"assets/Services-BQV9mYGG.js\",\"assets/Testimonials-BXXp8lg0.js\",\"assets/Blog-BkyKB4Ux.js\",\"assets/BlogPost-Bwl3Gkua.js\",\"assets/Resources-CQBByDHe.js\",\"assets/arrow-right-CpL6eamD.js\",\"assets/Contact-cCiLj5hT.js\",\"assets/WorkWithUs-DFrYzmf0.js\",\"assets/FAQ-CYSXS3V9.js\"])))=>i.map(i=>d[i]);\nfunction $0(e,t){for(var n=0;n<t.length;n++){const r=t[n];if(typeof r!=\"string\"&&!Array.isArray(r)){for(const i in r)if(i!==\"default\"&&!(i in e)){const o=Object.getOwnPropertyDescriptor(r,i);o&&Object.defineProperty(e,i,o.get?o:{enumerable:!0,get:()=>r[i]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}))}(function(){const t=document.createElement(\"link\").relList;if(t&&t.supports&&t.supports(\"modulepreload\"))return;for(const i of document.querySelectorAll('link[rel=\"modulepreload\"]'))r(i);new MutationObserver(i=>{for(const o of i)if(o.type===\"childList\")for(const s of o.addedNodes)s.tagName===\"LINK\"&&s.rel===\"modulepreload\"&&r(s)}).observe(document,{childList:!0,subtree:!0});function n(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin===\"use-credentials\"?o.credentials=\"include\":i.crossOrigin===\"anonymous\"?o.credentials=\"omit\":o.credentials=\"same-origin\",o}function r(i){if(i.ep)return;i.ep=!0;const o=n(i);fetch(i.href,o)}})();function W0(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var Fd={exports:{}},Ko={},Id={exports:{}},D={};/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */var di=Symbol.for(\"react.element\"),H0=Symbol.for(\"react.portal\"),K0=Symbol.for(\"react.fragment\"),G0=Symbol.for(\"react.strict_mode\"),Q0=Symbol.for(\"react.profiler\"),Y0=Symbol.for(\"react.provider\"),X0=Symbol.for(\"react.context\"),Z0=Symbol.for(\"react.forward_ref\"),b0=Symbol.for(\"react.suspense\"),J0=Symbol.for(\"react.memo\"),q0=Symbol.for(\"react.lazy\"),Yu=Symbol.iterator;function eg(e){return e===null||typeof e!=\"object\"?null:(e=Yu&&e[Yu]||e[\"@@iterator\"],typeof e==\"function\"?e:null)}var Bd={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Ud=Object.assign,$d={};function or(e,t,n){this.props=e,this.context=t,this.refs=$d,this.updater=n||Bd}or.prototype.isReactComponent={};or.prototype.setState=function(e,t){if(typeof e!=\"object\"&&typeof e!=\"function\"&&e!=null)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,e,t,\"setState\")};or.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,\"forceUpdate\")};function Wd(){}Wd.prototype=or.prototype;function ya(e,t,n){this.props=e,this.context=t,this.refs=$d,this.updater=n||Bd}var xa=ya.prototype=new Wd;xa.constructor=ya;Ud(xa,or.prototype);xa.isPureReactComponent=!0;var Xu=Array.isArray,Hd=Object.prototype.hasOwnProperty,wa={current:null},Kd={key:!0,ref:!0,__self:!0,__source:!0};function Gd(e,t,n){var r,i={},o=null,s=null;if(t!=null)for(r in t.ref!==void 0&&(s=t.ref),t.key!==void 0&&(o=\"\"+t.key),t)Hd.call(t,r)&&!Kd.hasOwnProperty(r)&&(i[r]=t[r]);var l=arguments.length-2;if(l===1)i.children=n;else if(1<l){for(var a=Array(l),u=0;u<l;u++)a[u]=arguments[u+2];i.children=a}if(e&&e.defaultProps)for(r in l=e.defaultProps,l)i[r]===void 0&&(i[r]=l[r]);return{$$typeof:di,type:e,key:o,ref:s,props:i,_owner:wa.current}}function tg(e,t){return{$$typeof:di,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function Sa(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===di}function ng(e){var t={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+e.replace(/[=:]/g,function(n){return t[n]})}var Zu=/\\/+/g;function ys(e,t){return typeof e==\"object\"&&e!==null&&e.key!=null?ng(\"\"+e.key):t.toString(36)}function Gi(e,t,n,r,i){var o=typeof e;(o===\"undefined\"||o===\"boolean\")&&(e=null);var s=!1;if(e===null)s=!0;else switch(o){case\"string\":case\"number\":s=!0;break;case\"object\":switch(e.$$typeof){case di:case H0:s=!0}}if(s)return s=e,i=i(s),e=r===\"\"?\".\"+ys(s,0):r,Xu(i)?(n=\"\",e!=null&&(n=e.replace(Zu,\"$&/\")+\"/\"),Gi(i,t,n,\"\",function(u){return u})):i!=null&&(Sa(i)&&(i=tg(i,n+(!i.key||s&&s.key===i.key?\"\":(\"\"+i.key).replace(Zu,\"$&/\")+\"/\")+e)),t.push(i)),1;if(s=0,r=r===\"\"?\".\":r+\":\",Xu(e))for(var l=0;l<e.length;l++){o=e[l];var a=r+ys(o,l);s+=Gi(o,t,n,a,i)}else if(a=eg(e),typeof a==\"function\")for(e=a.call(e),l=0;!(o=e.next()).done;)o=o.value,a=r+ys(o,l++),s+=Gi(o,t,n,a,i);else if(o===\"object\")throw t=String(e),Error(\"Objects are not valid as a React child (found: \"+(t===\"[object Object]\"?\"object with keys {\"+Object.keys(e).join(\", \")+\"}\":t)+\"). If you meant to render a collection of children, use an array instead.\");return s}function Ti(e,t,n){if(e==null)return e;var r=[],i=0;return Gi(e,r,\"\",\"\",function(o){return t.call(n,o,i++)}),r}function rg(e){if(e._status===-1){var t=e._result;t=t(),t.then(function(n){(e._status===0||e._status===-1)&&(e._status=1,e._result=n)},function(n){(e._status===0||e._status===-1)&&(e._status=2,e._result=n)}),e._status===-1&&(e._status=0,e._result=t)}if(e._status===1)return e._result.default;throw e._result}var we={current:null},Qi={transition:null},ig={ReactCurrentDispatcher:we,ReactCurrentBatchConfig:Qi,ReactCurrentOwner:wa};function Qd(){throw Error(\"act(...) is not supported in production builds of React.\")}D.Children={map:Ti,forEach:function(e,t,n){Ti(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return Ti(e,function(){t++}),t},toArray:function(e){return Ti(e,function(t){return t})||[]},only:function(e){if(!Sa(e))throw Error(\"React.Children.only expected to receive a single React element child.\");return e}};D.Component=or;D.Fragment=K0;D.Profiler=Q0;D.PureComponent=ya;D.StrictMode=G0;D.Suspense=b0;D.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ig;D.act=Qd;D.cloneElement=function(e,t,n){if(e==null)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+e+\".\");var r=Ud({},e.props),i=e.key,o=e.ref,s=e._owner;if(t!=null){if(t.ref!==void 0&&(o=t.ref,s=wa.current),t.key!==void 0&&(i=\"\"+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(a in t)Hd.call(t,a)&&!Kd.hasOwnProperty(a)&&(r[a]=t[a]===void 0&&l!==void 0?l[a]:t[a])}var a=arguments.length-2;if(a===1)r.children=n;else if(1<a){l=Array(a);for(var u=0;u<a;u++)l[u]=arguments[u+2];r.children=l}return{$$typeof:di,type:e.type,key:i,ref:o,props:r,_owner:s}};D.createContext=function(e){return e={$$typeof:X0,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$$typeof:Y0,_context:e},e.Consumer=e};D.createElement=Gd;D.createFactory=function(e){var t=Gd.bind(null,e);return t.type=e,t};D.createRef=function(){return{current:null}};D.forwardRef=function(e){return{$$typeof:Z0,render:e}};D.isValidElement=Sa;D.lazy=function(e){return{$$typeof:q0,_payload:{_status:-1,_result:e},_init:rg}};D.memo=function(e,t){return{$$typeof:J0,type:e,compare:t===void 0?null:t}};D.startTransition=function(e){var t=Qi.transition;Qi.transition={};try{e()}finally{Qi.transition=t}};D.unstable_act=Qd;D.useCallback=function(e,t){return we.current.useCallback(e,t)};D.useContext=function(e){return we.current.useContext(e)};D.useDebugValue=function(){};D.useDeferredValue=function(e){return we.current.useDeferredValue(e)};D.useEffect=function(e,t){return we.current.useEffect(e,t)};D.useId=function(){return we.current.useId()};D.useImperativeHandle=function(e,t,n){return we.current.useImperativeHandle(e,t,n)};D.useInsertionEffect=function(e,t){return we.current.useInsertionEffect(e,t)};D.useLayoutEffect=function(e,t){return we.current.useLayoutEffect(e,t)};D.useMemo=function(e,t){return we.current.useMemo(e,t)};D.useReducer=function(e,t,n){return we.current.useReducer(e,t,n)};D.useRef=function(e){return we.current.useRef(e)};D.useState=function(e){return we.current.useState(e)};D.useSyncExternalStore=function(e,t,n){return we.current.useSyncExternalStore(e,t,n)};D.useTransition=function(){return we.current.useTransition()};D.version=\"18.3.1\";Id.exports=D;var x=Id.exports;const pt=W0(x),og=$0({__proto__:null,default:pt},[x]);/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */var sg=x,lg=Symbol.for(\"react.element\"),ag=Symbol.for(\"react.fragment\"),ug=Object.prototype.hasOwnProperty,cg=sg.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fg={key:!0,ref:!0,__self:!0,__source:!0};function Yd(e,t,n){var r,i={},o=null,s=null;n!==void 0&&(o=\"\"+n),t.key!==void 0&&(o=\"\"+t.key),t.ref!==void 0&&(s=t.ref);for(r in t)ug.call(t,r)&&!fg.hasOwnProperty(r)&&(i[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps,t)i[r]===void 0&&(i[r]=t[r]);return{$$typeof:lg,type:e,key:o,ref:s,props:i,_owner:cg.current}}Ko.Fragment=ag;Ko.jsx=Yd;Ko.jsxs=Yd;Fd.exports=Ko;var P=Fd.exports,Xd={exports:{}},_e={},Zd={exports:{}},bd={};/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */(function(e){function t(L,_){var j=L.length;L.push(_);e:for(;0<j;){var Y=j-1>>>1,re=L[Y];if(0<i(re,_))L[Y]=_,L[j]=re,j=Y;else break e}}function n(L){return L.length===0?null:L[0]}function r(L){if(L.length===0)return null;var _=L[0],j=L.pop();if(j!==_){L[0]=j;e:for(var Y=0,re=L.length,Ci=re>>>1;Y<Ci;){var nn=2*(Y+1)-1,vs=L[nn],rn=nn+1,Ei=L[rn];if(0>i(vs,j))rn<re&&0>i(Ei,vs)?(L[Y]=Ei,L[rn]=j,Y=rn):(L[Y]=vs,L[nn]=j,Y=nn);else if(rn<re&&0>i(Ei,j))L[Y]=Ei,L[rn]=j,Y=rn;else break e}}return _}function i(L,_){var j=L.sortIndex-_.sortIndex;return j!==0?j:L.id-_.id}if(typeof performance==\"object\"&&typeof performance.now==\"function\"){var o=performance;e.unstable_now=function(){return o.now()}}else{var s=Date,l=s.now();e.unstable_now=function(){return s.now()-l}}var a=[],u=[],c=1,f=null,d=3,g=!1,v=!1,y=!1,S=typeof setTimeout==\"function\"?setTimeout:null,p=typeof clearTimeout==\"function\"?clearTimeout:null,h=typeof setImmediate<\"u\"?setImmediate:null;typeof navigator<\"u\"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function m(L){for(var _=n(u);_!==null;){if(_.callback===null)r(u);else if(_.startTime<=L)r(u),_.sortIndex=_.expirationTime,t(a,_);else break;_=n(u)}}function w(L){if(y=!1,m(L),!v)if(n(a)!==null)v=!0,Pi(C);else{var _=n(u);_!==null&&q(w,_.startTime-L)}}function C(L,_){v=!1,y&&(y=!1,p(T),T=-1),g=!0;var j=d;try{for(m(_),f=n(a);f!==null&&(!(f.expirationTime>_)||L&&!ne());){var Y=f.callback;if(typeof Y==\"function\"){f.callback=null,d=f.priorityLevel;var re=Y(f.expirationTime<=_);_=e.unstable_now(),typeof re==\"function\"?f.callback=re:f===n(a)&&r(a),m(_)}else r(a);f=n(a)}if(f!==null)var Ci=!0;else{var nn=n(u);nn!==null&&q(w,nn.startTime-_),Ci=!1}return Ci}finally{f=null,d=j,g=!1}}var k=!1,R=null,T=-1,N=5,V=-1;function ne(){return!(e.unstable_now()-V<N)}function Tt(){if(R!==null){var L=e.unstable_now();V=L;var _=!0;try{_=R(!0,L)}finally{_?tn():(k=!1,R=null)}}else k=!1}var tn;if(typeof h==\"function\")tn=function(){h(Tt)};else if(typeof MessageChannel<\"u\"){var dr=new MessageChannel,Qu=dr.port2;dr.port1.onmessage=Tt,tn=function(){Qu.postMessage(null)}}else tn=function(){S(Tt,0)};function Pi(L){R=L,k||(k=!0,tn())}function q(L,_){T=S(function(){L(e.unstable_now())},_)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(L){L.callback=null},e.unstable_continueExecution=function(){v||g||(v=!0,Pi(C))},e.unstable_forceFrameRate=function(L){0>L||125<L?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):N=0<L?Math.floor(1e3/L):5},e.unstable_getCurrentPriorityLevel=function(){return d},e.unstable_getFirstCallbackNode=function(){return n(a)},e.unstable_next=function(L){switch(d){case 1:case 2:case 3:var _=3;break;default:_=d}var j=d;d=_;try{return L()}finally{d=j}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(L,_){switch(L){case 1:case 2:case 3:case 4:case 5:break;default:L=3}var j=d;d=L;try{return _()}finally{d=j}},e.unstable_scheduleCallback=function(L,_,j){var Y=e.unstable_now();switch(typeof j==\"object\"&&j!==null?(j=j.delay,j=typeof j==\"number\"&&0<j?Y+j:Y):j=Y,L){case 1:var re=-1;break;case 2:re=250;break;case 5:re=1073741823;break;case 4:re=1e4;break;default:re=5e3}return re=j+re,L={id:c++,callback:_,priorityLevel:L,startTime:j,expirationTime:re,sortIndex:-1},j>Y?(L.sortIndex=j,t(u,L),n(a)===null&&L===n(u)&&(y?(p(T),T=-1):y=!0,q(w,j-Y))):(L.sortIndex=re,t(a,L),v||g||(v=!0,Pi(C))),L},e.unstable_shouldYield=ne,e.unstable_wrapCallback=function(L){var _=d;return function(){var j=d;d=_;try{return L.apply(this,arguments)}finally{d=j}}}})(bd);Zd.exports=bd;var dg=Zd.exports;/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */var hg=x,Me=dg;function E(e){for(var t=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+e,n=1;n<arguments.length;n++)t+=\"&args[]=\"+encodeURIComponent(arguments[n]);return\"Minified React error #\"+e+\"; visit \"+t+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var Jd=new Set,Wr={};function Cn(e,t){Zn(e,t),Zn(e+\"Capture\",t)}function Zn(e,t){for(Wr[e]=t,e=0;e<t.length;e++)Jd.add(t[e])}var wt=!(typeof window>\"u\"||typeof window.document>\"u\"||typeof window.document.createElement>\"u\"),sl=Object.prototype.hasOwnProperty,pg=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,bu={},Ju={};function mg(e){return sl.call(Ju,e)?!0:sl.call(bu,e)?!1:pg.test(e)?Ju[e]=!0:(bu[e]=!0,!1)}function gg(e,t,n,r){if(n!==null&&n.type===0)return!1;switch(typeof t){case\"function\":case\"symbol\":return!0;case\"boolean\":return r?!1:n!==null?!n.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!==\"data-\"&&e!==\"aria-\");default:return!1}}function vg(e,t,n,r){if(t===null||typeof t>\"u\"||gg(e,t,n,r))return!0;if(r)return!1;if(n!==null)switch(n.type){case 3:return!t;case 4:return t===!1;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function Se(e,t,n,r,i,o,s){this.acceptsBooleans=t===2||t===3||t===4,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=s}var ce={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(e){ce[e]=new Se(e,0,!1,e,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(e){var t=e[0];ce[t]=new Se(t,1,!1,e[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(e){ce[e]=new Se(e,2,!1,e.toLowerCase(),null,!1,!1)});[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(e){ce[e]=new Se(e,2,!1,e,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(e){ce[e]=new Se(e,3,!1,e.toLowerCase(),null,!1,!1)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(e){ce[e]=new Se(e,3,!0,e,null,!1,!1)});[\"capture\",\"download\"].forEach(function(e){ce[e]=new Se(e,4,!1,e,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(e){ce[e]=new Se(e,6,!1,e,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(e){ce[e]=new Se(e,5,!1,e.toLowerCase(),null,!1,!1)});var Pa=/[\\-:]([a-z])/g;function Ca(e){return e[1].toUpperCase()}\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(e){var t=e.replace(Pa,Ca);ce[t]=new Se(t,1,!1,e,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(e){var t=e.replace(Pa,Ca);ce[t]=new Se(t,1,!1,e,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(e){var t=e.replace(Pa,Ca);ce[t]=new Se(t,1,!1,e,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(e){ce[e]=new Se(e,1,!1,e.toLowerCase(),null,!1,!1)});ce.xlinkHref=new Se(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(e){ce[e]=new Se(e,1,!1,e.toLowerCase(),null,!0,!0)});function Ea(e,t,n,r){var i=ce.hasOwnProperty(t)?ce[t]:null;(i!==null?i.type!==0:r||!(2<t.length)||t[0]!==\"o\"&&t[0]!==\"O\"||t[1]!==\"n\"&&t[1]!==\"N\")&&(vg(t,n,i,r)&&(n=null),r||i===null?mg(t)&&(n===null?e.removeAttribute(t):e.setAttribute(t,\"\"+n)):i.mustUseProperty?e[i.propertyName]=n===null?i.type===3?!1:\"\":n:(t=i.attributeName,r=i.attributeNamespace,n===null?e.removeAttribute(t):(i=i.type,n=i===3||i===4&&n===!0?\"\":\"\"+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}var Et=hg.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,ki=Symbol.for(\"react.element\"),Ln=Symbol.for(\"react.portal\"),Rn=Symbol.for(\"react.fragment\"),Ta=Symbol.for(\"react.strict_mode\"),ll=Symbol.for(\"react.profiler\"),qd=Symbol.for(\"react.provider\"),eh=Symbol.for(\"react.context\"),ka=Symbol.for(\"react.forward_ref\"),al=Symbol.for(\"react.suspense\"),ul=Symbol.for(\"react.suspense_list\"),La=Symbol.for(\"react.memo\"),At=Symbol.for(\"react.lazy\"),th=Symbol.for(\"react.offscreen\"),qu=Symbol.iterator;function hr(e){return e===null||typeof e!=\"object\"?null:(e=qu&&e[qu]||e[\"@@iterator\"],typeof e==\"function\"?e:null)}var G=Object.assign,xs;function Cr(e){if(xs===void 0)try{throw Error()}catch(n){var t=n.stack.trim().match(/\\n( *(at )?)/);xs=t&&t[1]||\"\"}return`\n`+xs+e}var ws=!1;function Ss(e,t){if(!e||ws)return\"\";ws=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var r=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){r=u}e.call(t.prototype)}else{try{throw Error()}catch(u){r=u}e()}}catch(u){if(u&&r&&typeof u.stack==\"string\"){for(var i=u.stack.split(`\n`),o=r.stack.split(`\n`),s=i.length-1,l=o.length-1;1<=s&&0<=l&&i[s]!==o[l];)l--;for(;1<=s&&0<=l;s--,l--)if(i[s]!==o[l]){if(s!==1||l!==1)do if(s--,l--,0>l||i[s]!==o[l]){var a=`\n`+i[s].replace(\" at new \",\" at \");return e.displayName&&a.includes(\"<anonymous>\")&&(a=a.replace(\"<anonymous>\",e.displayName)),a}while(1<=s&&0<=l);break}}}finally{ws=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:\"\")?Cr(e):\"\"}function yg(e){switch(e.tag){case 5:return Cr(e.type);case 16:return Cr(\"Lazy\");case 13:return Cr(\"Suspense\");case 19:return Cr(\"SuspenseList\");case 0:case 2:case 15:return e=Ss(e.type,!1),e;case 11:return e=Ss(e.type.render,!1),e;case 1:return e=Ss(e.type,!0),e;default:return\"\"}}function cl(e){if(e==null)return null;if(typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case Rn:return\"Fragment\";case Ln:return\"Portal\";case ll:return\"Profiler\";case Ta:return\"StrictMode\";case al:return\"Suspense\";case ul:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case eh:return(e.displayName||\"Context\")+\".Consumer\";case qd:return(e._context.displayName||\"Context\")+\".Provider\";case ka:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||\"\",e=e!==\"\"?\"ForwardRef(\"+e+\")\":\"ForwardRef\"),e;case La:return t=e.displayName||null,t!==null?t:cl(e.type)||\"Memo\";case At:t=e._payload,e=e._init;try{return cl(e(t))}catch{}}return null}function xg(e){var t=e.type;switch(e.tag){case 24:return\"Cache\";case 9:return(t.displayName||\"Context\")+\".Consumer\";case 10:return(t._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return e=t.render,e=e.displayName||e.name||\"\",t.displayName||(e!==\"\"?\"ForwardRef(\"+e+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return t;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return cl(t);case 8:return t===Ta?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";case 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof t==\"function\")return t.displayName||t.name||null;if(typeof t==\"string\")return t}return null}function Kt(e){switch(typeof e){case\"boolean\":case\"number\":case\"string\":case\"undefined\":return e;case\"object\":return e;default:return\"\"}}function nh(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()===\"input\"&&(t===\"checkbox\"||t===\"radio\")}function wg(e){var t=nh(e)?\"checked\":\"value\",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=\"\"+e[t];if(!e.hasOwnProperty(t)&&typeof n<\"u\"&&typeof n.get==\"function\"&&typeof n.set==\"function\"){var i=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(s){r=\"\"+s,o.call(this,s)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(s){r=\"\"+s},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function Li(e){e._valueTracker||(e._valueTracker=wg(e))}function rh(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r=\"\";return e&&(r=nh(e)?e.checked?\"true\":\"false\":e.value),e=r,e!==n?(t.setValue(e),!0):!1}function uo(e){if(e=e||(typeof document<\"u\"?document:void 0),typeof e>\"u\")return null;try{return e.activeElement||e.body}catch{return e.body}}function fl(e,t){var n=t.checked;return G({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n??e._wrapperState.initialChecked})}function ec(e,t){var n=t.defaultValue==null?\"\":t.defaultValue,r=t.checked!=null?t.checked:t.defaultChecked;n=Kt(t.value!=null?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:t.type===\"checkbox\"||t.type===\"radio\"?t.checked!=null:t.value!=null}}function ih(e,t){t=t.checked,t!=null&&Ea(e,\"checked\",t,!1)}function dl(e,t){ih(e,t);var n=Kt(t.value),r=t.type;if(n!=null)r===\"number\"?(n===0&&e.value===\"\"||e.value!=n)&&(e.value=\"\"+n):e.value!==\"\"+n&&(e.value=\"\"+n);else if(r===\"submit\"||r===\"reset\"){e.removeAttribute(\"value\");return}t.hasOwnProperty(\"value\")?hl(e,t.type,n):t.hasOwnProperty(\"defaultValue\")&&hl(e,t.type,Kt(t.defaultValue)),t.checked==null&&t.defaultChecked!=null&&(e.defaultChecked=!!t.defaultChecked)}function tc(e,t,n){if(t.hasOwnProperty(\"value\")||t.hasOwnProperty(\"defaultValue\")){var r=t.type;if(!(r!==\"submit\"&&r!==\"reset\"||t.value!==void 0&&t.value!==null))return;t=\"\"+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}n=e.name,n!==\"\"&&(e.name=\"\"),e.defaultChecked=!!e._wrapperState.initialChecked,n!==\"\"&&(e.name=n)}function hl(e,t,n){(t!==\"number\"||uo(e.ownerDocument)!==e)&&(n==null?e.defaultValue=\"\"+e._wrapperState.initialValue:e.defaultValue!==\"\"+n&&(e.defaultValue=\"\"+n))}var Er=Array.isArray;function Hn(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t[\"$\"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty(\"$\"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=\"\"+Kt(n),t=null,i=0;i<e.length;i++){if(e[i].value===n){e[i].selected=!0,r&&(e[i].defaultSelected=!0);return}t!==null||e[i].disabled||(t=e[i])}t!==null&&(t.selected=!0)}}function pl(e,t){if(t.dangerouslySetInnerHTML!=null)throw Error(E(91));return G({},t,{value:void 0,defaultValue:void 0,children:\"\"+e._wrapperState.initialValue})}function nc(e,t){var n=t.value;if(n==null){if(n=t.children,t=t.defaultValue,n!=null){if(t!=null)throw Error(E(92));if(Er(n)){if(1<n.length)throw Error(E(93));n=n[0]}t=n}t==null&&(t=\"\"),n=t}e._wrapperState={initialValue:Kt(n)}}function oh(e,t){var n=Kt(t.value),r=Kt(t.defaultValue);n!=null&&(n=\"\"+n,n!==e.value&&(e.value=n),t.defaultValue==null&&e.defaultValue!==n&&(e.defaultValue=n)),r!=null&&(e.defaultValue=\"\"+r)}function rc(e){var t=e.textContent;t===e._wrapperState.initialValue&&t!==\"\"&&t!==null&&(e.value=t)}function sh(e){switch(e){case\"svg\":return\"http://www.w3.org/2000/svg\";case\"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function ml(e,t){return e==null||e===\"http://www.w3.org/1999/xhtml\"?sh(t):e===\"http://www.w3.org/2000/svg\"&&t===\"foreignObject\"?\"http://www.w3.org/1999/xhtml\":e}var Ri,lh=function(e){return typeof MSApp<\"u\"&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction(function(){return e(t,n,r,i)})}:e}(function(e,t){if(e.namespaceURI!==\"http://www.w3.org/2000/svg\"||\"innerHTML\"in e)e.innerHTML=t;else{for(Ri=Ri||document.createElement(\"div\"),Ri.innerHTML=\"<svg>\"+t.valueOf().toString()+\"</svg>\",t=Ri.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function Hr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&n.nodeType===3){n.nodeValue=t;return}}e.textContent=t}var Ar={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Sg=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Ar).forEach(function(e){Sg.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Ar[t]=Ar[e]})});function ah(e,t,n){return t==null||typeof t==\"boolean\"||t===\"\"?\"\":n||typeof t!=\"number\"||t===0||Ar.hasOwnProperty(e)&&Ar[e]?(\"\"+t).trim():t+\"px\"}function uh(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=n.indexOf(\"--\")===0,i=ah(n,t[n],r);n===\"float\"&&(n=\"cssFloat\"),r?e.setProperty(n,i):e[n]=i}}var Pg=G({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function gl(e,t){if(t){if(Pg[e]&&(t.children!=null||t.dangerouslySetInnerHTML!=null))throw Error(E(137,e));if(t.dangerouslySetInnerHTML!=null){if(t.children!=null)throw Error(E(60));if(typeof t.dangerouslySetInnerHTML!=\"object\"||!(\"__html\"in t.dangerouslySetInnerHTML))throw Error(E(61))}if(t.style!=null&&typeof t.style!=\"object\")throw Error(E(62))}}function vl(e,t){if(e.indexOf(\"-\")===-1)return typeof t.is==\"string\";switch(e){case\"annotation-xml\":case\"color-profile\":case\"font-face\":case\"font-face-src\":case\"font-face-uri\":case\"font-face-format\":case\"font-face-name\":case\"missing-glyph\":return!1;default:return!0}}var yl=null;function Ra(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var xl=null,Kn=null,Gn=null;function ic(e){if(e=mi(e)){if(typeof xl!=\"function\")throw Error(E(280));var t=e.stateNode;t&&(t=Zo(t),xl(e.stateNode,e.type,t))}}function ch(e){Kn?Gn?Gn.push(e):Gn=[e]:Kn=e}function fh(){if(Kn){var e=Kn,t=Gn;if(Gn=Kn=null,ic(e),t)for(e=0;e<t.length;e++)ic(t[e])}}function dh(e,t){return e(t)}function hh(){}var Ps=!1;function ph(e,t,n){if(Ps)return e(t,n);Ps=!0;try{return dh(e,t,n)}finally{Ps=!1,(Kn!==null||Gn!==null)&&(hh(),fh())}}function Kr(e,t){var n=e.stateNode;if(n===null)return null;var r=Zo(n);if(r===null)return null;n=r[t];e:switch(t){case\"onClick\":case\"onClickCapture\":case\"onDoubleClick\":case\"onDoubleClickCapture\":case\"onMouseDown\":case\"onMouseDownCapture\":case\"onMouseMove\":case\"onMouseMoveCapture\":case\"onMouseUp\":case\"onMouseUpCapture\":case\"onMouseEnter\":(r=!r.disabled)||(e=e.type,r=!(e===\"button\"||e===\"input\"||e===\"select\"||e===\"textarea\")),e=!r;break e;default:e=!1}if(e)return null;if(n&&typeof n!=\"function\")throw Error(E(231,t,typeof n));return n}var wl=!1;if(wt)try{var pr={};Object.defineProperty(pr,\"passive\",{get:function(){wl=!0}}),window.addEventListener(\"test\",pr,pr),window.removeEventListener(\"test\",pr,pr)}catch{wl=!1}function Cg(e,t,n,r,i,o,s,l,a){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var Mr=!1,co=null,fo=!1,Sl=null,Eg={onError:function(e){Mr=!0,co=e}};function Tg(e,t,n,r,i,o,s,l,a){Mr=!1,co=null,Cg.apply(Eg,arguments)}function kg(e,t,n,r,i,o,s,l,a){if(Tg.apply(this,arguments),Mr){if(Mr){var u=co;Mr=!1,co=null}else throw Error(E(198));fo||(fo=!0,Sl=u)}}function En(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,t.flags&4098&&(n=t.return),e=t.return;while(e)}return t.tag===3?n:null}function mh(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function oc(e){if(En(e)!==e)throw Error(E(188))}function Lg(e){var t=e.alternate;if(!t){if(t=En(e),t===null)throw Error(E(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(i===null)break;var o=i.alternate;if(o===null){if(r=i.return,r!==null){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return oc(i),e;if(o===r)return oc(i),t;o=o.sibling}throw Error(E(188))}if(n.return!==r.return)n=i,r=o;else{for(var s=!1,l=i.child;l;){if(l===n){s=!0,n=i,r=o;break}if(l===r){s=!0,r=i,n=o;break}l=l.sibling}if(!s){for(l=o.child;l;){if(l===n){s=!0,n=o,r=i;break}if(l===r){s=!0,r=o,n=i;break}l=l.sibling}if(!s)throw Error(E(189))}}if(n.alternate!==r)throw Error(E(190))}if(n.tag!==3)throw Error(E(188));return n.stateNode.current===n?e:t}function gh(e){return e=Lg(e),e!==null?vh(e):null}function vh(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var t=vh(e);if(t!==null)return t;e=e.sibling}return null}var yh=Me.unstable_scheduleCallback,sc=Me.unstable_cancelCallback,Rg=Me.unstable_shouldYield,Ag=Me.unstable_requestPaint,Z=Me.unstable_now,Mg=Me.unstable_getCurrentPriorityLevel,Aa=Me.unstable_ImmediatePriority,xh=Me.unstable_UserBlockingPriority,ho=Me.unstable_NormalPriority,Vg=Me.unstable_LowPriority,wh=Me.unstable_IdlePriority,Go=null,it=null;function _g(e){if(it&&typeof it.onCommitFiberRoot==\"function\")try{it.onCommitFiberRoot(Go,e,void 0,(e.current.flags&128)===128)}catch{}}var Ye=Math.clz32?Math.clz32:Ng,jg=Math.log,Dg=Math.LN2;function Ng(e){return e>>>=0,e===0?32:31-(jg(e)/Dg|0)|0}var Ai=64,Mi=4194304;function Tr(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function po(e,t){var n=e.pendingLanes;if(n===0)return 0;var r=0,i=e.suspendedLanes,o=e.pingedLanes,s=n&268435455;if(s!==0){var l=s&~i;l!==0?r=Tr(l):(o&=s,o!==0&&(r=Tr(o)))}else s=n&~i,s!==0?r=Tr(s):o!==0&&(r=Tr(o));if(r===0)return 0;if(t!==0&&t!==r&&!(t&i)&&(i=r&-r,o=t&-t,i>=o||i===16&&(o&4194240)!==0))return t;if(r&4&&(r|=n&16),t=e.entangledLanes,t!==0)for(e=e.entanglements,t&=r;0<t;)n=31-Ye(t),i=1<<n,r|=e[n],t&=~i;return r}function Og(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function zg(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,i=e.expirationTimes,o=e.pendingLanes;0<o;){var s=31-Ye(o),l=1<<s,a=i[s];a===-1?(!(l&n)||l&r)&&(i[s]=Og(l,t)):a<=t&&(e.expiredLanes|=l),o&=~l}}function Pl(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function Sh(){var e=Ai;return Ai<<=1,!(Ai&4194240)&&(Ai=64),e}function Cs(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function hi(e,t,n){e.pendingLanes|=t,t!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,t=31-Ye(t),e[t]=n}function Fg(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var i=31-Ye(n),o=1<<i;t[i]=0,r[i]=-1,e[i]=-1,n&=~o}}function Ma(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-Ye(n),i=1<<r;i&t|e[r]&t&&(e[r]|=t),n&=~i}}var F=0;function Ph(e){return e&=-e,1<e?4<e?e&268435455?16:536870912:4:1}var Ch,Va,Eh,Th,kh,Cl=!1,Vi=[],Ot=null,zt=null,Ft=null,Gr=new Map,Qr=new Map,Vt=[],Ig=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");function lc(e,t){switch(e){case\"focusin\":case\"focusout\":Ot=null;break;case\"dragenter\":case\"dragleave\":zt=null;break;case\"mouseover\":case\"mouseout\":Ft=null;break;case\"pointerover\":case\"pointerout\":Gr.delete(t.pointerId);break;case\"gotpointercapture\":case\"lostpointercapture\":Qr.delete(t.pointerId)}}function mr(e,t,n,r,i,o){return e===null||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[i]},t!==null&&(t=mi(t),t!==null&&Va(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,i!==null&&t.indexOf(i)===-1&&t.push(i),e)}function Bg(e,t,n,r,i){switch(t){case\"focusin\":return Ot=mr(Ot,e,t,n,r,i),!0;case\"dragenter\":return zt=mr(zt,e,t,n,r,i),!0;case\"mouseover\":return Ft=mr(Ft,e,t,n,r,i),!0;case\"pointerover\":var o=i.pointerId;return Gr.set(o,mr(Gr.get(o)||null,e,t,n,r,i)),!0;case\"gotpointercapture\":return o=i.pointerId,Qr.set(o,mr(Qr.get(o)||null,e,t,n,r,i)),!0}return!1}function Lh(e){var t=cn(e.target);if(t!==null){var n=En(t);if(n!==null){if(t=n.tag,t===13){if(t=mh(n),t!==null){e.blockedOn=t,kh(e.priority,function(){Eh(n)});return}}else if(t===3&&n.stateNode.current.memoizedState.isDehydrated){e.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}e.blockedOn=null}function Yi(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var n=El(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(n===null){n=e.nativeEvent;var r=new n.constructor(n.type,n);yl=r,n.target.dispatchEvent(r),yl=null}else return t=mi(n),t!==null&&Va(t),e.blockedOn=n,!1;t.shift()}return!0}function ac(e,t,n){Yi(e)&&n.delete(t)}function Ug(){Cl=!1,Ot!==null&&Yi(Ot)&&(Ot=null),zt!==null&&Yi(zt)&&(zt=null),Ft!==null&&Yi(Ft)&&(Ft=null),Gr.forEach(ac),Qr.forEach(ac)}function gr(e,t){e.blockedOn===t&&(e.blockedOn=null,Cl||(Cl=!0,Me.unstable_scheduleCallback(Me.unstable_NormalPriority,Ug)))}function Yr(e){function t(i){return gr(i,e)}if(0<Vi.length){gr(Vi[0],e);for(var n=1;n<Vi.length;n++){var r=Vi[n];r.blockedOn===e&&(r.blockedOn=null)}}for(Ot!==null&&gr(Ot,e),zt!==null&&gr(zt,e),Ft!==null&&gr(Ft,e),Gr.forEach(t),Qr.forEach(t),n=0;n<Vt.length;n++)r=Vt[n],r.blockedOn===e&&(r.blockedOn=null);for(;0<Vt.length&&(n=Vt[0],n.blockedOn===null);)Lh(n),n.blockedOn===null&&Vt.shift()}var Qn=Et.ReactCurrentBatchConfig,mo=!0;function $g(e,t,n,r){var i=F,o=Qn.transition;Qn.transition=null;try{F=1,_a(e,t,n,r)}finally{F=i,Qn.transition=o}}function Wg(e,t,n,r){var i=F,o=Qn.transition;Qn.transition=null;try{F=4,_a(e,t,n,r)}finally{F=i,Qn.transition=o}}function _a(e,t,n,r){if(mo){var i=El(e,t,n,r);if(i===null)js(e,t,r,go,n),lc(e,r);else if(Bg(i,e,t,n,r))r.stopPropagation();else if(lc(e,r),t&4&&-1<Ig.indexOf(e)){for(;i!==null;){var o=mi(i);if(o!==null&&Ch(o),o=El(e,t,n,r),o===null&&js(e,t,r,go,n),o===i)break;i=o}i!==null&&r.stopPropagation()}else js(e,t,r,null,n)}}var go=null;function El(e,t,n,r){if(go=null,e=Ra(r),e=cn(e),e!==null)if(t=En(e),t===null)e=null;else if(n=t.tag,n===13){if(e=mh(t),e!==null)return e;e=null}else if(n===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return go=e,null}function Rh(e){switch(e){case\"cancel\":case\"click\":case\"close\":case\"contextmenu\":case\"copy\":case\"cut\":case\"auxclick\":case\"dblclick\":case\"dragend\":case\"dragstart\":case\"drop\":case\"focusin\":case\"focusout\":case\"input\":case\"invalid\":case\"keydown\":case\"keypress\":case\"keyup\":case\"mousedown\":case\"mouseup\":case\"paste\":case\"pause\":case\"play\":case\"pointercancel\":case\"pointerdown\":case\"pointerup\":case\"ratechange\":case\"reset\":case\"resize\":case\"seeked\":case\"submit\":case\"touchcancel\":case\"touchend\":case\"touchstart\":case\"volumechange\":case\"change\":case\"selectionchange\":case\"textInput\":case\"compositionstart\":case\"compositionend\":case\"compositionupdate\":case\"beforeblur\":case\"afterblur\":case\"beforeinput\":case\"blur\":case\"fullscreenchange\":case\"focus\":case\"hashchange\":case\"popstate\":case\"select\":case\"selectstart\":return 1;case\"drag\":case\"dragenter\":case\"dragexit\":case\"dragleave\":case\"dragover\":case\"mousemove\":case\"mouseout\":case\"mouseover\":case\"pointermove\":case\"pointerout\":case\"pointerover\":case\"scroll\":case\"toggle\":case\"touchmove\":case\"wheel\":case\"mouseenter\":case\"mouseleave\":case\"pointerenter\":case\"pointerleave\":return 4;case\"message\":switch(Mg()){case Aa:return 1;case xh:return 4;case ho:case Vg:return 16;case wh:return 536870912;default:return 16}default:return 16}}var jt=null,ja=null,Xi=null;function Ah(){if(Xi)return Xi;var e,t=ja,n=t.length,r,i=\"value\"in jt?jt.value:jt.textContent,o=i.length;for(e=0;e<n&&t[e]===i[e];e++);var s=n-e;for(r=1;r<=s&&t[n-r]===i[o-r];r++);return Xi=i.slice(e,1<r?1-r:void 0)}function Zi(e){var t=e.keyCode;return\"charCode\"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function _i(){return!0}function uc(){return!1}function je(e){function t(n,r,i,o,s){this._reactName=n,this._targetInst=i,this.type=r,this.nativeEvent=o,this.target=s,this.currentTarget=null;for(var l in e)e.hasOwnProperty(l)&&(n=e[l],this[l]=n?n(o):o[l]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?_i:uc,this.isPropagationStopped=uc,this}return G(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!=\"unknown\"&&(n.returnValue=!1),this.isDefaultPrevented=_i)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!=\"unknown\"&&(n.cancelBubble=!0),this.isPropagationStopped=_i)},persist:function(){},isPersistent:_i}),t}var sr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Da=je(sr),pi=G({},sr,{view:0,detail:0}),Hg=je(pi),Es,Ts,vr,Qo=G({},pi,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Na,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return\"movementX\"in e?e.movementX:(e!==vr&&(vr&&e.type===\"mousemove\"?(Es=e.screenX-vr.screenX,Ts=e.screenY-vr.screenY):Ts=Es=0,vr=e),Es)},movementY:function(e){return\"movementY\"in e?e.movementY:Ts}}),cc=je(Qo),Kg=G({},Qo,{dataTransfer:0}),Gg=je(Kg),Qg=G({},pi,{relatedTarget:0}),ks=je(Qg),Yg=G({},sr,{animationName:0,elapsedTime:0,pseudoElement:0}),Xg=je(Yg),Zg=G({},sr,{clipboardData:function(e){return\"clipboardData\"in e?e.clipboardData:window.clipboardData}}),bg=je(Zg),Jg=G({},sr,{data:0}),fc=je(Jg),qg={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},ev={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},tv={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function nv(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=tv[e])?!!t[e]:!1}function Na(){return nv}var rv=G({},pi,{key:function(e){if(e.key){var t=qg[e.key]||e.key;if(t!==\"Unidentified\")return t}return e.type===\"keypress\"?(e=Zi(e),e===13?\"Enter\":String.fromCharCode(e)):e.type===\"keydown\"||e.type===\"keyup\"?ev[e.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Na,charCode:function(e){return e.type===\"keypress\"?Zi(e):0},keyCode:function(e){return e.type===\"keydown\"||e.type===\"keyup\"?e.keyCode:0},which:function(e){return e.type===\"keypress\"?Zi(e):e.type===\"keydown\"||e.type===\"keyup\"?e.keyCode:0}}),iv=je(rv),ov=G({},Qo,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),dc=je(ov),sv=G({},pi,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Na}),lv=je(sv),av=G({},sr,{propertyName:0,elapsedTime:0,pseudoElement:0}),uv=je(av),cv=G({},Qo,{deltaX:function(e){return\"deltaX\"in e?e.deltaX:\"wheelDeltaX\"in e?-e.wheelDeltaX:0},deltaY:function(e){return\"deltaY\"in e?e.deltaY:\"wheelDeltaY\"in e?-e.wheelDeltaY:\"wheelDelta\"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),fv=je(cv),dv=[9,13,27,32],Oa=wt&&\"CompositionEvent\"in window,Vr=null;wt&&\"documentMode\"in document&&(Vr=document.documentMode);var hv=wt&&\"TextEvent\"in window&&!Vr,Mh=wt&&(!Oa||Vr&&8<Vr&&11>=Vr),hc=\" \",pc=!1;function Vh(e,t){switch(e){case\"keyup\":return dv.indexOf(t.keyCode)!==-1;case\"keydown\":return t.keyCode!==229;case\"keypress\":case\"mousedown\":case\"focusout\":return!0;default:return!1}}function _h(e){return e=e.detail,typeof e==\"object\"&&\"data\"in e?e.data:null}var An=!1;function pv(e,t){switch(e){case\"compositionend\":return _h(t);case\"keypress\":return t.which!==32?null:(pc=!0,hc);case\"textInput\":return e=t.data,e===hc&&pc?null:e;default:return null}}function mv(e,t){if(An)return e===\"compositionend\"||!Oa&&Vh(e,t)?(e=Ah(),Xi=ja=jt=null,An=!1,e):null;switch(e){case\"paste\":return null;case\"keypress\":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case\"compositionend\":return Mh&&t.locale!==\"ko\"?null:t.data;default:return null}}var gv={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function mc(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t===\"input\"?!!gv[e.type]:t===\"textarea\"}function jh(e,t,n,r){ch(r),t=vo(t,\"onChange\"),0<t.length&&(n=new Da(\"onChange\",\"change\",null,n,r),e.push({event:n,listeners:t}))}var _r=null,Xr=null;function vv(e){Hh(e,0)}function Yo(e){var t=_n(e);if(rh(t))return e}function yv(e,t){if(e===\"change\")return t}var Dh=!1;if(wt){var Ls;if(wt){var Rs=\"oninput\"in document;if(!Rs){var gc=document.createElement(\"div\");gc.setAttribute(\"oninput\",\"return;\"),Rs=typeof gc.oninput==\"function\"}Ls=Rs}else Ls=!1;Dh=Ls&&(!document.documentMode||9<document.documentMode)}function vc(){_r&&(_r.detachEvent(\"onpropertychange\",Nh),Xr=_r=null)}function Nh(e){if(e.propertyName===\"value\"&&Yo(Xr)){var t=[];jh(t,Xr,e,Ra(e)),ph(vv,t)}}function xv(e,t,n){e===\"focusin\"?(vc(),_r=t,Xr=n,_r.attachEvent(\"onpropertychange\",Nh)):e===\"focusout\"&&vc()}function wv(e){if(e===\"selectionchange\"||e===\"keyup\"||e===\"keydown\")return Yo(Xr)}function Sv(e,t){if(e===\"click\")return Yo(t)}function Pv(e,t){if(e===\"input\"||e===\"change\")return Yo(t)}function Cv(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var Ze=typeof Object.is==\"function\"?Object.is:Cv;function Zr(e,t){if(Ze(e,t))return!0;if(typeof e!=\"object\"||e===null||typeof t!=\"object\"||t===null)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var i=n[r];if(!sl.call(t,i)||!Ze(e[i],t[i]))return!1}return!0}function yc(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function xc(e,t){var n=yc(e);e=0;for(var r;n;){if(n.nodeType===3){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=yc(n)}}function Oh(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?Oh(e,t.parentNode):\"contains\"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function zh(){for(var e=window,t=uo();t instanceof e.HTMLIFrameElement;){try{var n=typeof t.contentWindow.location.href==\"string\"}catch{n=!1}if(n)e=t.contentWindow;else break;t=uo(e.document)}return t}function za(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t===\"input\"&&(e.type===\"text\"||e.type===\"search\"||e.type===\"tel\"||e.type===\"url\"||e.type===\"password\")||t===\"textarea\"||e.contentEditable===\"true\")}function Ev(e){var t=zh(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&Oh(n.ownerDocument.documentElement,n)){if(r!==null&&za(n)){if(t=r.start,e=r.end,e===void 0&&(e=t),\"selectionStart\"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(e=(t=n.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var i=n.textContent.length,o=Math.min(r.start,i);r=r.end===void 0?o:Math.min(r.end,i),!e.extend&&o>r&&(i=r,r=o,o=i),i=xc(n,o);var s=xc(n,r);i&&s&&(e.rangeCount!==1||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==s.node||e.focusOffset!==s.offset)&&(t=t.createRange(),t.setStart(i.node,i.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(s.node,s.offset)):(t.setEnd(s.node,s.offset),e.addRange(t)))}}for(t=[],e=n;e=e.parentNode;)e.nodeType===1&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof n.focus==\"function\"&&n.focus(),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Tv=wt&&\"documentMode\"in document&&11>=document.documentMode,Mn=null,Tl=null,jr=null,kl=!1;function wc(e,t,n){var r=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;kl||Mn==null||Mn!==uo(r)||(r=Mn,\"selectionStart\"in r&&za(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),jr&&Zr(jr,r)||(jr=r,r=vo(Tl,\"onSelect\"),0<r.length&&(t=new Da(\"onSelect\",\"select\",null,t,n),e.push({event:t,listeners:r}),t.target=Mn)))}function ji(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n[\"Webkit\"+e]=\"webkit\"+t,n[\"Moz\"+e]=\"moz\"+t,n}var Vn={animationend:ji(\"Animation\",\"AnimationEnd\"),animationiteration:ji(\"Animation\",\"AnimationIteration\"),animationstart:ji(\"Animation\",\"AnimationStart\"),transitionend:ji(\"Transition\",\"TransitionEnd\")},As={},Fh={};wt&&(Fh=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Vn.animationend.animation,delete Vn.animationiteration.animation,delete Vn.animationstart.animation),\"TransitionEvent\"in window||delete Vn.transitionend.transition);function Xo(e){if(As[e])return As[e];if(!Vn[e])return e;var t=Vn[e],n;for(n in t)if(t.hasOwnProperty(n)&&n in Fh)return As[e]=t[n];return e}var Ih=Xo(\"animationend\"),Bh=Xo(\"animationiteration\"),Uh=Xo(\"animationstart\"),$h=Xo(\"transitionend\"),Wh=new Map,Sc=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");function Xt(e,t){Wh.set(e,t),Cn(t,[e])}for(var Ms=0;Ms<Sc.length;Ms++){var Vs=Sc[Ms],kv=Vs.toLowerCase(),Lv=Vs[0].toUpperCase()+Vs.slice(1);Xt(kv,\"on\"+Lv)}Xt(Ih,\"onAnimationEnd\");Xt(Bh,\"onAnimationIteration\");Xt(Uh,\"onAnimationStart\");Xt(\"dblclick\",\"onDoubleClick\");Xt(\"focusin\",\"onFocus\");Xt(\"focusout\",\"onBlur\");Xt($h,\"onTransitionEnd\");Zn(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);Zn(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);Zn(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);Zn(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);Cn(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));Cn(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));Cn(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);Cn(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));Cn(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));Cn(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var kr=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Rv=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(kr));function Pc(e,t,n){var r=e.type||\"unknown-event\";e.currentTarget=n,kg(r,t,void 0,e),e.currentTarget=null}function Hh(e,t){t=(t&4)!==0;for(var n=0;n<e.length;n++){var r=e[n],i=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var s=r.length-1;0<=s;s--){var l=r[s],a=l.instance,u=l.currentTarget;if(l=l.listener,a!==o&&i.isPropagationStopped())break e;Pc(i,l,u),o=a}else for(s=0;s<r.length;s++){if(l=r[s],a=l.instance,u=l.currentTarget,l=l.listener,a!==o&&i.isPropagationStopped())break e;Pc(i,l,u),o=a}}}if(fo)throw e=Sl,fo=!1,Sl=null,e}function B(e,t){var n=t[Vl];n===void 0&&(n=t[Vl]=new Set);var r=e+\"__bubble\";n.has(r)||(Kh(t,e,2,!1),n.add(r))}function _s(e,t,n){var r=0;t&&(r|=4),Kh(n,e,r,t)}var Di=\"_reactListening\"+Math.random().toString(36).slice(2);function br(e){if(!e[Di]){e[Di]=!0,Jd.forEach(function(n){n!==\"selectionchange\"&&(Rv.has(n)||_s(n,!1,e),_s(n,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[Di]||(t[Di]=!0,_s(\"selectionchange\",!1,t))}}function Kh(e,t,n,r){switch(Rh(t)){case 1:var i=$g;break;case 4:i=Wg;break;default:i=_a}n=i.bind(null,t,n,e),i=void 0,!wl||t!==\"touchstart\"&&t!==\"touchmove\"&&t!==\"wheel\"||(i=!0),r?i!==void 0?e.addEventListener(t,n,{capture:!0,passive:i}):e.addEventListener(t,n,!0):i!==void 0?e.addEventListener(t,n,{passive:i}):e.addEventListener(t,n,!1)}function js(e,t,n,r,i){var o=r;if(!(t&1)&&!(t&2)&&r!==null)e:for(;;){if(r===null)return;var s=r.tag;if(s===3||s===4){var l=r.stateNode.containerInfo;if(l===i||l.nodeType===8&&l.parentNode===i)break;if(s===4)for(s=r.return;s!==null;){var a=s.tag;if((a===3||a===4)&&(a=s.stateNode.containerInfo,a===i||a.nodeType===8&&a.parentNode===i))return;s=s.return}for(;l!==null;){if(s=cn(l),s===null)return;if(a=s.tag,a===5||a===6){r=o=s;continue e}l=l.parentNode}}r=r.return}ph(function(){var u=o,c=Ra(n),f=[];e:{var d=Wh.get(e);if(d!==void 0){var g=Da,v=e;switch(e){case\"keypress\":if(Zi(n)===0)break e;case\"keydown\":case\"keyup\":g=iv;break;case\"focusin\":v=\"focus\",g=ks;break;case\"focusout\":v=\"blur\",g=ks;break;case\"beforeblur\":case\"afterblur\":g=ks;break;case\"click\":if(n.button===2)break e;case\"auxclick\":case\"dblclick\":case\"mousedown\":case\"mousemove\":case\"mouseup\":case\"mouseout\":case\"mouseover\":case\"contextmenu\":g=cc;break;case\"drag\":case\"dragend\":case\"dragenter\":case\"dragexit\":case\"dragleave\":case\"dragover\":case\"dragstart\":case\"drop\":g=Gg;break;case\"touchcancel\":case\"touchend\":case\"touchmove\":case\"touchstart\":g=lv;break;case Ih:case Bh:case Uh:g=Xg;break;case $h:g=uv;break;case\"scroll\":g=Hg;break;case\"wheel\":g=fv;break;case\"copy\":case\"cut\":case\"paste\":g=bg;break;case\"gotpointercapture\":case\"lostpointercapture\":case\"pointercancel\":case\"pointerdown\":case\"pointermove\":case\"pointerout\":case\"pointerover\":case\"pointerup\":g=dc}var y=(t&4)!==0,S=!y&&e===\"scroll\",p=y?d!==null?d+\"Capture\":null:d;y=[];for(var h=u,m;h!==null;){m=h;var w=m.stateNode;if(m.tag===5&&w!==null&&(m=w,p!==null&&(w=Kr(h,p),w!=null&&y.push(Jr(h,w,m)))),S)break;h=h.return}0<y.length&&(d=new g(d,v,null,n,c),f.push({event:d,listeners:y}))}}if(!(t&7)){e:{if(d=e===\"mouseover\"||e===\"pointerover\",g=e===\"mouseout\"||e===\"pointerout\",d&&n!==yl&&(v=n.relatedTarget||n.fromElement)&&(cn(v)||v[St]))break e;if((g||d)&&(d=c.window===c?c:(d=c.ownerDocument)?d.defaultView||d.parentWindow:window,g?(v=n.relatedTarget||n.toElement,g=u,v=v?cn(v):null,v!==null&&(S=En(v),v!==S||v.tag!==5&&v.tag!==6)&&(v=null)):(g=null,v=u),g!==v)){if(y=cc,w=\"onMouseLeave\",p=\"onMouseEnter\",h=\"mouse\",(e===\"pointerout\"||e===\"pointerover\")&&(y=dc,w=\"onPointerLeave\",p=\"onPointerEnter\",h=\"pointer\"),S=g==null?d:_n(g),m=v==null?d:_n(v),d=new y(w,h+\"leave\",g,n,c),d.target=S,d.relatedTarget=m,w=null,cn(c)===u&&(y=new y(p,h+\"enter\",v,n,c),y.target=m,y.relatedTarget=S,w=y),S=w,g&&v)t:{for(y=g,p=v,h=0,m=y;m;m=kn(m))h++;for(m=0,w=p;w;w=kn(w))m++;for(;0<h-m;)y=kn(y),h--;for(;0<m-h;)p=kn(p),m--;for(;h--;){if(y===p||p!==null&&y===p.alternate)break t;y=kn(y),p=kn(p)}y=null}else y=null;g!==null&&Cc(f,d,g,y,!1),v!==null&&S!==null&&Cc(f,S,v,y,!0)}}e:{if(d=u?_n(u):window,g=d.nodeName&&d.nodeName.toLowerCase(),g===\"select\"||g===\"input\"&&d.type===\"file\")var C=yv;else if(mc(d))if(Dh)C=Pv;else{C=wv;var k=xv}else(g=d.nodeName)&&g.toLowerCase()===\"input\"&&(d.type===\"checkbox\"||d.type===\"radio\")&&(C=Sv);if(C&&(C=C(e,u))){jh(f,C,n,c);break e}k&&k(e,d,u),e===\"focusout\"&&(k=d._wrapperState)&&k.controlled&&d.type===\"number\"&&hl(d,\"number\",d.value)}switch(k=u?_n(u):window,e){case\"focusin\":(mc(k)||k.contentEditable===\"true\")&&(Mn=k,Tl=u,jr=null);break;case\"focusout\":jr=Tl=Mn=null;break;case\"mousedown\":kl=!0;break;case\"contextmenu\":case\"mouseup\":case\"dragend\":kl=!1,wc(f,n,c);break;case\"selectionchange\":if(Tv)break;case\"keydown\":case\"keyup\":wc(f,n,c)}var R;if(Oa)e:{switch(e){case\"compositionstart\":var T=\"onCompositionStart\";break e;case\"compositionend\":T=\"onCompositionEnd\";break e;case\"compositionupdate\":T=\"onCompositionUpdate\";break e}T=void 0}else An?Vh(e,n)&&(T=\"onCompositionEnd\"):e===\"keydown\"&&n.keyCode===229&&(T=\"onCompositionStart\");T&&(Mh&&n.locale!==\"ko\"&&(An||T!==\"onCompositionStart\"?T===\"onCompositionEnd\"&&An&&(R=Ah()):(jt=c,ja=\"value\"in jt?jt.value:jt.textContent,An=!0)),k=vo(u,T),0<k.length&&(T=new fc(T,e,null,n,c),f.push({event:T,listeners:k}),R?T.data=R:(R=_h(n),R!==null&&(T.data=R)))),(R=hv?pv(e,n):mv(e,n))&&(u=vo(u,\"onBeforeInput\"),0<u.length&&(c=new fc(\"onBeforeInput\",\"beforeinput\",null,n,c),f.push({event:c,listeners:u}),c.data=R))}Hh(f,t)})}function Jr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function vo(e,t){for(var n=t+\"Capture\",r=[];e!==null;){var i=e,o=i.stateNode;i.tag===5&&o!==null&&(i=o,o=Kr(e,n),o!=null&&r.unshift(Jr(e,o,i)),o=Kr(e,t),o!=null&&r.push(Jr(e,o,i))),e=e.return}return r}function kn(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function Cc(e,t,n,r,i){for(var o=t._reactName,s=[];n!==null&&n!==r;){var l=n,a=l.alternate,u=l.stateNode;if(a!==null&&a===r)break;l.tag===5&&u!==null&&(l=u,i?(a=Kr(n,o),a!=null&&s.unshift(Jr(n,a,l))):i||(a=Kr(n,o),a!=null&&s.push(Jr(n,a,l)))),n=n.return}s.length!==0&&e.push({event:t,listeners:s})}var Av=/\\r\\n?/g,Mv=/\\u0000|\\uFFFD/g;function Ec(e){return(typeof e==\"string\"?e:\"\"+e).replace(Av,`\n`).replace(Mv,\"\")}function Ni(e,t,n){if(t=Ec(t),Ec(e)!==t&&n)throw Error(E(425))}function yo(){}var Ll=null,Rl=null;function Al(e,t){return e===\"textarea\"||e===\"noscript\"||typeof t.children==\"string\"||typeof t.children==\"number\"||typeof t.dangerouslySetInnerHTML==\"object\"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var Ml=typeof setTimeout==\"function\"?setTimeout:void 0,Vv=typeof clearTimeout==\"function\"?clearTimeout:void 0,Tc=typeof Promise==\"function\"?Promise:void 0,_v=typeof queueMicrotask==\"function\"?queueMicrotask:typeof Tc<\"u\"?function(e){return Tc.resolve(null).then(e).catch(jv)}:Ml;function jv(e){setTimeout(function(){throw e})}function Ds(e,t){var n=t,r=0;do{var i=n.nextSibling;if(e.removeChild(n),i&&i.nodeType===8)if(n=i.data,n===\"/$\"){if(r===0){e.removeChild(i),Yr(t);return}r--}else n!==\"$\"&&n!==\"$?\"&&n!==\"$!\"||r++;n=i}while(n);Yr(t)}function It(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t===\"$\"||t===\"$!\"||t===\"$?\")break;if(t===\"/$\")return null}}return e}function kc(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var n=e.data;if(n===\"$\"||n===\"$!\"||n===\"$?\"){if(t===0)return e;t--}else n===\"/$\"&&t++}e=e.previousSibling}return null}var lr=Math.random().toString(36).slice(2),nt=\"__reactFiber$\"+lr,qr=\"__reactProps$\"+lr,St=\"__reactContainer$\"+lr,Vl=\"__reactEvents$\"+lr,Dv=\"__reactListeners$\"+lr,Nv=\"__reactHandles$\"+lr;function cn(e){var t=e[nt];if(t)return t;for(var n=e.parentNode;n;){if(t=n[St]||n[nt]){if(n=t.alternate,t.child!==null||n!==null&&n.child!==null)for(e=kc(e);e!==null;){if(n=e[nt])return n;e=kc(e)}return t}e=n,n=e.parentNode}return null}function mi(e){return e=e[nt]||e[St],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function _n(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(E(33))}function Zo(e){return e[qr]||null}var _l=[],jn=-1;function Zt(e){return{current:e}}function U(e){0>jn||(e.current=_l[jn],_l[jn]=null,jn--)}function I(e,t){jn++,_l[jn]=e.current,e.current=t}var Gt={},ge=Zt(Gt),Ee=Zt(!1),vn=Gt;function bn(e,t){var n=e.type.contextTypes;if(!n)return Gt;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i={},o;for(o in n)i[o]=t[o];return r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Te(e){return e=e.childContextTypes,e!=null}function xo(){U(Ee),U(ge)}function Lc(e,t,n){if(ge.current!==Gt)throw Error(E(168));I(ge,t),I(Ee,n)}function Gh(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,typeof r.getChildContext!=\"function\")return n;r=r.getChildContext();for(var i in r)if(!(i in t))throw Error(E(108,xg(e)||\"Unknown\",i));return G({},n,r)}function wo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Gt,vn=ge.current,I(ge,e),I(Ee,Ee.current),!0}function Rc(e,t,n){var r=e.stateNode;if(!r)throw Error(E(169));n?(e=Gh(e,t,vn),r.__reactInternalMemoizedMergedChildContext=e,U(Ee),U(ge),I(ge,e)):U(Ee),I(Ee,n)}var ct=null,bo=!1,Ns=!1;function Qh(e){ct===null?ct=[e]:ct.push(e)}function Ov(e){bo=!0,Qh(e)}function bt(){if(!Ns&&ct!==null){Ns=!0;var e=0,t=F;try{var n=ct;for(F=1;e<n.length;e++){var r=n[e];do r=r(!0);while(r!==null)}ct=null,bo=!1}catch(i){throw ct!==null&&(ct=ct.slice(e+1)),yh(Aa,bt),i}finally{F=t,Ns=!1}}return null}var Dn=[],Nn=0,So=null,Po=0,Oe=[],ze=0,yn=null,ft=1,dt=\"\";function sn(e,t){Dn[Nn++]=Po,Dn[Nn++]=So,So=e,Po=t}function Yh(e,t,n){Oe[ze++]=ft,Oe[ze++]=dt,Oe[ze++]=yn,yn=e;var r=ft;e=dt;var i=32-Ye(r)-1;r&=~(1<<i),n+=1;var o=32-Ye(t)+i;if(30<o){var s=i-i%5;o=(r&(1<<s)-1).toString(32),r>>=s,i-=s,ft=1<<32-Ye(t)+i|n<<i|r,dt=o+e}else ft=1<<o|n<<i|r,dt=e}function Fa(e){e.return!==null&&(sn(e,1),Yh(e,1,0))}function Ia(e){for(;e===So;)So=Dn[--Nn],Dn[Nn]=null,Po=Dn[--Nn],Dn[Nn]=null;for(;e===yn;)yn=Oe[--ze],Oe[ze]=null,dt=Oe[--ze],Oe[ze]=null,ft=Oe[--ze],Oe[ze]=null}var Ae=null,Re=null,$=!1,Ge=null;function Xh(e,t){var n=Fe(5,null,null,0);n.elementType=\"DELETED\",n.stateNode=t,n.return=e,t=e.deletions,t===null?(e.deletions=[n],e.flags|=16):t.push(n)}function Ac(e,t){switch(e.tag){case 5:var n=e.type;return t=t.nodeType!==1||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t,t!==null?(e.stateNode=t,Ae=e,Re=It(t.firstChild),!0):!1;case 6:return t=e.pendingProps===\"\"||t.nodeType!==3?null:t,t!==null?(e.stateNode=t,Ae=e,Re=null,!0):!1;case 13:return t=t.nodeType!==8?null:t,t!==null?(n=yn!==null?{id:ft,overflow:dt}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},n=Fe(18,null,null,0),n.stateNode=t,n.return=e,e.child=n,Ae=e,Re=null,!0):!1;default:return!1}}function jl(e){return(e.mode&1)!==0&&(e.flags&128)===0}function Dl(e){if($){var t=Re;if(t){var n=t;if(!Ac(e,t)){if(jl(e))throw Error(E(418));t=It(n.nextSibling);var r=Ae;t&&Ac(e,t)?Xh(r,n):(e.flags=e.flags&-4097|2,$=!1,Ae=e)}}else{if(jl(e))throw Error(E(418));e.flags=e.flags&-4097|2,$=!1,Ae=e}}}function Mc(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;Ae=e}function Oi(e){if(e!==Ae)return!1;if(!$)return Mc(e),$=!0,!1;var t;if((t=e.tag!==3)&&!(t=e.tag!==5)&&(t=e.type,t=t!==\"head\"&&t!==\"body\"&&!Al(e.type,e.memoizedProps)),t&&(t=Re)){if(jl(e))throw Zh(),Error(E(418));for(;t;)Xh(e,t),t=It(t.nextSibling)}if(Mc(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(E(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8){var n=e.data;if(n===\"/$\"){if(t===0){Re=It(e.nextSibling);break e}t--}else n!==\"$\"&&n!==\"$!\"&&n!==\"$?\"||t++}e=e.nextSibling}Re=null}}else Re=Ae?It(e.stateNode.nextSibling):null;return!0}function Zh(){for(var e=Re;e;)e=It(e.nextSibling)}function Jn(){Re=Ae=null,$=!1}function Ba(e){Ge===null?Ge=[e]:Ge.push(e)}var zv=Et.ReactCurrentBatchConfig;function yr(e,t,n){if(e=n.ref,e!==null&&typeof e!=\"function\"&&typeof e!=\"object\"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(E(309));var r=n.stateNode}if(!r)throw Error(E(147,e));var i=r,o=\"\"+e;return t!==null&&t.ref!==null&&typeof t.ref==\"function\"&&t.ref._stringRef===o?t.ref:(t=function(s){var l=i.refs;s===null?delete l[o]:l[o]=s},t._stringRef=o,t)}if(typeof e!=\"string\")throw Error(E(284));if(!n._owner)throw Error(E(290,e))}return e}function zi(e,t){throw e=Object.prototype.toString.call(t),Error(E(31,e===\"[object Object]\"?\"object with keys {\"+Object.keys(t).join(\", \")+\"}\":e))}function Vc(e){var t=e._init;return t(e._payload)}function bh(e){function t(p,h){if(e){var m=p.deletions;m===null?(p.deletions=[h],p.flags|=16):m.push(h)}}function n(p,h){if(!e)return null;for(;h!==null;)t(p,h),h=h.sibling;return null}function r(p,h){for(p=new Map;h!==null;)h.key!==null?p.set(h.key,h):p.set(h.index,h),h=h.sibling;return p}function i(p,h){return p=Wt(p,h),p.index=0,p.sibling=null,p}function o(p,h,m){return p.index=m,e?(m=p.alternate,m!==null?(m=m.index,m<h?(p.flags|=2,h):m):(p.flags|=2,h)):(p.flags|=1048576,h)}function s(p){return e&&p.alternate===null&&(p.flags|=2),p}function l(p,h,m,w){return h===null||h.tag!==6?(h=$s(m,p.mode,w),h.return=p,h):(h=i(h,m),h.return=p,h)}function a(p,h,m,w){var C=m.type;return C===Rn?c(p,h,m.props.children,w,m.key):h!==null&&(h.elementType===C||typeof C==\"object\"&&C!==null&&C.$$typeof===At&&Vc(C)===h.type)?(w=i(h,m.props),w.ref=yr(p,h,m),w.return=p,w):(w=ro(m.type,m.key,m.props,null,p.mode,w),w.ref=yr(p,h,m),w.return=p,w)}function u(p,h,m,w){return h===null||h.tag!==4||h.stateNode.containerInfo!==m.containerInfo||h.stateNode.implementation!==m.implementation?(h=Ws(m,p.mode,w),h.return=p,h):(h=i(h,m.children||[]),h.return=p,h)}function c(p,h,m,w,C){return h===null||h.tag!==7?(h=mn(m,p.mode,w,C),h.return=p,h):(h=i(h,m),h.return=p,h)}function f(p,h,m){if(typeof h==\"string\"&&h!==\"\"||typeof h==\"number\")return h=$s(\"\"+h,p.mode,m),h.return=p,h;if(typeof h==\"object\"&&h!==null){switch(h.$$typeof){case ki:return m=ro(h.type,h.key,h.props,null,p.mode,m),m.ref=yr(p,null,h),m.return=p,m;case Ln:return h=Ws(h,p.mode,m),h.return=p,h;case At:var w=h._init;return f(p,w(h._payload),m)}if(Er(h)||hr(h))return h=mn(h,p.mode,m,null),h.return=p,h;zi(p,h)}return null}function d(p,h,m,w){var C=h!==null?h.key:null;if(typeof m==\"string\"&&m!==\"\"||typeof m==\"number\")return C!==null?null:l(p,h,\"\"+m,w);if(typeof m==\"object\"&&m!==null){switch(m.$$typeof){case ki:return m.key===C?a(p,h,m,w):null;case Ln:return m.key===C?u(p,h,m,w):null;case At:return C=m._init,d(p,h,C(m._payload),w)}if(Er(m)||hr(m))return C!==null?null:c(p,h,m,w,null);zi(p,m)}return null}function g(p,h,m,w,C){if(typeof w==\"string\"&&w!==\"\"||typeof w==\"number\")return p=p.get(m)||null,l(h,p,\"\"+w,C);if(typeof w==\"object\"&&w!==null){switch(w.$$typeof){case ki:return p=p.get(w.key===null?m:w.key)||null,a(h,p,w,C);case Ln:return p=p.get(w.key===null?m:w.key)||null,u(h,p,w,C);case At:var k=w._init;return g(p,h,m,k(w._payload),C)}if(Er(w)||hr(w))return p=p.get(m)||null,c(h,p,w,C,null);zi(h,w)}return null}function v(p,h,m,w){for(var C=null,k=null,R=h,T=h=0,N=null;R!==null&&T<m.length;T++){R.index>T?(N=R,R=null):N=R.sibling;var V=d(p,R,m[T],w);if(V===null){R===null&&(R=N);break}e&&R&&V.alternate===null&&t(p,R),h=o(V,h,T),k===null?C=V:k.sibling=V,k=V,R=N}if(T===m.length)return n(p,R),$&&sn(p,T),C;if(R===null){for(;T<m.length;T++)R=f(p,m[T],w),R!==null&&(h=o(R,h,T),k===null?C=R:k.sibling=R,k=R);return $&&sn(p,T),C}for(R=r(p,R);T<m.length;T++)N=g(R,p,T,m[T],w),N!==null&&(e&&N.alternate!==null&&R.delete(N.key===null?T:N.key),h=o(N,h,T),k===null?C=N:k.sibling=N,k=N);return e&&R.forEach(function(ne){return t(p,ne)}),$&&sn(p,T),C}function y(p,h,m,w){var C=hr(m);if(typeof C!=\"function\")throw Error(E(150));if(m=C.call(m),m==null)throw Error(E(151));for(var k=C=null,R=h,T=h=0,N=null,V=m.next();R!==null&&!V.done;T++,V=m.next()){R.index>T?(N=R,R=null):N=R.sibling;var ne=d(p,R,V.value,w);if(ne===null){R===null&&(R=N);break}e&&R&&ne.alternate===null&&t(p,R),h=o(ne,h,T),k===null?C=ne:k.sibling=ne,k=ne,R=N}if(V.done)return n(p,R),$&&sn(p,T),C;if(R===null){for(;!V.done;T++,V=m.next())V=f(p,V.value,w),V!==null&&(h=o(V,h,T),k===null?C=V:k.sibling=V,k=V);return $&&sn(p,T),C}for(R=r(p,R);!V.done;T++,V=m.next())V=g(R,p,T,V.value,w),V!==null&&(e&&V.alternate!==null&&R.delete(V.key===null?T:V.key),h=o(V,h,T),k===null?C=V:k.sibling=V,k=V);return e&&R.forEach(function(Tt){return t(p,Tt)}),$&&sn(p,T),C}function S(p,h,m,w){if(typeof m==\"object\"&&m!==null&&m.type===Rn&&m.key===null&&(m=m.props.children),typeof m==\"object\"&&m!==null){switch(m.$$typeof){case ki:e:{for(var C=m.key,k=h;k!==null;){if(k.key===C){if(C=m.type,C===Rn){if(k.tag===7){n(p,k.sibling),h=i(k,m.props.children),h.return=p,p=h;break e}}else if(k.elementType===C||typeof C==\"object\"&&C!==null&&C.$$typeof===At&&Vc(C)===k.type){n(p,k.sibling),h=i(k,m.props),h.ref=yr(p,k,m),h.return=p,p=h;break e}n(p,k);break}else t(p,k);k=k.sibling}m.type===Rn?(h=mn(m.props.children,p.mode,w,m.key),h.return=p,p=h):(w=ro(m.type,m.key,m.props,null,p.mode,w),w.ref=yr(p,h,m),w.return=p,p=w)}return s(p);case Ln:e:{for(k=m.key;h!==null;){if(h.key===k)if(h.tag===4&&h.stateNode.containerInfo===m.containerInfo&&h.stateNode.implementation===m.implementation){n(p,h.sibling),h=i(h,m.children||[]),h.return=p,p=h;break e}else{n(p,h);break}else t(p,h);h=h.sibling}h=Ws(m,p.mode,w),h.return=p,p=h}return s(p);case At:return k=m._init,S(p,h,k(m._payload),w)}if(Er(m))return v(p,h,m,w);if(hr(m))return y(p,h,m,w);zi(p,m)}return typeof m==\"string\"&&m!==\"\"||typeof m==\"number\"?(m=\"\"+m,h!==null&&h.tag===6?(n(p,h.sibling),h=i(h,m),h.return=p,p=h):(n(p,h),h=$s(m,p.mode,w),h.return=p,p=h),s(p)):n(p,h)}return S}var qn=bh(!0),Jh=bh(!1),Co=Zt(null),Eo=null,On=null,Ua=null;function $a(){Ua=On=Eo=null}function Wa(e){var t=Co.current;U(Co),e._currentValue=t}function Nl(e,t,n){for(;e!==null;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,r!==null&&(r.childLanes|=t)):r!==null&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Yn(e,t){Eo=e,Ua=On=null,e=e.dependencies,e!==null&&e.firstContext!==null&&(e.lanes&t&&(Ce=!0),e.firstContext=null)}function Be(e){var t=e._currentValue;if(Ua!==e)if(e={context:e,memoizedValue:t,next:null},On===null){if(Eo===null)throw Error(E(308));On=e,Eo.dependencies={lanes:0,firstContext:e}}else On=On.next=e;return t}var fn=null;function Ha(e){fn===null?fn=[e]:fn.push(e)}function qh(e,t,n,r){var i=t.interleaved;return i===null?(n.next=n,Ha(t)):(n.next=i.next,i.next=n),t.interleaved=n,Pt(e,r)}function Pt(e,t){e.lanes|=t;var n=e.alternate;for(n!==null&&(n.lanes|=t),n=e,e=e.return;e!==null;)e.childLanes|=t,n=e.alternate,n!==null&&(n.childLanes|=t),n=e,e=e.return;return n.tag===3?n.stateNode:null}var Mt=!1;function Ka(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function ep(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function mt(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Bt(e,t,n){var r=e.updateQueue;if(r===null)return null;if(r=r.shared,z&2){var i=r.pending;return i===null?t.next=t:(t.next=i.next,i.next=t),r.pending=t,Pt(e,n)}return i=r.interleaved,i===null?(t.next=t,Ha(r)):(t.next=i.next,i.next=t),r.interleaved=t,Pt(e,n)}function bi(e,t,n){if(t=t.updateQueue,t!==null&&(t=t.shared,(n&4194240)!==0)){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,Ma(e,n)}}function _c(e,t){var n=e.updateQueue,r=e.alternate;if(r!==null&&(r=r.updateQueue,n===r)){var i=null,o=null;if(n=n.firstBaseUpdate,n!==null){do{var s={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};o===null?i=o=s:o=o.next=s,n=n.next}while(n!==null);o===null?i=o=t:o=o.next=t}else i=o=t;n={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:o,shared:r.shared,effects:r.effects},e.updateQueue=n;return}e=n.lastBaseUpdate,e===null?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function To(e,t,n,r){var i=e.updateQueue;Mt=!1;var o=i.firstBaseUpdate,s=i.lastBaseUpdate,l=i.shared.pending;if(l!==null){i.shared.pending=null;var a=l,u=a.next;a.next=null,s===null?o=u:s.next=u,s=a;var c=e.alternate;c!==null&&(c=c.updateQueue,l=c.lastBaseUpdate,l!==s&&(l===null?c.firstBaseUpdate=u:l.next=u,c.lastBaseUpdate=a))}if(o!==null){var f=i.baseState;s=0,c=u=a=null,l=o;do{var d=l.lane,g=l.eventTime;if((r&d)===d){c!==null&&(c=c.next={eventTime:g,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var v=e,y=l;switch(d=t,g=n,y.tag){case 1:if(v=y.payload,typeof v==\"function\"){f=v.call(g,f,d);break e}f=v;break e;case 3:v.flags=v.flags&-65537|128;case 0:if(v=y.payload,d=typeof v==\"function\"?v.call(g,f,d):v,d==null)break e;f=G({},f,d);break e;case 2:Mt=!0}}l.callback!==null&&l.lane!==0&&(e.flags|=64,d=i.effects,d===null?i.effects=[l]:d.push(l))}else g={eventTime:g,lane:d,tag:l.tag,payload:l.payload,callback:l.callback,next:null},c===null?(u=c=g,a=f):c=c.next=g,s|=d;if(l=l.next,l===null){if(l=i.shared.pending,l===null)break;d=l,l=d.next,d.next=null,i.lastBaseUpdate=d,i.shared.pending=null}}while(!0);if(c===null&&(a=f),i.baseState=a,i.firstBaseUpdate=u,i.lastBaseUpdate=c,t=i.shared.interleaved,t!==null){i=t;do s|=i.lane,i=i.next;while(i!==t)}else o===null&&(i.shared.lanes=0);wn|=s,e.lanes=s,e.memoizedState=f}}function jc(e,t,n){if(e=t.effects,t.effects=null,e!==null)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(i!==null){if(r.callback=null,r=n,typeof i!=\"function\")throw Error(E(191,i));i.call(r)}}}var gi={},ot=Zt(gi),ei=Zt(gi),ti=Zt(gi);function dn(e){if(e===gi)throw Error(E(174));return e}function Ga(e,t){switch(I(ti,t),I(ei,e),I(ot,gi),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ml(null,\"\");break;default:e=e===8?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=ml(t,e)}U(ot),I(ot,t)}function er(){U(ot),U(ei),U(ti)}function tp(e){dn(ti.current);var t=dn(ot.current),n=ml(t,e.type);t!==n&&(I(ei,e),I(ot,n))}function Qa(e){ei.current===e&&(U(ot),U(ei))}var W=Zt(0);function ko(e){for(var t=e;t!==null;){if(t.tag===13){var n=t.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data===\"$?\"||n.data===\"$!\"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if(t.flags&128)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Os=[];function Ya(){for(var e=0;e<Os.length;e++)Os[e]._workInProgressVersionPrimary=null;Os.length=0}var Ji=Et.ReactCurrentDispatcher,zs=Et.ReactCurrentBatchConfig,xn=0,K=null,ee=null,oe=null,Lo=!1,Dr=!1,ni=0,Fv=0;function fe(){throw Error(E(321))}function Xa(e,t){if(t===null)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Ze(e[n],t[n]))return!1;return!0}function Za(e,t,n,r,i,o){if(xn=o,K=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ji.current=e===null||e.memoizedState===null?$v:Wv,e=n(r,i),Dr){o=0;do{if(Dr=!1,ni=0,25<=o)throw Error(E(301));o+=1,oe=ee=null,t.updateQueue=null,Ji.current=Hv,e=n(r,i)}while(Dr)}if(Ji.current=Ro,t=ee!==null&&ee.next!==null,xn=0,oe=ee=K=null,Lo=!1,t)throw Error(E(300));return e}function ba(){var e=ni!==0;return ni=0,e}function tt(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return oe===null?K.memoizedState=oe=e:oe=oe.next=e,oe}function Ue(){if(ee===null){var e=K.alternate;e=e!==null?e.memoizedState:null}else e=ee.next;var t=oe===null?K.memoizedState:oe.next;if(t!==null)oe=t,ee=e;else{if(e===null)throw Error(E(310));ee=e,e={memoizedState:ee.memoizedState,baseState:ee.baseState,baseQueue:ee.baseQueue,queue:ee.queue,next:null},oe===null?K.memoizedState=oe=e:oe=oe.next=e}return oe}function ri(e,t){return typeof t==\"function\"?t(e):t}function Fs(e){var t=Ue(),n=t.queue;if(n===null)throw Error(E(311));n.lastRenderedReducer=e;var r=ee,i=r.baseQueue,o=n.pending;if(o!==null){if(i!==null){var s=i.next;i.next=o.next,o.next=s}r.baseQueue=i=o,n.pending=null}if(i!==null){o=i.next,r=r.baseState;var l=s=null,a=null,u=o;do{var c=u.lane;if((xn&c)===c)a!==null&&(a=a.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var f={lane:c,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};a===null?(l=a=f,s=r):a=a.next=f,K.lanes|=c,wn|=c}u=u.next}while(u!==null&&u!==o);a===null?s=r:a.next=l,Ze(r,t.memoizedState)||(Ce=!0),t.memoizedState=r,t.baseState=s,t.baseQueue=a,n.lastRenderedState=r}if(e=n.interleaved,e!==null){i=e;do o=i.lane,K.lanes|=o,wn|=o,i=i.next;while(i!==e)}else i===null&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Is(e){var t=Ue(),n=t.queue;if(n===null)throw Error(E(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,o=t.memoizedState;if(i!==null){n.pending=null;var s=i=i.next;do o=e(o,s.action),s=s.next;while(s!==i);Ze(o,t.memoizedState)||(Ce=!0),t.memoizedState=o,t.baseQueue===null&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function np(){}function rp(e,t){var n=K,r=Ue(),i=t(),o=!Ze(r.memoizedState,i);if(o&&(r.memoizedState=i,Ce=!0),r=r.queue,Ja(sp.bind(null,n,r,e),[e]),r.getSnapshot!==t||o||oe!==null&&oe.memoizedState.tag&1){if(n.flags|=2048,ii(9,op.bind(null,n,r,i,t),void 0,null),se===null)throw Error(E(349));xn&30||ip(n,t,i)}return i}function ip(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},t=K.updateQueue,t===null?(t={lastEffect:null,stores:null},K.updateQueue=t,t.stores=[e]):(n=t.stores,n===null?t.stores=[e]:n.push(e))}function op(e,t,n,r){t.value=n,t.getSnapshot=r,lp(t)&&ap(e)}function sp(e,t,n){return n(function(){lp(t)&&ap(e)})}function lp(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!Ze(e,n)}catch{return!0}}function ap(e){var t=Pt(e,1);t!==null&&Xe(t,e,1,-1)}function Dc(e){var t=tt();return typeof e==\"function\"&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ri,lastRenderedState:e},t.queue=e,e=e.dispatch=Uv.bind(null,K,e),[t.memoizedState,e]}function ii(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},t=K.updateQueue,t===null?(t={lastEffect:null,stores:null},K.updateQueue=t,t.lastEffect=e.next=e):(n=t.lastEffect,n===null?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e)),e}function up(){return Ue().memoizedState}function qi(e,t,n,r){var i=tt();K.flags|=e,i.memoizedState=ii(1|t,n,void 0,r===void 0?null:r)}function Jo(e,t,n,r){var i=Ue();r=r===void 0?null:r;var o=void 0;if(ee!==null){var s=ee.memoizedState;if(o=s.destroy,r!==null&&Xa(r,s.deps)){i.memoizedState=ii(t,n,o,r);return}}K.flags|=e,i.memoizedState=ii(1|t,n,o,r)}function Nc(e,t){return qi(8390656,8,e,t)}function Ja(e,t){return Jo(2048,8,e,t)}function cp(e,t){return Jo(4,2,e,t)}function fp(e,t){return Jo(4,4,e,t)}function dp(e,t){if(typeof t==\"function\")return e=e(),t(e),function(){t(null)};if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function hp(e,t,n){return n=n!=null?n.concat([e]):null,Jo(4,4,dp.bind(null,t,e),n)}function qa(){}function pp(e,t){var n=Ue();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&Xa(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function mp(e,t){var n=Ue();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&Xa(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function gp(e,t,n){return xn&21?(Ze(n,t)||(n=Sh(),K.lanes|=n,wn|=n,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,Ce=!0),e.memoizedState=n)}function Iv(e,t){var n=F;F=n!==0&&4>n?n:4,e(!0);var r=zs.transition;zs.transition={};try{e(!1),t()}finally{F=n,zs.transition=r}}function vp(){return Ue().memoizedState}function Bv(e,t,n){var r=$t(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},yp(e))xp(t,n);else if(n=qh(e,t,n,r),n!==null){var i=xe();Xe(n,e,r,i),wp(n,t,r)}}function Uv(e,t,n){var r=$t(e),i={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(yp(e))xp(t,i);else{var o=e.alternate;if(e.lanes===0&&(o===null||o.lanes===0)&&(o=t.lastRenderedReducer,o!==null))try{var s=t.lastRenderedState,l=o(s,n);if(i.hasEagerState=!0,i.eagerState=l,Ze(l,s)){var a=t.interleaved;a===null?(i.next=i,Ha(t)):(i.next=a.next,a.next=i),t.interleaved=i;return}}catch{}finally{}n=qh(e,t,i,r),n!==null&&(i=xe(),Xe(n,e,r,i),wp(n,t,r))}}function yp(e){var t=e.alternate;return e===K||t!==null&&t===K}function xp(e,t){Dr=Lo=!0;var n=e.pending;n===null?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function wp(e,t,n){if(n&4194240){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,Ma(e,n)}}var Ro={readContext:Be,useCallback:fe,useContext:fe,useEffect:fe,useImperativeHandle:fe,useInsertionEffect:fe,useLayoutEffect:fe,useMemo:fe,useReducer:fe,useRef:fe,useState:fe,useDebugValue:fe,useDeferredValue:fe,useTransition:fe,useMutableSource:fe,useSyncExternalStore:fe,useId:fe,unstable_isNewReconciler:!1},$v={readContext:Be,useCallback:function(e,t){return tt().memoizedState=[e,t===void 0?null:t],e},useContext:Be,useEffect:Nc,useImperativeHandle:function(e,t,n){return n=n!=null?n.concat([e]):null,qi(4194308,4,dp.bind(null,t,e),n)},useLayoutEffect:function(e,t){return qi(4194308,4,e,t)},useInsertionEffect:function(e,t){return qi(4,2,e,t)},useMemo:function(e,t){var n=tt();return t=t===void 0?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=tt();return t=n!==void 0?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Bv.bind(null,K,e),[r.memoizedState,e]},useRef:function(e){var t=tt();return e={current:e},t.memoizedState=e},useState:Dc,useDebugValue:qa,useDeferredValue:function(e){return tt().memoizedState=e},useTransition:function(){var e=Dc(!1),t=e[0];return e=Iv.bind(null,e[1]),tt().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=K,i=tt();if($){if(n===void 0)throw Error(E(407));n=n()}else{if(n=t(),se===null)throw Error(E(349));xn&30||ip(r,t,n)}i.memoizedState=n;var o={value:n,getSnapshot:t};return i.queue=o,Nc(sp.bind(null,r,o,e),[e]),r.flags|=2048,ii(9,op.bind(null,r,o,n,t),void 0,null),n},useId:function(){var e=tt(),t=se.identifierPrefix;if($){var n=dt,r=ft;n=(r&~(1<<32-Ye(r)-1)).toString(32)+n,t=\":\"+t+\"R\"+n,n=ni++,0<n&&(t+=\"H\"+n.toString(32)),t+=\":\"}else n=Fv++,t=\":\"+t+\"r\"+n.toString(32)+\":\";return e.memoizedState=t},unstable_isNewReconciler:!1},Wv={readContext:Be,useCallback:pp,useContext:Be,useEffect:Ja,useImperativeHandle:hp,useInsertionEffect:cp,useLayoutEffect:fp,useMemo:mp,useReducer:Fs,useRef:up,useState:function(){return Fs(ri)},useDebugValue:qa,useDeferredValue:function(e){var t=Ue();return gp(t,ee.memoizedState,e)},useTransition:function(){var e=Fs(ri)[0],t=Ue().memoizedState;return[e,t]},useMutableSource:np,useSyncExternalStore:rp,useId:vp,unstable_isNewReconciler:!1},Hv={readContext:Be,useCallback:pp,useContext:Be,useEffect:Ja,useImperativeHandle:hp,useInsertionEffect:cp,useLayoutEffect:fp,useMemo:mp,useReducer:Is,useRef:up,useState:function(){return Is(ri)},useDebugValue:qa,useDeferredValue:function(e){var t=Ue();return ee===null?t.memoizedState=e:gp(t,ee.memoizedState,e)},useTransition:function(){var e=Is(ri)[0],t=Ue().memoizedState;return[e,t]},useMutableSource:np,useSyncExternalStore:rp,useId:vp,unstable_isNewReconciler:!1};function He(e,t){if(e&&e.defaultProps){t=G({},t),e=e.defaultProps;for(var n in e)t[n]===void 0&&(t[n]=e[n]);return t}return t}function Ol(e,t,n,r){t=e.memoizedState,n=n(r,t),n=n==null?t:G({},t,n),e.memoizedState=n,e.lanes===0&&(e.updateQueue.baseState=n)}var qo={isMounted:function(e){return(e=e._reactInternals)?En(e)===e:!1},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=xe(),i=$t(e),o=mt(r,i);o.payload=t,n!=null&&(o.callback=n),t=Bt(e,o,i),t!==null&&(Xe(t,e,i,r),bi(t,e,i))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=xe(),i=$t(e),o=mt(r,i);o.tag=1,o.payload=t,n!=null&&(o.callback=n),t=Bt(e,o,i),t!==null&&(Xe(t,e,i,r),bi(t,e,i))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=xe(),r=$t(e),i=mt(n,r);i.tag=2,t!=null&&(i.callback=t),t=Bt(e,i,r),t!==null&&(Xe(t,e,r,n),bi(t,e,r))}};function Oc(e,t,n,r,i,o,s){return e=e.stateNode,typeof e.shouldComponentUpdate==\"function\"?e.shouldComponentUpdate(r,o,s):t.prototype&&t.prototype.isPureReactComponent?!Zr(n,r)||!Zr(i,o):!0}function Sp(e,t,n){var r=!1,i=Gt,o=t.contextType;return typeof o==\"object\"&&o!==null?o=Be(o):(i=Te(t)?vn:ge.current,r=t.contextTypes,o=(r=r!=null)?bn(e,i):Gt),t=new t(n,o),e.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,t.updater=qo,e.stateNode=t,t._reactInternals=e,r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),t}function zc(e,t,n,r){e=t.state,typeof t.componentWillReceiveProps==\"function\"&&t.componentWillReceiveProps(n,r),typeof t.UNSAFE_componentWillReceiveProps==\"function\"&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&qo.enqueueReplaceState(t,t.state,null)}function zl(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs={},Ka(e);var o=t.contextType;typeof o==\"object\"&&o!==null?i.context=Be(o):(o=Te(t)?vn:ge.current,i.context=bn(e,o)),i.state=e.memoizedState,o=t.getDerivedStateFromProps,typeof o==\"function\"&&(Ol(e,t,o,n),i.state=e.memoizedState),typeof t.getDerivedStateFromProps==\"function\"||typeof i.getSnapshotBeforeUpdate==\"function\"||typeof i.UNSAFE_componentWillMount!=\"function\"&&typeof i.componentWillMount!=\"function\"||(t=i.state,typeof i.componentWillMount==\"function\"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount==\"function\"&&i.UNSAFE_componentWillMount(),t!==i.state&&qo.enqueueReplaceState(i,i.state,null),To(e,n,i,r),i.state=e.memoizedState),typeof i.componentDidMount==\"function\"&&(e.flags|=4194308)}function tr(e,t){try{var n=\"\",r=t;do n+=yg(r),r=r.return;while(r);var i=n}catch(o){i=`\nError generating stack: `+o.message+`\n`+o.stack}return{value:e,source:t,stack:i,digest:null}}function Bs(e,t,n){return{value:e,source:null,stack:n??null,digest:t??null}}function Fl(e,t){try{console.error(t.value)}catch(n){setTimeout(function(){throw n})}}var Kv=typeof WeakMap==\"function\"?WeakMap:Map;function Pp(e,t,n){n=mt(-1,n),n.tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Mo||(Mo=!0,Yl=r),Fl(e,t)},n}function Cp(e,t,n){n=mt(-1,n),n.tag=3;var r=e.type.getDerivedStateFromError;if(typeof r==\"function\"){var i=t.value;n.payload=function(){return r(i)},n.callback=function(){Fl(e,t)}}var o=e.stateNode;return o!==null&&typeof o.componentDidCatch==\"function\"&&(n.callback=function(){Fl(e,t),typeof r!=\"function\"&&(Ut===null?Ut=new Set([this]):Ut.add(this));var s=t.stack;this.componentDidCatch(t.value,{componentStack:s!==null?s:\"\"})}),n}function Fc(e,t,n){var r=e.pingCache;if(r===null){r=e.pingCache=new Kv;var i=new Set;r.set(t,i)}else i=r.get(t),i===void 0&&(i=new Set,r.set(t,i));i.has(n)||(i.add(n),e=oy.bind(null,e,t,n),t.then(e,e))}function Ic(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function Bc(e,t,n,r,i){return e.mode&1?(e.flags|=65536,e.lanes=i,e):(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(t=mt(-1,1),t.tag=2,Bt(n,t,1))),n.lanes|=1),e)}var Gv=Et.ReactCurrentOwner,Ce=!1;function ve(e,t,n,r){t.child=e===null?Jh(t,null,n,r):qn(t,e.child,n,r)}function Uc(e,t,n,r,i){n=n.render;var o=t.ref;return Yn(t,i),r=Za(e,t,n,r,o,i),n=ba(),e!==null&&!Ce?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,Ct(e,t,i)):($&&n&&Fa(t),t.flags|=1,ve(e,t,r,i),t.child)}function $c(e,t,n,r,i){if(e===null){var o=n.type;return typeof o==\"function\"&&!lu(o)&&o.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(t.tag=15,t.type=o,Ep(e,t,o,r,i)):(e=ro(n.type,null,r,t,t.mode,i),e.ref=t.ref,e.return=t,t.child=e)}if(o=e.child,!(e.lanes&i)){var s=o.memoizedProps;if(n=n.compare,n=n!==null?n:Zr,n(s,r)&&e.ref===t.ref)return Ct(e,t,i)}return t.flags|=1,e=Wt(o,r),e.ref=t.ref,e.return=t,t.child=e}function Ep(e,t,n,r,i){if(e!==null){var o=e.memoizedProps;if(Zr(o,r)&&e.ref===t.ref)if(Ce=!1,t.pendingProps=r=o,(e.lanes&i)!==0)e.flags&131072&&(Ce=!0);else return t.lanes=e.lanes,Ct(e,t,i)}return Il(e,t,n,r,i)}function Tp(e,t,n){var r=t.pendingProps,i=r.children,o=e!==null?e.memoizedState:null;if(r.mode===\"hidden\")if(!(t.mode&1))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},I(Fn,Le),Le|=n;else{if(!(n&1073741824))return e=o!==null?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,I(Fn,Le),Le|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=o!==null?o.baseLanes:n,I(Fn,Le),Le|=r}else o!==null?(r=o.baseLanes|n,t.memoizedState=null):r=n,I(Fn,Le),Le|=r;return ve(e,t,i,n),t.child}function kp(e,t){var n=t.ref;(e===null&&n!==null||e!==null&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Il(e,t,n,r,i){var o=Te(n)?vn:ge.current;return o=bn(t,o),Yn(t,i),n=Za(e,t,n,r,o,i),r=ba(),e!==null&&!Ce?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,Ct(e,t,i)):($&&r&&Fa(t),t.flags|=1,ve(e,t,n,i),t.child)}function Wc(e,t,n,r,i){if(Te(n)){var o=!0;wo(t)}else o=!1;if(Yn(t,i),t.stateNode===null)eo(e,t),Sp(t,n,r),zl(t,n,r,i),r=!0;else if(e===null){var s=t.stateNode,l=t.memoizedProps;s.props=l;var a=s.context,u=n.contextType;typeof u==\"object\"&&u!==null?u=Be(u):(u=Te(n)?vn:ge.current,u=bn(t,u));var c=n.getDerivedStateFromProps,f=typeof c==\"function\"||typeof s.getSnapshotBeforeUpdate==\"function\";f||typeof s.UNSAFE_componentWillReceiveProps!=\"function\"&&typeof s.componentWillReceiveProps!=\"function\"||(l!==r||a!==u)&&zc(t,s,r,u),Mt=!1;var d=t.memoizedState;s.state=d,To(t,r,s,i),a=t.memoizedState,l!==r||d!==a||Ee.current||Mt?(typeof c==\"function\"&&(Ol(t,n,c,r),a=t.memoizedState),(l=Mt||Oc(t,n,l,r,d,a,u))?(f||typeof s.UNSAFE_componentWillMount!=\"function\"&&typeof s.componentWillMount!=\"function\"||(typeof s.componentWillMount==\"function\"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount==\"function\"&&s.UNSAFE_componentWillMount()),typeof s.componentDidMount==\"function\"&&(t.flags|=4194308)):(typeof s.componentDidMount==\"function\"&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=a),s.props=r,s.state=a,s.context=u,r=l):(typeof s.componentDidMount==\"function\"&&(t.flags|=4194308),r=!1)}else{s=t.stateNode,ep(e,t),l=t.memoizedProps,u=t.type===t.elementType?l:He(t.type,l),s.props=u,f=t.pendingProps,d=s.context,a=n.contextType,typeof a==\"object\"&&a!==null?a=Be(a):(a=Te(n)?vn:ge.current,a=bn(t,a));var g=n.getDerivedStateFromProps;(c=typeof g==\"function\"||typeof s.getSnapshotBeforeUpdate==\"function\")||typeof s.UNSAFE_componentWillReceiveProps!=\"function\"&&typeof s.componentWillReceiveProps!=\"function\"||(l!==f||d!==a)&&zc(t,s,r,a),Mt=!1,d=t.memoizedState,s.state=d,To(t,r,s,i);var v=t.memoizedState;l!==f||d!==v||Ee.current||Mt?(typeof g==\"function\"&&(Ol(t,n,g,r),v=t.memoizedState),(u=Mt||Oc(t,n,u,r,d,v,a)||!1)?(c||typeof s.UNSAFE_componentWillUpdate!=\"function\"&&typeof s.componentWillUpdate!=\"function\"||(typeof s.componentWillUpdate==\"function\"&&s.componentWillUpdate(r,v,a),typeof s.UNSAFE_componentWillUpdate==\"function\"&&s.UNSAFE_componentWillUpdate(r,v,a)),typeof s.componentDidUpdate==\"function\"&&(t.flags|=4),typeof s.getSnapshotBeforeUpdate==\"function\"&&(t.flags|=1024)):(typeof s.componentDidUpdate!=\"function\"||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),typeof s.getSnapshotBeforeUpdate!=\"function\"||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=v),s.props=r,s.state=v,s.context=a,r=u):(typeof s.componentDidUpdate!=\"function\"||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),typeof s.getSnapshotBeforeUpdate!=\"function\"||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return Bl(e,t,n,r,o,i)}function Bl(e,t,n,r,i,o){kp(e,t);var s=(t.flags&128)!==0;if(!r&&!s)return i&&Rc(t,n,!1),Ct(e,t,o);r=t.stateNode,Gv.current=t;var l=s&&typeof n.getDerivedStateFromError!=\"function\"?null:r.render();return t.flags|=1,e!==null&&s?(t.child=qn(t,e.child,null,o),t.child=qn(t,null,l,o)):ve(e,t,l,o),t.memoizedState=r.state,i&&Rc(t,n,!0),t.child}function Lp(e){var t=e.stateNode;t.pendingContext?Lc(e,t.pendingContext,t.pendingContext!==t.context):t.context&&Lc(e,t.context,!1),Ga(e,t.containerInfo)}function Hc(e,t,n,r,i){return Jn(),Ba(i),t.flags|=256,ve(e,t,n,r),t.child}var Ul={dehydrated:null,treeContext:null,retryLane:0};function $l(e){return{baseLanes:e,cachePool:null,transitions:null}}function Rp(e,t,n){var r=t.pendingProps,i=W.current,o=!1,s=(t.flags&128)!==0,l;if((l=s)||(l=e!==null&&e.memoizedState===null?!1:(i&2)!==0),l?(o=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(i|=1),I(W,i&1),e===null)return Dl(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?(t.mode&1?e.data===\"$!\"?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(s=r.children,e=r.fallback,o?(r=t.mode,o=t.child,s={mode:\"hidden\",children:s},!(r&1)&&o!==null?(o.childLanes=0,o.pendingProps=s):o=ns(s,r,0,null),e=mn(e,r,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=$l(n),t.memoizedState=Ul,e):eu(t,s));if(i=e.memoizedState,i!==null&&(l=i.dehydrated,l!==null))return Qv(e,t,s,r,l,i,n);if(o){o=r.fallback,s=t.mode,i=e.child,l=i.sibling;var a={mode:\"hidden\",children:r.children};return!(s&1)&&t.child!==i?(r=t.child,r.childLanes=0,r.pendingProps=a,t.deletions=null):(r=Wt(i,a),r.subtreeFlags=i.subtreeFlags&14680064),l!==null?o=Wt(l,o):(o=mn(o,s,n,null),o.flags|=2),o.return=t,r.return=t,r.sibling=o,t.child=r,r=o,o=t.child,s=e.child.memoizedState,s=s===null?$l(n):{baseLanes:s.baseLanes|n,cachePool:null,transitions:s.transitions},o.memoizedState=s,o.childLanes=e.childLanes&~n,t.memoizedState=Ul,r}return o=e.child,e=o.sibling,r=Wt(o,{mode:\"visible\",children:r.children}),!(t.mode&1)&&(r.lanes=n),r.return=t,r.sibling=null,e!==null&&(n=t.deletions,n===null?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function eu(e,t){return t=ns({mode:\"visible\",children:t},e.mode,0,null),t.return=e,e.child=t}function Fi(e,t,n,r){return r!==null&&Ba(r),qn(t,e.child,null,n),e=eu(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function Qv(e,t,n,r,i,o,s){if(n)return t.flags&256?(t.flags&=-257,r=Bs(Error(E(422))),Fi(e,t,s,r)):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(o=r.fallback,i=t.mode,r=ns({mode:\"visible\",children:r.children},i,0,null),o=mn(o,i,s,null),o.flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,t.mode&1&&qn(t,e.child,null,s),t.child.memoizedState=$l(s),t.memoizedState=Ul,o);if(!(t.mode&1))return Fi(e,t,s,null);if(i.data===\"$!\"){if(r=i.nextSibling&&i.nextSibling.dataset,r)var l=r.dgst;return r=l,o=Error(E(419)),r=Bs(o,r,void 0),Fi(e,t,s,r)}if(l=(s&e.childLanes)!==0,Ce||l){if(r=se,r!==null){switch(s&-s){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}i=i&(r.suspendedLanes|s)?0:i,i!==0&&i!==o.retryLane&&(o.retryLane=i,Pt(e,i),Xe(r,e,i,-1))}return su(),r=Bs(Error(E(421))),Fi(e,t,s,r)}return i.data===\"$?\"?(t.flags|=128,t.child=e.child,t=sy.bind(null,e),i._reactRetry=t,null):(e=o.treeContext,Re=It(i.nextSibling),Ae=t,$=!0,Ge=null,e!==null&&(Oe[ze++]=ft,Oe[ze++]=dt,Oe[ze++]=yn,ft=e.id,dt=e.overflow,yn=t),t=eu(t,r.children),t.flags|=4096,t)}function Kc(e,t,n){e.lanes|=t;var r=e.alternate;r!==null&&(r.lanes|=t),Nl(e.return,t,n)}function Us(e,t,n,r,i){var o=e.memoizedState;o===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:i}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=i)}function Ap(e,t,n){var r=t.pendingProps,i=r.revealOrder,o=r.tail;if(ve(e,t,r.children,n),r=W.current,r&2)r=r&1|2,t.flags|=128;else{if(e!==null&&e.flags&128)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&Kc(e,n,t);else if(e.tag===19)Kc(e,n,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(I(W,r),!(t.mode&1))t.memoizedState=null;else switch(i){case\"forwards\":for(n=t.child,i=null;n!==null;)e=n.alternate,e!==null&&ko(e)===null&&(i=n),n=n.sibling;n=i,n===null?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),Us(t,!1,i,n,o);break;case\"backwards\":for(n=null,i=t.child,t.child=null;i!==null;){if(e=i.alternate,e!==null&&ko(e)===null){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}Us(t,!0,n,null,o);break;case\"together\":Us(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function eo(e,t){!(t.mode&1)&&e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Ct(e,t,n){if(e!==null&&(t.dependencies=e.dependencies),wn|=t.lanes,!(n&t.childLanes))return null;if(e!==null&&t.child!==e.child)throw Error(E(153));if(t.child!==null){for(e=t.child,n=Wt(e,e.pendingProps),t.child=n,n.return=t;e.sibling!==null;)e=e.sibling,n=n.sibling=Wt(e,e.pendingProps),n.return=t;n.sibling=null}return t.child}function Yv(e,t,n){switch(t.tag){case 3:Lp(t),Jn();break;case 5:tp(t);break;case 1:Te(t.type)&&wo(t);break;case 4:Ga(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,i=t.memoizedProps.value;I(Co,r._currentValue),r._currentValue=i;break;case 13:if(r=t.memoizedState,r!==null)return r.dehydrated!==null?(I(W,W.current&1),t.flags|=128,null):n&t.child.childLanes?Rp(e,t,n):(I(W,W.current&1),e=Ct(e,t,n),e!==null?e.sibling:null);I(W,W.current&1);break;case 19:if(r=(n&t.childLanes)!==0,e.flags&128){if(r)return Ap(e,t,n);t.flags|=128}if(i=t.memoizedState,i!==null&&(i.rendering=null,i.tail=null,i.lastEffect=null),I(W,W.current),r)break;return null;case 22:case 23:return t.lanes=0,Tp(e,t,n)}return Ct(e,t,n)}var Mp,Wl,Vp,_p;Mp=function(e,t){for(var n=t.child;n!==null;){if(n.tag===5||n.tag===6)e.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===t)break;for(;n.sibling===null;){if(n.return===null||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};Wl=function(){};Vp=function(e,t,n,r){var i=e.memoizedProps;if(i!==r){e=t.stateNode,dn(ot.current);var o=null;switch(n){case\"input\":i=fl(e,i),r=fl(e,r),o=[];break;case\"select\":i=G({},i,{value:void 0}),r=G({},r,{value:void 0}),o=[];break;case\"textarea\":i=pl(e,i),r=pl(e,r),o=[];break;default:typeof i.onClick!=\"function\"&&typeof r.onClick==\"function\"&&(e.onclick=yo)}gl(n,r);var s;n=null;for(u in i)if(!r.hasOwnProperty(u)&&i.hasOwnProperty(u)&&i[u]!=null)if(u===\"style\"){var l=i[u];for(s in l)l.hasOwnProperty(s)&&(n||(n={}),n[s]=\"\")}else u!==\"dangerouslySetInnerHTML\"&&u!==\"children\"&&u!==\"suppressContentEditableWarning\"&&u!==\"suppressHydrationWarning\"&&u!==\"autoFocus\"&&(Wr.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in r){var a=r[u];if(l=i!=null?i[u]:void 0,r.hasOwnProperty(u)&&a!==l&&(a!=null||l!=null))if(u===\"style\")if(l){for(s in l)!l.hasOwnProperty(s)||a&&a.hasOwnProperty(s)||(n||(n={}),n[s]=\"\");for(s in a)a.hasOwnProperty(s)&&l[s]!==a[s]&&(n||(n={}),n[s]=a[s])}else n||(o||(o=[]),o.push(u,n)),n=a;else u===\"dangerouslySetInnerHTML\"?(a=a?a.__html:void 0,l=l?l.__html:void 0,a!=null&&l!==a&&(o=o||[]).push(u,a)):u===\"children\"?typeof a!=\"string\"&&typeof a!=\"number\"||(o=o||[]).push(u,\"\"+a):u!==\"suppressContentEditableWarning\"&&u!==\"suppressHydrationWarning\"&&(Wr.hasOwnProperty(u)?(a!=null&&u===\"onScroll\"&&B(\"scroll\",e),o||l===a||(o=[])):(o=o||[]).push(u,a))}n&&(o=o||[]).push(\"style\",n);var u=o;(t.updateQueue=u)&&(t.flags|=4)}};_p=function(e,t,n,r){n!==r&&(t.flags|=4)};function xr(e,t){if(!$)switch(e.tailMode){case\"hidden\":t=e.tail;for(var n=null;t!==null;)t.alternate!==null&&(n=t),t=t.sibling;n===null?e.tail=null:n.sibling=null;break;case\"collapsed\":n=e.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:r.sibling=null}}function de(e){var t=e.alternate!==null&&e.alternate.child===e.child,n=0,r=0;if(t)for(var i=e.child;i!==null;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags&14680064,r|=i.flags&14680064,i.return=e,i=i.sibling;else for(i=e.child;i!==null;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags,r|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Xv(e,t,n){var r=t.pendingProps;switch(Ia(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return de(t),null;case 1:return Te(t.type)&&xo(),de(t),null;case 3:return r=t.stateNode,er(),U(Ee),U(ge),Ya(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(e===null||e.child===null)&&(Oi(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&!(t.flags&256)||(t.flags|=1024,Ge!==null&&(bl(Ge),Ge=null))),Wl(e,t),de(t),null;case 5:Qa(t);var i=dn(ti.current);if(n=t.type,e!==null&&t.stateNode!=null)Vp(e,t,n,r,i),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(t.stateNode===null)throw Error(E(166));return de(t),null}if(e=dn(ot.current),Oi(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[nt]=t,r[qr]=o,e=(t.mode&1)!==0,n){case\"dialog\":B(\"cancel\",r),B(\"close\",r);break;case\"iframe\":case\"object\":case\"embed\":B(\"load\",r);break;case\"video\":case\"audio\":for(i=0;i<kr.length;i++)B(kr[i],r);break;case\"source\":B(\"error\",r);break;case\"img\":case\"image\":case\"link\":B(\"error\",r),B(\"load\",r);break;case\"details\":B(\"toggle\",r);break;case\"input\":ec(r,o),B(\"invalid\",r);break;case\"select\":r._wrapperState={wasMultiple:!!o.multiple},B(\"invalid\",r);break;case\"textarea\":nc(r,o),B(\"invalid\",r)}gl(n,o),i=null;for(var s in o)if(o.hasOwnProperty(s)){var l=o[s];s===\"children\"?typeof l==\"string\"?r.textContent!==l&&(o.suppressHydrationWarning!==!0&&Ni(r.textContent,l,e),i=[\"children\",l]):typeof l==\"number\"&&r.textContent!==\"\"+l&&(o.suppressHydrationWarning!==!0&&Ni(r.textContent,l,e),i=[\"children\",\"\"+l]):Wr.hasOwnProperty(s)&&l!=null&&s===\"onScroll\"&&B(\"scroll\",r)}switch(n){case\"input\":Li(r),tc(r,o,!0);break;case\"textarea\":Li(r),rc(r);break;case\"select\":case\"option\":break;default:typeof o.onClick==\"function\"&&(r.onclick=yo)}r=i,t.updateQueue=r,r!==null&&(t.flags|=4)}else{s=i.nodeType===9?i:i.ownerDocument,e===\"http://www.w3.org/1999/xhtml\"&&(e=sh(n)),e===\"http://www.w3.org/1999/xhtml\"?n===\"script\"?(e=s.createElement(\"div\"),e.innerHTML=\"<script><\\/script>\",e=e.removeChild(e.firstChild)):typeof r.is==\"string\"?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),n===\"select\"&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[nt]=t,e[qr]=r,Mp(e,t,!1,!1),t.stateNode=e;e:{switch(s=vl(n,r),n){case\"dialog\":B(\"cancel\",e),B(\"close\",e),i=r;break;case\"iframe\":case\"object\":case\"embed\":B(\"load\",e),i=r;break;case\"video\":case\"audio\":for(i=0;i<kr.length;i++)B(kr[i],e);i=r;break;case\"source\":B(\"error\",e),i=r;break;case\"img\":case\"image\":case\"link\":B(\"error\",e),B(\"load\",e),i=r;break;case\"details\":B(\"toggle\",e),i=r;break;case\"input\":ec(e,r),i=fl(e,r),B(\"invalid\",e);break;case\"option\":i=r;break;case\"select\":e._wrapperState={wasMultiple:!!r.multiple},i=G({},r,{value:void 0}),B(\"invalid\",e);break;case\"textarea\":nc(e,r),i=pl(e,r),B(\"invalid\",e);break;default:i=r}gl(n,i),l=i;for(o in l)if(l.hasOwnProperty(o)){var a=l[o];o===\"style\"?uh(e,a):o===\"dangerouslySetInnerHTML\"?(a=a?a.__html:void 0,a!=null&&lh(e,a)):o===\"children\"?typeof a==\"string\"?(n!==\"textarea\"||a!==\"\")&&Hr(e,a):typeof a==\"number\"&&Hr(e,\"\"+a):o!==\"suppressContentEditableWarning\"&&o!==\"suppressHydrationWarning\"&&o!==\"autoFocus\"&&(Wr.hasOwnProperty(o)?a!=null&&o===\"onScroll\"&&B(\"scroll\",e):a!=null&&Ea(e,o,a,s))}switch(n){case\"input\":Li(e),tc(e,r,!1);break;case\"textarea\":Li(e),rc(e);break;case\"option\":r.value!=null&&e.setAttribute(\"value\",\"\"+Kt(r.value));break;case\"select\":e.multiple=!!r.multiple,o=r.value,o!=null?Hn(e,!!r.multiple,o,!1):r.defaultValue!=null&&Hn(e,!!r.multiple,r.defaultValue,!0);break;default:typeof i.onClick==\"function\"&&(e.onclick=yo)}switch(n){case\"button\":case\"input\":case\"select\":case\"textarea\":r=!!r.autoFocus;break e;case\"img\":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return de(t),null;case 6:if(e&&t.stateNode!=null)_p(e,t,e.memoizedProps,r);else{if(typeof r!=\"string\"&&t.stateNode===null)throw Error(E(166));if(n=dn(ti.current),dn(ot.current),Oi(t)){if(r=t.stateNode,n=t.memoizedProps,r[nt]=t,(o=r.nodeValue!==n)&&(e=Ae,e!==null))switch(e.tag){case 3:Ni(r.nodeValue,n,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&Ni(r.nodeValue,n,(e.mode&1)!==0)}o&&(t.flags|=4)}else r=(n.nodeType===9?n:n.ownerDocument).createTextNode(r),r[nt]=t,t.stateNode=r}return de(t),null;case 13:if(U(W),r=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if($&&Re!==null&&t.mode&1&&!(t.flags&128))Zh(),Jn(),t.flags|=98560,o=!1;else if(o=Oi(t),r!==null&&r.dehydrated!==null){if(e===null){if(!o)throw Error(E(318));if(o=t.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(E(317));o[nt]=t}else Jn(),!(t.flags&128)&&(t.memoizedState=null),t.flags|=4;de(t),o=!1}else Ge!==null&&(bl(Ge),Ge=null),o=!0;if(!o)return t.flags&65536?t:null}return t.flags&128?(t.lanes=n,t):(r=r!==null,r!==(e!==null&&e.memoizedState!==null)&&r&&(t.child.flags|=8192,t.mode&1&&(e===null||W.current&1?te===0&&(te=3):su())),t.updateQueue!==null&&(t.flags|=4),de(t),null);case 4:return er(),Wl(e,t),e===null&&br(t.stateNode.containerInfo),de(t),null;case 10:return Wa(t.type._context),de(t),null;case 17:return Te(t.type)&&xo(),de(t),null;case 19:if(U(W),o=t.memoizedState,o===null)return de(t),null;if(r=(t.flags&128)!==0,s=o.rendering,s===null)if(r)xr(o,!1);else{if(te!==0||e!==null&&e.flags&128)for(e=t.child;e!==null;){if(s=ko(e),s!==null){for(t.flags|=128,xr(o,!1),r=s.updateQueue,r!==null&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;n!==null;)o=n,e=r,o.flags&=14680066,s=o.alternate,s===null?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=s.childLanes,o.lanes=s.lanes,o.child=s.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=s.memoizedProps,o.memoizedState=s.memoizedState,o.updateQueue=s.updateQueue,o.type=s.type,e=s.dependencies,o.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return I(W,W.current&1|2),t.child}e=e.sibling}o.tail!==null&&Z()>nr&&(t.flags|=128,r=!0,xr(o,!1),t.lanes=4194304)}else{if(!r)if(e=ko(s),e!==null){if(t.flags|=128,r=!0,n=e.updateQueue,n!==null&&(t.updateQueue=n,t.flags|=4),xr(o,!0),o.tail===null&&o.tailMode===\"hidden\"&&!s.alternate&&!$)return de(t),null}else 2*Z()-o.renderingStartTime>nr&&n!==1073741824&&(t.flags|=128,r=!0,xr(o,!1),t.lanes=4194304);o.isBackwards?(s.sibling=t.child,t.child=s):(n=o.last,n!==null?n.sibling=s:t.child=s,o.last=s)}return o.tail!==null?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Z(),t.sibling=null,n=W.current,I(W,r?n&1|2:n&1),t):(de(t),null);case 22:case 23:return ou(),r=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==r&&(t.flags|=8192),r&&t.mode&1?Le&1073741824&&(de(t),t.subtreeFlags&6&&(t.flags|=8192)):de(t),null;case 24:return null;case 25:return null}throw Error(E(156,t.tag))}function Zv(e,t){switch(Ia(t),t.tag){case 1:return Te(t.type)&&xo(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return er(),U(Ee),U(ge),Ya(),e=t.flags,e&65536&&!(e&128)?(t.flags=e&-65537|128,t):null;case 5:return Qa(t),null;case 13:if(U(W),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(E(340));Jn()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return U(W),null;case 4:return er(),null;case 10:return Wa(t.type._context),null;case 22:case 23:return ou(),null;case 24:return null;default:return null}}var Ii=!1,pe=!1,bv=typeof WeakSet==\"function\"?WeakSet:Set,A=null;function zn(e,t){var n=e.ref;if(n!==null)if(typeof n==\"function\")try{n(null)}catch(r){Q(e,t,r)}else n.current=null}function Hl(e,t,n){try{n()}catch(r){Q(e,t,r)}}var Gc=!1;function Jv(e,t){if(Ll=mo,e=zh(),za(e)){if(\"selectionStart\"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{n=(n=e.ownerDocument)&&n.defaultView||window;var r=n.getSelection&&n.getSelection();if(r&&r.rangeCount!==0){n=r.anchorNode;var i=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch{n=null;break e}var s=0,l=-1,a=-1,u=0,c=0,f=e,d=null;t:for(;;){for(var g;f!==n||i!==0&&f.nodeType!==3||(l=s+i),f!==o||r!==0&&f.nodeType!==3||(a=s+r),f.nodeType===3&&(s+=f.nodeValue.length),(g=f.firstChild)!==null;)d=f,f=g;for(;;){if(f===e)break t;if(d===n&&++u===i&&(l=s),d===o&&++c===r&&(a=s),(g=f.nextSibling)!==null)break;f=d,d=f.parentNode}f=g}n=l===-1||a===-1?null:{start:l,end:a}}else n=null}n=n||{start:0,end:0}}else n=null;for(Rl={focusedElem:e,selectionRange:n},mo=!1,A=t;A!==null;)if(t=A,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,A=e;else for(;A!==null;){t=A;try{var v=t.alternate;if(t.flags&1024)switch(t.tag){case 0:case 11:case 15:break;case 1:if(v!==null){var y=v.memoizedProps,S=v.memoizedState,p=t.stateNode,h=p.getSnapshotBeforeUpdate(t.elementType===t.type?y:He(t.type,y),S);p.__reactInternalSnapshotBeforeUpdate=h}break;case 3:var m=t.stateNode.containerInfo;m.nodeType===1?m.textContent=\"\":m.nodeType===9&&m.documentElement&&m.removeChild(m.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(E(163))}}catch(w){Q(t,t.return,w)}if(e=t.sibling,e!==null){e.return=t.return,A=e;break}A=t.return}return v=Gc,Gc=!1,v}function Nr(e,t,n){var r=t.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var i=r=r.next;do{if((i.tag&e)===e){var o=i.destroy;i.destroy=void 0,o!==void 0&&Hl(t,n,o)}i=i.next}while(i!==r)}}function es(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function Kl(e){var t=e.ref;if(t!==null){var n=e.stateNode;switch(e.tag){case 5:e=n;break;default:e=n}typeof t==\"function\"?t(e):t.current=e}}function jp(e){var t=e.alternate;t!==null&&(e.alternate=null,jp(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[nt],delete t[qr],delete t[Vl],delete t[Dv],delete t[Nv])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function Dp(e){return e.tag===5||e.tag===3||e.tag===4}function Qc(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||Dp(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function Gl(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.nodeType===8?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(n.nodeType===8?(t=n.parentNode,t.insertBefore(e,n)):(t=n,t.appendChild(e)),n=n._reactRootContainer,n!=null||t.onclick!==null||(t.onclick=yo));else if(r!==4&&(e=e.child,e!==null))for(Gl(e,t,n),e=e.sibling;e!==null;)Gl(e,t,n),e=e.sibling}function Ql(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(r!==4&&(e=e.child,e!==null))for(Ql(e,t,n),e=e.sibling;e!==null;)Ql(e,t,n),e=e.sibling}var le=null,Ke=!1;function kt(e,t,n){for(n=n.child;n!==null;)Np(e,t,n),n=n.sibling}function Np(e,t,n){if(it&&typeof it.onCommitFiberUnmount==\"function\")try{it.onCommitFiberUnmount(Go,n)}catch{}switch(n.tag){case 5:pe||zn(n,t);case 6:var r=le,i=Ke;le=null,kt(e,t,n),le=r,Ke=i,le!==null&&(Ke?(e=le,n=n.stateNode,e.nodeType===8?e.parentNode.removeChild(n):e.removeChild(n)):le.removeChild(n.stateNode));break;case 18:le!==null&&(Ke?(e=le,n=n.stateNode,e.nodeType===8?Ds(e.parentNode,n):e.nodeType===1&&Ds(e,n),Yr(e)):Ds(le,n.stateNode));break;case 4:r=le,i=Ke,le=n.stateNode.containerInfo,Ke=!0,kt(e,t,n),le=r,Ke=i;break;case 0:case 11:case 14:case 15:if(!pe&&(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){i=r=r.next;do{var o=i,s=o.destroy;o=o.tag,s!==void 0&&(o&2||o&4)&&Hl(n,t,s),i=i.next}while(i!==r)}kt(e,t,n);break;case 1:if(!pe&&(zn(n,t),r=n.stateNode,typeof r.componentWillUnmount==\"function\"))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(l){Q(n,t,l)}kt(e,t,n);break;case 21:kt(e,t,n);break;case 22:n.mode&1?(pe=(r=pe)||n.memoizedState!==null,kt(e,t,n),pe=r):kt(e,t,n);break;default:kt(e,t,n)}}function Yc(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var n=e.stateNode;n===null&&(n=e.stateNode=new bv),t.forEach(function(r){var i=ly.bind(null,e,r);n.has(r)||(n.add(r),r.then(i,i))})}}function $e(e,t){var n=t.deletions;if(n!==null)for(var r=0;r<n.length;r++){var i=n[r];try{var o=e,s=t,l=s;e:for(;l!==null;){switch(l.tag){case 5:le=l.stateNode,Ke=!1;break e;case 3:le=l.stateNode.containerInfo,Ke=!0;break e;case 4:le=l.stateNode.containerInfo,Ke=!0;break e}l=l.return}if(le===null)throw Error(E(160));Np(o,s,i),le=null,Ke=!1;var a=i.alternate;a!==null&&(a.return=null),i.return=null}catch(u){Q(i,t,u)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)Op(t,e),t=t.sibling}function Op(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if($e(t,e),qe(e),r&4){try{Nr(3,e,e.return),es(3,e)}catch(y){Q(e,e.return,y)}try{Nr(5,e,e.return)}catch(y){Q(e,e.return,y)}}break;case 1:$e(t,e),qe(e),r&512&&n!==null&&zn(n,n.return);break;case 5:if($e(t,e),qe(e),r&512&&n!==null&&zn(n,n.return),e.flags&32){var i=e.stateNode;try{Hr(i,\"\")}catch(y){Q(e,e.return,y)}}if(r&4&&(i=e.stateNode,i!=null)){var o=e.memoizedProps,s=n!==null?n.memoizedProps:o,l=e.type,a=e.updateQueue;if(e.updateQueue=null,a!==null)try{l===\"input\"&&o.type===\"radio\"&&o.name!=null&&ih(i,o),vl(l,s);var u=vl(l,o);for(s=0;s<a.length;s+=2){var c=a[s],f=a[s+1];c===\"style\"?uh(i,f):c===\"dangerouslySetInnerHTML\"?lh(i,f):c===\"children\"?Hr(i,f):Ea(i,c,f,u)}switch(l){case\"input\":dl(i,o);break;case\"textarea\":oh(i,o);break;case\"select\":var d=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!o.multiple;var g=o.value;g!=null?Hn(i,!!o.multiple,g,!1):d!==!!o.multiple&&(o.defaultValue!=null?Hn(i,!!o.multiple,o.defaultValue,!0):Hn(i,!!o.multiple,o.multiple?[]:\"\",!1))}i[qr]=o}catch(y){Q(e,e.return,y)}}break;case 6:if($e(t,e),qe(e),r&4){if(e.stateNode===null)throw Error(E(162));i=e.stateNode,o=e.memoizedProps;try{i.nodeValue=o}catch(y){Q(e,e.return,y)}}break;case 3:if($e(t,e),qe(e),r&4&&n!==null&&n.memoizedState.isDehydrated)try{Yr(t.containerInfo)}catch(y){Q(e,e.return,y)}break;case 4:$e(t,e),qe(e);break;case 13:$e(t,e),qe(e),i=e.child,i.flags&8192&&(o=i.memoizedState!==null,i.stateNode.isHidden=o,!o||i.alternate!==null&&i.alternate.memoizedState!==null||(ru=Z())),r&4&&Yc(e);break;case 22:if(c=n!==null&&n.memoizedState!==null,e.mode&1?(pe=(u=pe)||c,$e(t,e),pe=u):$e(t,e),qe(e),r&8192){if(u=e.memoizedState!==null,(e.stateNode.isHidden=u)&&!c&&e.mode&1)for(A=e,c=e.child;c!==null;){for(f=A=c;A!==null;){switch(d=A,g=d.child,d.tag){case 0:case 11:case 14:case 15:Nr(4,d,d.return);break;case 1:zn(d,d.return);var v=d.stateNode;if(typeof v.componentWillUnmount==\"function\"){r=d,n=d.return;try{t=r,v.props=t.memoizedProps,v.state=t.memoizedState,v.componentWillUnmount()}catch(y){Q(r,n,y)}}break;case 5:zn(d,d.return);break;case 22:if(d.memoizedState!==null){Zc(f);continue}}g!==null?(g.return=d,A=g):Zc(f)}c=c.sibling}e:for(c=null,f=e;;){if(f.tag===5){if(c===null){c=f;try{i=f.stateNode,u?(o=i.style,typeof o.setProperty==\"function\"?o.setProperty(\"display\",\"none\",\"important\"):o.display=\"none\"):(l=f.stateNode,a=f.memoizedProps.style,s=a!=null&&a.hasOwnProperty(\"display\")?a.display:null,l.style.display=ah(\"display\",s))}catch(y){Q(e,e.return,y)}}}else if(f.tag===6){if(c===null)try{f.stateNode.nodeValue=u?\"\":f.memoizedProps}catch(y){Q(e,e.return,y)}}else if((f.tag!==22&&f.tag!==23||f.memoizedState===null||f===e)&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;f.sibling===null;){if(f.return===null||f.return===e)break e;c===f&&(c=null),f=f.return}c===f&&(c=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:$e(t,e),qe(e),r&4&&Yc(e);break;case 21:break;default:$e(t,e),qe(e)}}function qe(e){var t=e.flags;if(t&2){try{e:{for(var n=e.return;n!==null;){if(Dp(n)){var r=n;break e}n=n.return}throw Error(E(160))}switch(r.tag){case 5:var i=r.stateNode;r.flags&32&&(Hr(i,\"\"),r.flags&=-33);var o=Qc(e);Ql(e,o,i);break;case 3:case 4:var s=r.stateNode.containerInfo,l=Qc(e);Gl(e,l,s);break;default:throw Error(E(161))}}catch(a){Q(e,e.return,a)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function qv(e,t,n){A=e,zp(e)}function zp(e,t,n){for(var r=(e.mode&1)!==0;A!==null;){var i=A,o=i.child;if(i.tag===22&&r){var s=i.memoizedState!==null||Ii;if(!s){var l=i.alternate,a=l!==null&&l.memoizedState!==null||pe;l=Ii;var u=pe;if(Ii=s,(pe=a)&&!u)for(A=i;A!==null;)s=A,a=s.child,s.tag===22&&s.memoizedState!==null?bc(i):a!==null?(a.return=s,A=a):bc(i);for(;o!==null;)A=o,zp(o),o=o.sibling;A=i,Ii=l,pe=u}Xc(e)}else i.subtreeFlags&8772&&o!==null?(o.return=i,A=o):Xc(e)}}function Xc(e){for(;A!==null;){var t=A;if(t.flags&8772){var n=t.alternate;try{if(t.flags&8772)switch(t.tag){case 0:case 11:case 15:pe||es(5,t);break;case 1:var r=t.stateNode;if(t.flags&4&&!pe)if(n===null)r.componentDidMount();else{var i=t.elementType===t.type?n.memoizedProps:He(t.type,n.memoizedProps);r.componentDidUpdate(i,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;o!==null&&jc(t,o,r);break;case 3:var s=t.updateQueue;if(s!==null){if(n=null,t.child!==null)switch(t.child.tag){case 5:n=t.child.stateNode;break;case 1:n=t.child.stateNode}jc(t,s,n)}break;case 5:var l=t.stateNode;if(n===null&&t.flags&4){n=l;var a=t.memoizedProps;switch(t.type){case\"button\":case\"input\":case\"select\":case\"textarea\":a.autoFocus&&n.focus();break;case\"img\":a.src&&(n.src=a.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var u=t.alternate;if(u!==null){var c=u.memoizedState;if(c!==null){var f=c.dehydrated;f!==null&&Yr(f)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(E(163))}pe||t.flags&512&&Kl(t)}catch(d){Q(t,t.return,d)}}if(t===e){A=null;break}if(n=t.sibling,n!==null){n.return=t.return,A=n;break}A=t.return}}function Zc(e){for(;A!==null;){var t=A;if(t===e){A=null;break}var n=t.sibling;if(n!==null){n.return=t.return,A=n;break}A=t.return}}function bc(e){for(;A!==null;){var t=A;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{es(4,t)}catch(a){Q(t,n,a)}break;case 1:var r=t.stateNode;if(typeof r.componentDidMount==\"function\"){var i=t.return;try{r.componentDidMount()}catch(a){Q(t,i,a)}}var o=t.return;try{Kl(t)}catch(a){Q(t,o,a)}break;case 5:var s=t.return;try{Kl(t)}catch(a){Q(t,s,a)}}}catch(a){Q(t,t.return,a)}if(t===e){A=null;break}var l=t.sibling;if(l!==null){l.return=t.return,A=l;break}A=t.return}}var ey=Math.ceil,Ao=Et.ReactCurrentDispatcher,tu=Et.ReactCurrentOwner,Ie=Et.ReactCurrentBatchConfig,z=0,se=null,b=null,ae=0,Le=0,Fn=Zt(0),te=0,oi=null,wn=0,ts=0,nu=0,Or=null,Pe=null,ru=0,nr=1/0,ut=null,Mo=!1,Yl=null,Ut=null,Bi=!1,Dt=null,Vo=0,zr=0,Xl=null,to=-1,no=0;function xe(){return z&6?Z():to!==-1?to:to=Z()}function $t(e){return e.mode&1?z&2&&ae!==0?ae&-ae:zv.transition!==null?(no===0&&(no=Sh()),no):(e=F,e!==0||(e=window.event,e=e===void 0?16:Rh(e.type)),e):1}function Xe(e,t,n,r){if(50<zr)throw zr=0,Xl=null,Error(E(185));hi(e,n,r),(!(z&2)||e!==se)&&(e===se&&(!(z&2)&&(ts|=n),te===4&&_t(e,ae)),ke(e,r),n===1&&z===0&&!(t.mode&1)&&(nr=Z()+500,bo&&bt()))}function ke(e,t){var n=e.callbackNode;zg(e,t);var r=po(e,e===se?ae:0);if(r===0)n!==null&&sc(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(n!=null&&sc(n),t===1)e.tag===0?Ov(Jc.bind(null,e)):Qh(Jc.bind(null,e)),_v(function(){!(z&6)&&bt()}),n=null;else{switch(Ph(r)){case 1:n=Aa;break;case 4:n=xh;break;case 16:n=ho;break;case 536870912:n=wh;break;default:n=ho}n=Kp(n,Fp.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function Fp(e,t){if(to=-1,no=0,z&6)throw Error(E(327));var n=e.callbackNode;if(Xn()&&e.callbackNode!==n)return null;var r=po(e,e===se?ae:0);if(r===0)return null;if(r&30||r&e.expiredLanes||t)t=_o(e,r);else{t=r;var i=z;z|=2;var o=Bp();(se!==e||ae!==t)&&(ut=null,nr=Z()+500,pn(e,t));do try{ry();break}catch(l){Ip(e,l)}while(!0);$a(),Ao.current=o,z=i,b!==null?t=0:(se=null,ae=0,t=te)}if(t!==0){if(t===2&&(i=Pl(e),i!==0&&(r=i,t=Zl(e,i))),t===1)throw n=oi,pn(e,0),_t(e,r),ke(e,Z()),n;if(t===6)_t(e,r);else{if(i=e.current.alternate,!(r&30)&&!ty(i)&&(t=_o(e,r),t===2&&(o=Pl(e),o!==0&&(r=o,t=Zl(e,o))),t===1))throw n=oi,pn(e,0),_t(e,r),ke(e,Z()),n;switch(e.finishedWork=i,e.finishedLanes=r,t){case 0:case 1:throw Error(E(345));case 2:ln(e,Pe,ut);break;case 3:if(_t(e,r),(r&130023424)===r&&(t=ru+500-Z(),10<t)){if(po(e,0)!==0)break;if(i=e.suspendedLanes,(i&r)!==r){xe(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=Ml(ln.bind(null,e,Pe,ut),t);break}ln(e,Pe,ut);break;case 4:if(_t(e,r),(r&4194240)===r)break;for(t=e.eventTimes,i=-1;0<r;){var s=31-Ye(r);o=1<<s,s=t[s],s>i&&(i=s),r&=~o}if(r=i,r=Z()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*ey(r/1960))-r,10<r){e.timeoutHandle=Ml(ln.bind(null,e,Pe,ut),r);break}ln(e,Pe,ut);break;case 5:ln(e,Pe,ut);break;default:throw Error(E(329))}}}return ke(e,Z()),e.callbackNode===n?Fp.bind(null,e):null}function Zl(e,t){var n=Or;return e.current.memoizedState.isDehydrated&&(pn(e,t).flags|=256),e=_o(e,t),e!==2&&(t=Pe,Pe=n,t!==null&&bl(t)),e}function bl(e){Pe===null?Pe=e:Pe.push.apply(Pe,e)}function ty(e){for(var t=e;;){if(t.flags&16384){var n=t.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var r=0;r<n.length;r++){var i=n[r],o=i.getSnapshot;i=i.value;try{if(!Ze(o(),i))return!1}catch{return!1}}}if(n=t.child,t.subtreeFlags&16384&&n!==null)n.return=t,t=n;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function _t(e,t){for(t&=~nu,t&=~ts,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ye(t),r=1<<n;e[n]=-1,t&=~r}}function Jc(e){if(z&6)throw Error(E(327));Xn();var t=po(e,0);if(!(t&1))return ke(e,Z()),null;var n=_o(e,t);if(e.tag!==0&&n===2){var r=Pl(e);r!==0&&(t=r,n=Zl(e,r))}if(n===1)throw n=oi,pn(e,0),_t(e,t),ke(e,Z()),n;if(n===6)throw Error(E(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,ln(e,Pe,ut),ke(e,Z()),null}function iu(e,t){var n=z;z|=1;try{return e(t)}finally{z=n,z===0&&(nr=Z()+500,bo&&bt())}}function Sn(e){Dt!==null&&Dt.tag===0&&!(z&6)&&Xn();var t=z;z|=1;var n=Ie.transition,r=F;try{if(Ie.transition=null,F=1,e)return e()}finally{F=r,Ie.transition=n,z=t,!(z&6)&&bt()}}function ou(){Le=Fn.current,U(Fn)}function pn(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(n!==-1&&(e.timeoutHandle=-1,Vv(n)),b!==null)for(n=b.return;n!==null;){var r=n;switch(Ia(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&xo();break;case 3:er(),U(Ee),U(ge),Ya();break;case 5:Qa(r);break;case 4:er();break;case 13:U(W);break;case 19:U(W);break;case 10:Wa(r.type._context);break;case 22:case 23:ou()}n=n.return}if(se=e,b=e=Wt(e.current,null),ae=Le=t,te=0,oi=null,nu=ts=wn=0,Pe=Or=null,fn!==null){for(t=0;t<fn.length;t++)if(n=fn[t],r=n.interleaved,r!==null){n.interleaved=null;var i=r.next,o=n.pending;if(o!==null){var s=o.next;o.next=i,r.next=s}n.pending=r}fn=null}return e}function Ip(e,t){do{var n=b;try{if($a(),Ji.current=Ro,Lo){for(var r=K.memoizedState;r!==null;){var i=r.queue;i!==null&&(i.pending=null),r=r.next}Lo=!1}if(xn=0,oe=ee=K=null,Dr=!1,ni=0,tu.current=null,n===null||n.return===null){te=1,oi=t,b=null;break}e:{var o=e,s=n.return,l=n,a=t;if(t=ae,l.flags|=32768,a!==null&&typeof a==\"object\"&&typeof a.then==\"function\"){var u=a,c=l,f=c.tag;if(!(c.mode&1)&&(f===0||f===11||f===15)){var d=c.alternate;d?(c.updateQueue=d.updateQueue,c.memoizedState=d.memoizedState,c.lanes=d.lanes):(c.updateQueue=null,c.memoizedState=null)}var g=Ic(s);if(g!==null){g.flags&=-257,Bc(g,s,l,o,t),g.mode&1&&Fc(o,u,t),t=g,a=u;var v=t.updateQueue;if(v===null){var y=new Set;y.add(a),t.updateQueue=y}else v.add(a);break e}else{if(!(t&1)){Fc(o,u,t),su();break e}a=Error(E(426))}}else if($&&l.mode&1){var S=Ic(s);if(S!==null){!(S.flags&65536)&&(S.flags|=256),Bc(S,s,l,o,t),Ba(tr(a,l));break e}}o=a=tr(a,l),te!==4&&(te=2),Or===null?Or=[o]:Or.push(o),o=s;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t;var p=Pp(o,a,t);_c(o,p);break e;case 1:l=a;var h=o.type,m=o.stateNode;if(!(o.flags&128)&&(typeof h.getDerivedStateFromError==\"function\"||m!==null&&typeof m.componentDidCatch==\"function\"&&(Ut===null||!Ut.has(m)))){o.flags|=65536,t&=-t,o.lanes|=t;var w=Cp(o,l,t);_c(o,w);break e}}o=o.return}while(o!==null)}$p(n)}catch(C){t=C,b===n&&n!==null&&(b=n=n.return);continue}break}while(!0)}function Bp(){var e=Ao.current;return Ao.current=Ro,e===null?Ro:e}function su(){(te===0||te===3||te===2)&&(te=4),se===null||!(wn&268435455)&&!(ts&268435455)||_t(se,ae)}function _o(e,t){var n=z;z|=2;var r=Bp();(se!==e||ae!==t)&&(ut=null,pn(e,t));do try{ny();break}catch(i){Ip(e,i)}while(!0);if($a(),z=n,Ao.current=r,b!==null)throw Error(E(261));return se=null,ae=0,te}function ny(){for(;b!==null;)Up(b)}function ry(){for(;b!==null&&!Rg();)Up(b)}function Up(e){var t=Hp(e.alternate,e,Le);e.memoizedProps=e.pendingProps,t===null?$p(e):b=t,tu.current=null}function $p(e){var t=e;do{var n=t.alternate;if(e=t.return,t.flags&32768){if(n=Zv(n,t),n!==null){n.flags&=32767,b=n;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{te=6,b=null;return}}else if(n=Xv(n,t,Le),n!==null){b=n;return}if(t=t.sibling,t!==null){b=t;return}b=t=e}while(t!==null);te===0&&(te=5)}function ln(e,t,n){var r=F,i=Ie.transition;try{Ie.transition=null,F=1,iy(e,t,n,r)}finally{Ie.transition=i,F=r}return null}function iy(e,t,n,r){do Xn();while(Dt!==null);if(z&6)throw Error(E(327));n=e.finishedWork;var i=e.finishedLanes;if(n===null)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(E(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(Fg(e,o),e===se&&(b=se=null,ae=0),!(n.subtreeFlags&2064)&&!(n.flags&2064)||Bi||(Bi=!0,Kp(ho,function(){return Xn(),null})),o=(n.flags&15990)!==0,n.subtreeFlags&15990||o){o=Ie.transition,Ie.transition=null;var s=F;F=1;var l=z;z|=4,tu.current=null,Jv(e,n),Op(n,e),Ev(Rl),mo=!!Ll,Rl=Ll=null,e.current=n,qv(n),Ag(),z=l,F=s,Ie.transition=o}else e.current=n;if(Bi&&(Bi=!1,Dt=e,Vo=i),o=e.pendingLanes,o===0&&(Ut=null),_g(n.stateNode),ke(e,Z()),t!==null)for(r=e.onRecoverableError,n=0;n<t.length;n++)i=t[n],r(i.value,{componentStack:i.stack,digest:i.digest});if(Mo)throw Mo=!1,e=Yl,Yl=null,e;return Vo&1&&e.tag!==0&&Xn(),o=e.pendingLanes,o&1?e===Xl?zr++:(zr=0,Xl=e):zr=0,bt(),null}function Xn(){if(Dt!==null){var e=Ph(Vo),t=Ie.transition,n=F;try{if(Ie.transition=null,F=16>e?16:e,Dt===null)var r=!1;else{if(e=Dt,Dt=null,Vo=0,z&6)throw Error(E(331));var i=z;for(z|=4,A=e.current;A!==null;){var o=A,s=o.child;if(A.flags&16){var l=o.deletions;if(l!==null){for(var a=0;a<l.length;a++){var u=l[a];for(A=u;A!==null;){var c=A;switch(c.tag){case 0:case 11:case 15:Nr(8,c,o)}var f=c.child;if(f!==null)f.return=c,A=f;else for(;A!==null;){c=A;var d=c.sibling,g=c.return;if(jp(c),c===u){A=null;break}if(d!==null){d.return=g,A=d;break}A=g}}}var v=o.alternate;if(v!==null){var y=v.child;if(y!==null){v.child=null;do{var S=y.sibling;y.sibling=null,y=S}while(y!==null)}}A=o}}if(o.subtreeFlags&2064&&s!==null)s.return=o,A=s;else e:for(;A!==null;){if(o=A,o.flags&2048)switch(o.tag){case 0:case 11:case 15:Nr(9,o,o.return)}var p=o.sibling;if(p!==null){p.return=o.return,A=p;break e}A=o.return}}var h=e.current;for(A=h;A!==null;){s=A;var m=s.child;if(s.subtreeFlags&2064&&m!==null)m.return=s,A=m;else e:for(s=h;A!==null;){if(l=A,l.flags&2048)try{switch(l.tag){case 0:case 11:case 15:es(9,l)}}catch(C){Q(l,l.return,C)}if(l===s){A=null;break e}var w=l.sibling;if(w!==null){w.return=l.return,A=w;break e}A=l.return}}if(z=i,bt(),it&&typeof it.onPostCommitFiberRoot==\"function\")try{it.onPostCommitFiberRoot(Go,e)}catch{}r=!0}return r}finally{F=n,Ie.transition=t}}return!1}function qc(e,t,n){t=tr(n,t),t=Pp(e,t,1),e=Bt(e,t,1),t=xe(),e!==null&&(hi(e,1,t),ke(e,t))}function Q(e,t,n){if(e.tag===3)qc(e,e,n);else for(;t!==null;){if(t.tag===3){qc(t,e,n);break}else if(t.tag===1){var r=t.stateNode;if(typeof t.type.getDerivedStateFromError==\"function\"||typeof r.componentDidCatch==\"function\"&&(Ut===null||!Ut.has(r))){e=tr(n,e),e=Cp(t,e,1),t=Bt(t,e,1),e=xe(),t!==null&&(hi(t,1,e),ke(t,e));break}}t=t.return}}function oy(e,t,n){var r=e.pingCache;r!==null&&r.delete(t),t=xe(),e.pingedLanes|=e.suspendedLanes&n,se===e&&(ae&n)===n&&(te===4||te===3&&(ae&130023424)===ae&&500>Z()-ru?pn(e,0):nu|=n),ke(e,t)}function Wp(e,t){t===0&&(e.mode&1?(t=Mi,Mi<<=1,!(Mi&130023424)&&(Mi=4194304)):t=1);var n=xe();e=Pt(e,t),e!==null&&(hi(e,t,n),ke(e,n))}function sy(e){var t=e.memoizedState,n=0;t!==null&&(n=t.retryLane),Wp(e,n)}function ly(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,i=e.memoizedState;i!==null&&(n=i.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(E(314))}r!==null&&r.delete(t),Wp(e,n)}var Hp;Hp=function(e,t,n){if(e!==null)if(e.memoizedProps!==t.pendingProps||Ee.current)Ce=!0;else{if(!(e.lanes&n)&&!(t.flags&128))return Ce=!1,Yv(e,t,n);Ce=!!(e.flags&131072)}else Ce=!1,$&&t.flags&1048576&&Yh(t,Po,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;eo(e,t),e=t.pendingProps;var i=bn(t,ge.current);Yn(t,n),i=Za(null,t,r,e,i,n);var o=ba();return t.flags|=1,typeof i==\"object\"&&i!==null&&typeof i.render==\"function\"&&i.$$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Te(r)?(o=!0,wo(t)):o=!1,t.memoizedState=i.state!==null&&i.state!==void 0?i.state:null,Ka(t),i.updater=qo,t.stateNode=i,i._reactInternals=t,zl(t,r,e,n),t=Bl(null,t,r,!0,o,n)):(t.tag=0,$&&o&&Fa(t),ve(null,t,i,n),t=t.child),t;case 16:r=t.elementType;e:{switch(eo(e,t),e=t.pendingProps,i=r._init,r=i(r._payload),t.type=r,i=t.tag=uy(r),e=He(r,e),i){case 0:t=Il(null,t,r,e,n);break e;case 1:t=Wc(null,t,r,e,n);break e;case 11:t=Uc(null,t,r,e,n);break e;case 14:t=$c(null,t,r,He(r.type,e),n);break e}throw Error(E(306,r,\"\"))}return t;case 0:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:He(r,i),Il(e,t,r,i,n);case 1:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:He(r,i),Wc(e,t,r,i,n);case 3:e:{if(Lp(t),e===null)throw Error(E(387));r=t.pendingProps,o=t.memoizedState,i=o.element,ep(e,t),To(t,r,null,n);var s=t.memoizedState;if(r=s.element,o.isDehydrated)if(o={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},t.updateQueue.baseState=o,t.memoizedState=o,t.flags&256){i=tr(Error(E(423)),t),t=Hc(e,t,r,n,i);break e}else if(r!==i){i=tr(Error(E(424)),t),t=Hc(e,t,r,n,i);break e}else for(Re=It(t.stateNode.containerInfo.firstChild),Ae=t,$=!0,Ge=null,n=Jh(t,null,r,n),t.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(Jn(),r===i){t=Ct(e,t,n);break e}ve(e,t,r,n)}t=t.child}return t;case 5:return tp(t),e===null&&Dl(t),r=t.type,i=t.pendingProps,o=e!==null?e.memoizedProps:null,s=i.children,Al(r,i)?s=null:o!==null&&Al(r,o)&&(t.flags|=32),kp(e,t),ve(e,t,s,n),t.child;case 6:return e===null&&Dl(t),null;case 13:return Rp(e,t,n);case 4:return Ga(t,t.stateNode.containerInfo),r=t.pendingProps,e===null?t.child=qn(t,null,r,n):ve(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:He(r,i),Uc(e,t,r,i,n);case 7:return ve(e,t,t.pendingProps,n),t.child;case 8:return ve(e,t,t.pendingProps.children,n),t.child;case 12:return ve(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,i=t.pendingProps,o=t.memoizedProps,s=i.value,I(Co,r._currentValue),r._currentValue=s,o!==null)if(Ze(o.value,s)){if(o.children===i.children&&!Ee.current){t=Ct(e,t,n);break e}}else for(o=t.child,o!==null&&(o.return=t);o!==null;){var l=o.dependencies;if(l!==null){s=o.child;for(var a=l.firstContext;a!==null;){if(a.context===r){if(o.tag===1){a=mt(-1,n&-n),a.tag=2;var u=o.updateQueue;if(u!==null){u=u.shared;var c=u.pending;c===null?a.next=a:(a.next=c.next,c.next=a),u.pending=a}}o.lanes|=n,a=o.alternate,a!==null&&(a.lanes|=n),Nl(o.return,n,t),l.lanes|=n;break}a=a.next}}else if(o.tag===10)s=o.type===t.type?null:o.child;else if(o.tag===18){if(s=o.return,s===null)throw Error(E(341));s.lanes|=n,l=s.alternate,l!==null&&(l.lanes|=n),Nl(s,n,t),s=o.sibling}else s=o.child;if(s!==null)s.return=o;else for(s=o;s!==null;){if(s===t){s=null;break}if(o=s.sibling,o!==null){o.return=s.return,s=o;break}s=s.return}o=s}ve(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=t.pendingProps.children,Yn(t,n),i=Be(i),r=r(i),t.flags|=1,ve(e,t,r,n),t.child;case 14:return r=t.type,i=He(r,t.pendingProps),i=He(r.type,i),$c(e,t,r,i,n);case 15:return Ep(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:He(r,i),eo(e,t),t.tag=1,Te(r)?(e=!0,wo(t)):e=!1,Yn(t,n),Sp(t,r,i),zl(t,r,i,n),Bl(null,t,r,!0,e,n);case 19:return Ap(e,t,n);case 22:return Tp(e,t,n)}throw Error(E(156,t.tag))};function Kp(e,t){return yh(e,t)}function ay(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Fe(e,t,n,r){return new ay(e,t,n,r)}function lu(e){return e=e.prototype,!(!e||!e.isReactComponent)}function uy(e){if(typeof e==\"function\")return lu(e)?1:0;if(e!=null){if(e=e.$$typeof,e===ka)return 11;if(e===La)return 14}return 2}function Wt(e,t){var n=e.alternate;return n===null?(n=Fe(e.tag,t,e.key,e.mode),n.elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=e.flags&14680064,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function ro(e,t,n,r,i,o){var s=2;if(r=e,typeof e==\"function\")lu(e)&&(s=1);else if(typeof e==\"string\")s=5;else e:switch(e){case Rn:return mn(n.children,i,o,t);case Ta:s=8,i|=8;break;case ll:return e=Fe(12,n,t,i|2),e.elementType=ll,e.lanes=o,e;case al:return e=Fe(13,n,t,i),e.elementType=al,e.lanes=o,e;case ul:return e=Fe(19,n,t,i),e.elementType=ul,e.lanes=o,e;case th:return ns(n,i,o,t);default:if(typeof e==\"object\"&&e!==null)switch(e.$$typeof){case qd:s=10;break e;case eh:s=9;break e;case ka:s=11;break e;case La:s=14;break e;case At:s=16,r=null;break e}throw Error(E(130,e==null?e:typeof e,\"\"))}return t=Fe(s,n,t,i),t.elementType=e,t.type=r,t.lanes=o,t}function mn(e,t,n,r){return e=Fe(7,e,r,t),e.lanes=n,e}function ns(e,t,n,r){return e=Fe(22,e,r,t),e.elementType=th,e.lanes=n,e.stateNode={isHidden:!1},e}function $s(e,t,n){return e=Fe(6,e,null,t),e.lanes=n,e}function Ws(e,t,n){return t=Fe(4,e.children!==null?e.children:[],e.key,t),t.lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function cy(e,t,n,r,i){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Cs(0),this.expirationTimes=Cs(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Cs(0),this.identifierPrefix=r,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function au(e,t,n,r,i,o,s,l,a){return e=new cy(e,t,n,l,a),t===1?(t=1,o===!0&&(t|=8)):t=0,o=Fe(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ka(o),e}function fy(e,t,n){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Ln,key:r==null?null:\"\"+r,children:e,containerInfo:t,implementation:n}}function Gp(e){if(!e)return Gt;e=e._reactInternals;e:{if(En(e)!==e||e.tag!==1)throw Error(E(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Te(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error(E(171))}if(e.tag===1){var n=e.type;if(Te(n))return Gh(e,n,t)}return t}function Qp(e,t,n,r,i,o,s,l,a){return e=au(n,r,!0,e,i,o,s,l,a),e.context=Gp(null),n=e.current,r=xe(),i=$t(n),o=mt(r,i),o.callback=t??null,Bt(n,o,i),e.current.lanes=i,hi(e,i,r),ke(e,r),e}function rs(e,t,n,r){var i=t.current,o=xe(),s=$t(i);return n=Gp(n),t.context===null?t.context=n:t.pendingContext=n,t=mt(o,s),t.payload={element:e},r=r===void 0?null:r,r!==null&&(t.callback=r),e=Bt(i,t,s),e!==null&&(Xe(e,i,s,o),bi(e,i,s)),s}function jo(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function ef(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var n=e.retryLane;e.retryLane=n!==0&&n<t?n:t}}function uu(e,t){ef(e,t),(e=e.alternate)&&ef(e,t)}function dy(){return null}var Yp=typeof reportError==\"function\"?reportError:function(e){console.error(e)};function cu(e){this._internalRoot=e}is.prototype.render=cu.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(E(409));rs(e,t,null,null)};is.prototype.unmount=cu.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;Sn(function(){rs(null,e,null,null)}),t[St]=null}};function is(e){this._internalRoot=e}is.prototype.unstable_scheduleHydration=function(e){if(e){var t=Th();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Vt.length&&t!==0&&t<Vt[n].priority;n++);Vt.splice(n,0,e),n===0&&Lh(e)}};function fu(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function os(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==\" react-mount-point-unstable \"))}function tf(){}function hy(e,t,n,r,i){if(i){if(typeof r==\"function\"){var o=r;r=function(){var u=jo(s);o.call(u)}}var s=Qp(t,r,e,0,null,!1,!1,\"\",tf);return e._reactRootContainer=s,e[St]=s.current,br(e.nodeType===8?e.parentNode:e),Sn(),s}for(;i=e.lastChild;)e.removeChild(i);if(typeof r==\"function\"){var l=r;r=function(){var u=jo(a);l.call(u)}}var a=au(e,0,!1,null,null,!1,!1,\"\",tf);return e._reactRootContainer=a,e[St]=a.current,br(e.nodeType===8?e.parentNode:e),Sn(function(){rs(t,a,n,r)}),a}function ss(e,t,n,r,i){var o=n._reactRootContainer;if(o){var s=o;if(typeof i==\"function\"){var l=i;i=function(){var a=jo(s);l.call(a)}}rs(t,s,e,i)}else s=hy(n,t,e,i,r);return jo(s)}Ch=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=Tr(t.pendingLanes);n!==0&&(Ma(t,n|1),ke(t,Z()),!(z&6)&&(nr=Z()+500,bt()))}break;case 13:Sn(function(){var r=Pt(e,1);if(r!==null){var i=xe();Xe(r,e,1,i)}}),uu(e,1)}};Va=function(e){if(e.tag===13){var t=Pt(e,134217728);if(t!==null){var n=xe();Xe(t,e,134217728,n)}uu(e,134217728)}};Eh=function(e){if(e.tag===13){var t=$t(e),n=Pt(e,t);if(n!==null){var r=xe();Xe(n,e,t,r)}uu(e,t)}};Th=function(){return F};kh=function(e,t){var n=F;try{return F=e,t()}finally{F=n}};xl=function(e,t,n){switch(t){case\"input\":if(dl(e,n),t=n.name,n.type===\"radio\"&&t!=null){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+t)+'][type=\"radio\"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=Zo(r);if(!i)throw Error(E(90));rh(r),dl(r,i)}}}break;case\"textarea\":oh(e,n);break;case\"select\":t=n.value,t!=null&&Hn(e,!!n.multiple,t,!1)}};dh=iu;hh=Sn;var py={usingClientEntryPoint:!1,Events:[mi,_n,Zo,ch,fh,iu]},wr={findFiberByHostInstance:cn,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"},my={bundleType:wr.bundleType,version:wr.version,rendererPackageName:wr.rendererPackageName,rendererConfig:wr.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Et.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=gh(e),e===null?null:e.stateNode},findFiberByHostInstance:wr.findFiberByHostInstance||dy,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<\"u\"){var Ui=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ui.isDisabled&&Ui.supportsFiber)try{Go=Ui.inject(my),it=Ui}catch{}}_e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=py;_e.createPortal=function(e,t){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!fu(t))throw Error(E(200));return fy(e,t,null,n)};_e.createRoot=function(e,t){if(!fu(e))throw Error(E(299));var n=!1,r=\"\",i=Yp;return t!=null&&(t.unstable_strictMode===!0&&(n=!0),t.identifierPrefix!==void 0&&(r=t.identifierPrefix),t.onRecoverableError!==void 0&&(i=t.onRecoverableError)),t=au(e,1,!1,null,null,n,!1,r,i),e[St]=t.current,br(e.nodeType===8?e.parentNode:e),new cu(t)};_e.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render==\"function\"?Error(E(188)):(e=Object.keys(e).join(\",\"),Error(E(268,e)));return e=gh(t),e=e===null?null:e.stateNode,e};_e.flushSync=function(e){return Sn(e)};_e.hydrate=function(e,t,n){if(!os(t))throw Error(E(200));return ss(null,e,t,!0,n)};_e.hydrateRoot=function(e,t,n){if(!fu(e))throw Error(E(405));var r=n!=null&&n.hydratedSources||null,i=!1,o=\"\",s=Yp;if(n!=null&&(n.unstable_strictMode===!0&&(i=!0),n.identifierPrefix!==void 0&&(o=n.identifierPrefix),n.onRecoverableError!==void 0&&(s=n.onRecoverableError)),t=Qp(t,null,e,1,n??null,i,!1,o,s),e[St]=t.current,br(e),r)for(e=0;e<r.length;e++)n=r[e],i=n._getVersion,i=i(n._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[n,i]:t.mutableSourceEagerHydrationData.push(n,i);return new is(t)};_e.render=function(e,t,n){if(!os(t))throw Error(E(200));return ss(null,e,t,!1,n)};_e.unmountComponentAtNode=function(e){if(!os(e))throw Error(E(40));return e._reactRootContainer?(Sn(function(){ss(null,null,e,!1,function(){e._reactRootContainer=null,e[St]=null})}),!0):!1};_e.unstable_batchedUpdates=iu;_e.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!os(n))throw Error(E(200));if(e==null||e._reactInternals===void 0)throw Error(E(38));return ss(e,t,n,!1,r)};_e.version=\"18.3.1-next-f1338f8080-20240426\";function Xp(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>\"u\"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!=\"function\"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Xp)}catch(e){console.error(e)}}Xp(),Xd.exports=_e;var gy=Xd.exports,Zp,nf=gy;Zp=nf.createRoot,nf.hydrateRoot;const vy=\"modulepreload\",yy=function(e){return\"/\"+e},rf={},at=function(t,n,r){let i=Promise.resolve();if(n&&n.length>0){document.getElementsByTagName(\"link\");const s=document.querySelector(\"meta[property=csp-nonce]\"),l=(s==null?void 0:s.nonce)||(s==null?void 0:s.getAttribute(\"nonce\"));i=Promise.allSettled(n.map(a=>{if(a=yy(a),a in rf)return;rf[a]=!0;const u=a.endsWith(\".css\"),c=u?'[rel=\"stylesheet\"]':\"\";if(document.querySelector(`link[href=\"${a}\"]${c}`))return;const f=document.createElement(\"link\");if(f.rel=u?\"stylesheet\":vy,u||(f.as=\"script\"),f.crossOrigin=\"\",f.href=a,l&&f.setAttribute(\"nonce\",l),document.head.appendChild(f),u)return new Promise((d,g)=>{f.addEventListener(\"load\",d),f.addEventListener(\"error\",()=>g(new Error(`Unable to preload CSS for ${a}`)))})}))}function o(s){const l=new Event(\"vite:preloadError\",{cancelable:!0});if(l.payload=s,window.dispatchEvent(l),!l.defaultPrevented)throw s}return i.then(s=>{for(const l of s||[])l.status===\"rejected\"&&o(l.reason);return t().catch(o)})};/**\n * @remix-run/router v1.20.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */function si(){return si=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},si.apply(this,arguments)}var Nt;(function(e){e.Pop=\"POP\",e.Push=\"PUSH\",e.Replace=\"REPLACE\"})(Nt||(Nt={}));const of=\"popstate\";function xy(e){e===void 0&&(e={});function t(r,i){let{pathname:o,search:s,hash:l}=r.location;return Jl(\"\",{pathname:o,search:s,hash:l},i.state&&i.state.usr||null,i.state&&i.state.key||\"default\")}function n(r,i){return typeof i==\"string\"?i:Do(i)}return Sy(t,n,null,e)}function J(e,t){if(e===!1||e===null||typeof e>\"u\")throw new Error(t)}function bp(e,t){if(!e){typeof console<\"u\"&&console.warn(t);try{throw new Error(t)}catch{}}}function wy(){return Math.random().toString(36).substr(2,8)}function sf(e,t){return{usr:e.state,key:e.key,idx:t}}function Jl(e,t,n,r){return n===void 0&&(n=null),si({pathname:typeof e==\"string\"?e:e.pathname,search:\"\",hash:\"\"},typeof t==\"string\"?ar(t):t,{state:n,key:t&&t.key||r||wy()})}function Do(e){let{pathname:t=\"/\",search:n=\"\",hash:r=\"\"}=e;return n&&n!==\"?\"&&(t+=n.charAt(0)===\"?\"?n:\"?\"+n),r&&r!==\"#\"&&(t+=r.charAt(0)===\"#\"?r:\"#\"+r),t}function ar(e){let t={};if(e){let n=e.indexOf(\"#\");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let r=e.indexOf(\"?\");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}function Sy(e,t,n,r){r===void 0&&(r={});let{window:i=document.defaultView,v5Compat:o=!1}=r,s=i.history,l=Nt.Pop,a=null,u=c();u==null&&(u=0,s.replaceState(si({},s.state,{idx:u}),\"\"));function c(){return(s.state||{idx:null}).idx}function f(){l=Nt.Pop;let S=c(),p=S==null?null:S-u;u=S,a&&a({action:l,location:y.location,delta:p})}function d(S,p){l=Nt.Push;let h=Jl(y.location,S,p);u=c()+1;let m=sf(h,u),w=y.createHref(h);try{s.pushState(m,\"\",w)}catch(C){if(C instanceof DOMException&&C.name===\"DataCloneError\")throw C;i.location.assign(w)}o&&a&&a({action:l,location:y.location,delta:1})}function g(S,p){l=Nt.Replace;let h=Jl(y.location,S,p);u=c();let m=sf(h,u),w=y.createHref(h);s.replaceState(m,\"\",w),o&&a&&a({action:l,location:y.location,delta:0})}function v(S){let p=i.location.origin!==\"null\"?i.location.origin:i.location.href,h=typeof S==\"string\"?S:Do(S);return h=h.replace(/ $/,\"%20\"),J(p,\"No window.location.(origin|href) available to create URL for href: \"+h),new URL(h,p)}let y={get action(){return l},get location(){return e(i,s)},listen(S){if(a)throw new Error(\"A history only accepts one active listener\");return i.addEventListener(of,f),a=S,()=>{i.removeEventListener(of,f),a=null}},createHref(S){return t(i,S)},createURL:v,encodeLocation(S){let p=v(S);return{pathname:p.pathname,search:p.search,hash:p.hash}},push:d,replace:g,go(S){return s.go(S)}};return y}var lf;(function(e){e.data=\"data\",e.deferred=\"deferred\",e.redirect=\"redirect\",e.error=\"error\"})(lf||(lf={}));function Py(e,t,n){return n===void 0&&(n=\"/\"),Cy(e,t,n,!1)}function Cy(e,t,n,r){let i=typeof t==\"string\"?ar(t):t,o=du(i.pathname||\"/\",n);if(o==null)return null;let s=Jp(e);Ey(s);let l=null;for(let a=0;l==null&&a<s.length;++a){let u=Ny(o);l=jy(s[a],u,r)}return l}function Jp(e,t,n,r){t===void 0&&(t=[]),n===void 0&&(n=[]),r===void 0&&(r=\"\");let i=(o,s,l)=>{let a={relativePath:l===void 0?o.path||\"\":l,caseSensitive:o.caseSensitive===!0,childrenIndex:s,route:o};a.relativePath.startsWith(\"/\")&&(J(a.relativePath.startsWith(r),'Absolute route path \"'+a.relativePath+'\" nested under path '+('\"'+r+'\" is not valid. An absolute child route path ')+\"must start with the combined path of all its parent routes.\"),a.relativePath=a.relativePath.slice(r.length));let u=Ht([r,a.relativePath]),c=n.concat(a);o.children&&o.children.length>0&&(J(o.index!==!0,\"Index routes must not have child routes. Please remove \"+('all child routes from route path \"'+u+'\".')),Jp(o.children,t,c,u)),!(o.path==null&&!o.index)&&t.push({path:u,score:Vy(u,o.index),routesMeta:c})};return e.forEach((o,s)=>{var l;if(o.path===\"\"||!((l=o.path)!=null&&l.includes(\"?\")))i(o,s);else for(let a of qp(o.path))i(o,s,a)}),t}function qp(e){let t=e.split(\"/\");if(t.length===0)return[];let[n,...r]=t,i=n.endsWith(\"?\"),o=n.replace(/\\?$/,\"\");if(r.length===0)return i?[o,\"\"]:[o];let s=qp(r.join(\"/\")),l=[];return l.push(...s.map(a=>a===\"\"?o:[o,a].join(\"/\"))),i&&l.push(...s),l.map(a=>e.startsWith(\"/\")&&a===\"\"?\"/\":a)}function Ey(e){e.sort((t,n)=>t.score!==n.score?n.score-t.score:_y(t.routesMeta.map(r=>r.childrenIndex),n.routesMeta.map(r=>r.childrenIndex)))}const Ty=/^:[\\w-]+$/,ky=3,Ly=2,Ry=1,Ay=10,My=-2,af=e=>e===\"*\";function Vy(e,t){let n=e.split(\"/\"),r=n.length;return n.some(af)&&(r+=My),t&&(r+=Ly),n.filter(i=>!af(i)).reduce((i,o)=>i+(Ty.test(o)?ky:o===\"\"?Ry:Ay),r)}function _y(e,t){return e.length===t.length&&e.slice(0,-1).every((r,i)=>r===t[i])?e[e.length-1]-t[t.length-1]:0}function jy(e,t,n){let{routesMeta:r}=e,i={},o=\"/\",s=[];for(let l=0;l<r.length;++l){let a=r[l],u=l===r.length-1,c=o===\"/\"?t:t.slice(o.length)||\"/\",f=uf({path:a.relativePath,caseSensitive:a.caseSensitive,end:u},c),d=a.route;if(!f&&u&&n&&!r[r.length-1].route.index&&(f=uf({path:a.relativePath,caseSensitive:a.caseSensitive,end:!1},c)),!f)return null;Object.assign(i,f.params),s.push({params:i,pathname:Ht([o,f.pathname]),pathnameBase:Iy(Ht([o,f.pathnameBase])),route:d}),f.pathnameBase!==\"/\"&&(o=Ht([o,f.pathnameBase]))}return s}function uf(e,t){typeof e==\"string\"&&(e={path:e,caseSensitive:!1,end:!0});let[n,r]=Dy(e.path,e.caseSensitive,e.end),i=t.match(n);if(!i)return null;let o=i[0],s=o.replace(/(.)\\/+$/,\"$1\"),l=i.slice(1);return{params:r.reduce((u,c,f)=>{let{paramName:d,isOptional:g}=c;if(d===\"*\"){let y=l[f]||\"\";s=o.slice(0,o.length-y.length).replace(/(.)\\/+$/,\"$1\")}const v=l[f];return g&&!v?u[d]=void 0:u[d]=(v||\"\").replace(/%2F/g,\"/\"),u},{}),pathname:o,pathnameBase:s,pattern:e}}function Dy(e,t,n){t===void 0&&(t=!1),n===void 0&&(n=!0),bp(e===\"*\"||!e.endsWith(\"*\")||e.endsWith(\"/*\"),'Route path \"'+e+'\" will be treated as if it were '+('\"'+e.replace(/\\*$/,\"/*\")+'\" because the `*` character must ')+\"always follow a `/` in the pattern. To get rid of this warning, \"+('please change the route path to \"'+e.replace(/\\*$/,\"/*\")+'\".'));let r=[],i=\"^\"+e.replace(/\\/*\\*?$/,\"\").replace(/^\\/*/,\"/\").replace(/[\\\\.*+^${}|()[\\]]/g,\"\\\\$&\").replace(/\\/:([\\w-]+)(\\?)?/g,(s,l,a)=>(r.push({paramName:l,isOptional:a!=null}),a?\"/?([^\\\\/]+)?\":\"/([^\\\\/]+)\"));return e.endsWith(\"*\")?(r.push({paramName:\"*\"}),i+=e===\"*\"||e===\"/*\"?\"(.*)$\":\"(?:\\\\/(.+)|\\\\/*)$\"):n?i+=\"\\\\/*$\":e!==\"\"&&e!==\"/\"&&(i+=\"(?:(?=\\\\/|$))\"),[new RegExp(i,t?void 0:\"i\"),r]}function Ny(e){try{return e.split(\"/\").map(t=>decodeURIComponent(t).replace(/\\//g,\"%2F\")).join(\"/\")}catch(t){return bp(!1,'The URL path \"'+e+'\" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent '+(\"encoding (\"+t+\").\")),e}}function du(e,t){if(t===\"/\")return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith(\"/\")?t.length-1:t.length,r=e.charAt(n);return r&&r!==\"/\"?null:e.slice(n)||\"/\"}function Oy(e,t){t===void 0&&(t=\"/\");let{pathname:n,search:r=\"\",hash:i=\"\"}=typeof e==\"string\"?ar(e):e;return{pathname:n?n.startsWith(\"/\")?n:zy(n,t):t,search:By(r),hash:Uy(i)}}function zy(e,t){let n=t.replace(/\\/+$/,\"\").split(\"/\");return e.split(\"/\").forEach(i=>{i===\"..\"?n.length>1&&n.pop():i!==\".\"&&n.push(i)}),n.length>1?n.join(\"/\"):\"/\"}function Hs(e,t,n,r){return\"Cannot include a '\"+e+\"' character in a manually specified \"+(\"`to.\"+t+\"` field [\"+JSON.stringify(r)+\"].  Please separate it out to the \")+(\"`to.\"+n+\"` field. Alternatively you may provide the full path as \")+'a string in <Link to=\"...\"> and the router will parse it for you.'}function Fy(e){return e.filter((t,n)=>n===0||t.route.path&&t.route.path.length>0)}function em(e,t){let n=Fy(e);return t?n.map((r,i)=>i===n.length-1?r.pathname:r.pathnameBase):n.map(r=>r.pathnameBase)}function tm(e,t,n,r){r===void 0&&(r=!1);let i;typeof e==\"string\"?i=ar(e):(i=si({},e),J(!i.pathname||!i.pathname.includes(\"?\"),Hs(\"?\",\"pathname\",\"search\",i)),J(!i.pathname||!i.pathname.includes(\"#\"),Hs(\"#\",\"pathname\",\"hash\",i)),J(!i.search||!i.search.includes(\"#\"),Hs(\"#\",\"search\",\"hash\",i)));let o=e===\"\"||i.pathname===\"\",s=o?\"/\":i.pathname,l;if(s==null)l=n;else{let f=t.length-1;if(!r&&s.startsWith(\"..\")){let d=s.split(\"/\");for(;d[0]===\"..\";)d.shift(),f-=1;i.pathname=d.join(\"/\")}l=f>=0?t[f]:\"/\"}let a=Oy(i,l),u=s&&s!==\"/\"&&s.endsWith(\"/\"),c=(o||s===\".\")&&n.endsWith(\"/\");return!a.pathname.endsWith(\"/\")&&(u||c)&&(a.pathname+=\"/\"),a}const Ht=e=>e.join(\"/\").replace(/\\/\\/+/g,\"/\"),Iy=e=>e.replace(/\\/+$/,\"\").replace(/^\\/*/,\"/\"),By=e=>!e||e===\"?\"?\"\":e.startsWith(\"?\")?e:\"?\"+e,Uy=e=>!e||e===\"#\"?\"\":e.startsWith(\"#\")?e:\"#\"+e;function $y(e){return e!=null&&typeof e.status==\"number\"&&typeof e.statusText==\"string\"&&typeof e.internal==\"boolean\"&&\"data\"in e}const nm=[\"post\",\"put\",\"patch\",\"delete\"];new Set(nm);const Wy=[\"get\",...nm];new Set(Wy);/**\n * React Router v6.27.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */function li(){return li=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},li.apply(this,arguments)}const hu=x.createContext(null),Hy=x.createContext(null),Tn=x.createContext(null),ls=x.createContext(null),Jt=x.createContext({outlet:null,matches:[],isDataRoute:!1}),rm=x.createContext(null);function Ky(e,t){let{relative:n}=t===void 0?{}:t;vi()||J(!1);let{basename:r,navigator:i}=x.useContext(Tn),{hash:o,pathname:s,search:l}=om(e,{relative:n}),a=s;return r!==\"/\"&&(a=s===\"/\"?r:Ht([r,s])),i.createHref({pathname:a,search:l,hash:o})}function vi(){return x.useContext(ls)!=null}function yi(){return vi()||J(!1),x.useContext(ls).location}function im(e){x.useContext(Tn).static||x.useLayoutEffect(e)}function Gy(){let{isDataRoute:e}=x.useContext(Jt);return e?o1():Qy()}function Qy(){vi()||J(!1);let e=x.useContext(hu),{basename:t,future:n,navigator:r}=x.useContext(Tn),{matches:i}=x.useContext(Jt),{pathname:o}=yi(),s=JSON.stringify(em(i,n.v7_relativeSplatPath)),l=x.useRef(!1);return im(()=>{l.current=!0}),x.useCallback(function(u,c){if(c===void 0&&(c={}),!l.current)return;if(typeof u==\"number\"){r.go(u);return}let f=tm(u,JSON.parse(s),o,c.relative===\"path\");e==null&&t!==\"/\"&&(f.pathname=f.pathname===\"/\"?t:Ht([t,f.pathname])),(c.replace?r.replace:r.push)(f,c.state,c)},[t,r,s,o,e])}function iC(){let{matches:e}=x.useContext(Jt),t=e[e.length-1];return t?t.params:{}}function om(e,t){let{relative:n}=t===void 0?{}:t,{future:r}=x.useContext(Tn),{matches:i}=x.useContext(Jt),{pathname:o}=yi(),s=JSON.stringify(em(i,r.v7_relativeSplatPath));return x.useMemo(()=>tm(e,JSON.parse(s),o,n===\"path\"),[e,s,o,n])}function Yy(e,t){return Xy(e,t)}function Xy(e,t,n,r){vi()||J(!1);let{navigator:i}=x.useContext(Tn),{matches:o}=x.useContext(Jt),s=o[o.length-1],l=s?s.params:{};s&&s.pathname;let a=s?s.pathnameBase:\"/\";s&&s.route;let u=yi(),c;if(t){var f;let S=typeof t==\"string\"?ar(t):t;a===\"/\"||(f=S.pathname)!=null&&f.startsWith(a)||J(!1),c=S}else c=u;let d=c.pathname||\"/\",g=d;if(a!==\"/\"){let S=a.replace(/^\\//,\"\").split(\"/\");g=\"/\"+d.replace(/^\\//,\"\").split(\"/\").slice(S.length).join(\"/\")}let v=Py(e,{pathname:g}),y=e1(v&&v.map(S=>Object.assign({},S,{params:Object.assign({},l,S.params),pathname:Ht([a,i.encodeLocation?i.encodeLocation(S.pathname).pathname:S.pathname]),pathnameBase:S.pathnameBase===\"/\"?a:Ht([a,i.encodeLocation?i.encodeLocation(S.pathnameBase).pathname:S.pathnameBase])})),o,n,r);return t&&y?x.createElement(ls.Provider,{value:{location:li({pathname:\"/\",search:\"\",hash:\"\",state:null,key:\"default\"},c),navigationType:Nt.Pop}},y):y}function Zy(){let e=i1(),t=$y(e)?e.status+\" \"+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,i={padding:\"0.5rem\",backgroundColor:\"rgba(200,200,200, 0.5)\"};return x.createElement(x.Fragment,null,x.createElement(\"h2\",null,\"Unexpected Application Error!\"),x.createElement(\"h3\",{style:{fontStyle:\"italic\"}},t),n?x.createElement(\"pre\",{style:i},n):null,null)}const by=x.createElement(Zy,null);class Jy extends x.Component{constructor(t){super(t),this.state={location:t.location,revalidation:t.revalidation,error:t.error}}static getDerivedStateFromError(t){return{error:t}}static getDerivedStateFromProps(t,n){return n.location!==t.location||n.revalidation!==\"idle\"&&t.revalidation===\"idle\"?{error:t.error,location:t.location,revalidation:t.revalidation}:{error:t.error!==void 0?t.error:n.error,location:n.location,revalidation:t.revalidation||n.revalidation}}componentDidCatch(t,n){console.error(\"React Router caught the following error during render\",t,n)}render(){return this.state.error!==void 0?x.createElement(Jt.Provider,{value:this.props.routeContext},x.createElement(rm.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function qy(e){let{routeContext:t,match:n,children:r}=e,i=x.useContext(hu);return i&&i.static&&i.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(i.staticContext._deepestRenderedBoundaryId=n.route.id),x.createElement(Jt.Provider,{value:t},r)}function e1(e,t,n,r){var i;if(t===void 0&&(t=[]),n===void 0&&(n=null),r===void 0&&(r=null),e==null){var o;if(!n)return null;if(n.errors)e=n.matches;else if((o=r)!=null&&o.v7_partialHydration&&t.length===0&&!n.initialized&&n.matches.length>0)e=n.matches;else return null}let s=e,l=(i=n)==null?void 0:i.errors;if(l!=null){let c=s.findIndex(f=>f.route.id&&(l==null?void 0:l[f.route.id])!==void 0);c>=0||J(!1),s=s.slice(0,Math.min(s.length,c+1))}let a=!1,u=-1;if(n&&r&&r.v7_partialHydration)for(let c=0;c<s.length;c++){let f=s[c];if((f.route.HydrateFallback||f.route.hydrateFallbackElement)&&(u=c),f.route.id){let{loaderData:d,errors:g}=n,v=f.route.loader&&d[f.route.id]===void 0&&(!g||g[f.route.id]===void 0);if(f.route.lazy||v){a=!0,u>=0?s=s.slice(0,u+1):s=[s[0]];break}}}return s.reduceRight((c,f,d)=>{let g,v=!1,y=null,S=null;n&&(g=l&&f.route.id?l[f.route.id]:void 0,y=f.route.errorElement||by,a&&(u<0&&d===0?(v=!0,S=null):u===d&&(v=!0,S=f.route.hydrateFallbackElement||null)));let p=t.concat(s.slice(0,d+1)),h=()=>{let m;return g?m=y:v?m=S:f.route.Component?m=x.createElement(f.route.Component,null):f.route.element?m=f.route.element:m=c,x.createElement(qy,{match:f,routeContext:{outlet:c,matches:p,isDataRoute:n!=null},children:m})};return n&&(f.route.ErrorBoundary||f.route.errorElement||d===0)?x.createElement(Jy,{location:n.location,revalidation:n.revalidation,component:y,error:g,children:h(),routeContext:{outlet:null,matches:p,isDataRoute:!0}}):h()},null)}var sm=function(e){return e.UseBlocker=\"useBlocker\",e.UseRevalidator=\"useRevalidator\",e.UseNavigateStable=\"useNavigate\",e}(sm||{}),No=function(e){return e.UseBlocker=\"useBlocker\",e.UseLoaderData=\"useLoaderData\",e.UseActionData=\"useActionData\",e.UseRouteError=\"useRouteError\",e.UseNavigation=\"useNavigation\",e.UseRouteLoaderData=\"useRouteLoaderData\",e.UseMatches=\"useMatches\",e.UseRevalidator=\"useRevalidator\",e.UseNavigateStable=\"useNavigate\",e.UseRouteId=\"useRouteId\",e}(No||{});function t1(e){let t=x.useContext(hu);return t||J(!1),t}function n1(e){let t=x.useContext(Hy);return t||J(!1),t}function r1(e){let t=x.useContext(Jt);return t||J(!1),t}function lm(e){let t=r1(),n=t.matches[t.matches.length-1];return n.route.id||J(!1),n.route.id}function i1(){var e;let t=x.useContext(rm),n=n1(No.UseRouteError),r=lm(No.UseRouteError);return t!==void 0?t:(e=n.errors)==null?void 0:e[r]}function o1(){let{router:e}=t1(sm.UseNavigateStable),t=lm(No.UseNavigateStable),n=x.useRef(!1);return im(()=>{n.current=!0}),x.useCallback(function(i,o){o===void 0&&(o={}),n.current&&(typeof i==\"number\"?e.navigate(i):e.navigate(i,li({fromRouteId:t},o)))},[e,t])}function We(e){J(!1)}function s1(e){let{basename:t=\"/\",children:n=null,location:r,navigationType:i=Nt.Pop,navigator:o,static:s=!1,future:l}=e;vi()&&J(!1);let a=t.replace(/^\\/*/,\"/\"),u=x.useMemo(()=>({basename:a,navigator:o,static:s,future:li({v7_relativeSplatPath:!1},l)}),[a,l,o,s]);typeof r==\"string\"&&(r=ar(r));let{pathname:c=\"/\",search:f=\"\",hash:d=\"\",state:g=null,key:v=\"default\"}=r,y=x.useMemo(()=>{let S=du(c,a);return S==null?null:{location:{pathname:S,search:f,hash:d,state:g,key:v},navigationType:i}},[a,c,f,d,g,v,i]);return y==null?null:x.createElement(Tn.Provider,{value:u},x.createElement(ls.Provider,{children:n,value:y}))}function l1(e){let{children:t,location:n}=e;return Yy(ql(t),n)}new Promise(()=>{});function ql(e,t){t===void 0&&(t=[]);let n=[];return x.Children.forEach(e,(r,i)=>{if(!x.isValidElement(r))return;let o=[...t,i];if(r.type===x.Fragment){n.push.apply(n,ql(r.props.children,o));return}r.type!==We&&J(!1),!r.props.index||!r.props.children||J(!1);let s={id:r.props.id||o.join(\"-\"),caseSensitive:r.props.caseSensitive,element:r.props.element,Component:r.props.Component,index:r.props.index,path:r.props.path,loader:r.props.loader,action:r.props.action,errorElement:r.props.errorElement,ErrorBoundary:r.props.ErrorBoundary,hasErrorBoundary:r.props.ErrorBoundary!=null||r.props.errorElement!=null,shouldRevalidate:r.props.shouldRevalidate,handle:r.props.handle,lazy:r.props.lazy};r.props.children&&(s.children=ql(r.props.children,o)),n.push(s)}),n}/**\n * React Router DOM v6.27.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */function ea(){return ea=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ea.apply(this,arguments)}function a1(e,t){if(e==null)return{};var n={},r=Object.keys(e),i,o;for(o=0;o<r.length;o++)i=r[o],!(t.indexOf(i)>=0)&&(n[i]=e[i]);return n}function u1(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}function c1(e,t){return e.button===0&&(!t||t===\"_self\")&&!u1(e)}const f1=[\"onClick\",\"relative\",\"reloadDocument\",\"replace\",\"state\",\"target\",\"to\",\"preventScrollReset\",\"viewTransition\"],d1=\"6\";try{window.__reactRouterVersion=d1}catch{}const h1=\"startTransition\",cf=og[h1];function p1(e){let{basename:t,children:n,future:r,window:i}=e,o=x.useRef();o.current==null&&(o.current=xy({window:i,v5Compat:!0}));let s=o.current,[l,a]=x.useState({action:s.action,location:s.location}),{v7_startTransition:u}=r||{},c=x.useCallback(f=>{u&&cf?cf(()=>a(f)):a(f)},[a,u]);return x.useLayoutEffect(()=>s.listen(c),[s,c]),x.createElement(s1,{basename:t,children:n,location:l.location,navigationType:l.action,navigator:s,future:r})}const m1=typeof window<\"u\"&&typeof window.document<\"u\"&&typeof window.document.createElement<\"u\",g1=/^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i,Qe=x.forwardRef(function(t,n){let{onClick:r,relative:i,reloadDocument:o,replace:s,state:l,target:a,to:u,preventScrollReset:c,viewTransition:f}=t,d=a1(t,f1),{basename:g}=x.useContext(Tn),v,y=!1;if(typeof u==\"string\"&&g1.test(u)&&(v=u,m1))try{let m=new URL(window.location.href),w=u.startsWith(\"//\")?new URL(m.protocol+u):new URL(u),C=du(w.pathname,g);w.origin===m.origin&&C!=null?u=C+w.search+w.hash:y=!0}catch{}let S=Ky(u,{relative:i}),p=v1(u,{replace:s,state:l,target:a,preventScrollReset:c,relative:i,viewTransition:f});function h(m){r&&r(m),m.defaultPrevented||p(m)}return x.createElement(\"a\",ea({},d,{href:v||S,onClick:y||o?r:h,ref:n,target:a}))});var ff;(function(e){e.UseScrollRestoration=\"useScrollRestoration\",e.UseSubmit=\"useSubmit\",e.UseSubmitFetcher=\"useSubmitFetcher\",e.UseFetcher=\"useFetcher\",e.useViewTransitionState=\"useViewTransitionState\"})(ff||(ff={}));var df;(function(e){e.UseFetcher=\"useFetcher\",e.UseFetchers=\"useFetchers\",e.UseScrollRestoration=\"useScrollRestoration\"})(df||(df={}));function v1(e,t){let{target:n,replace:r,state:i,preventScrollReset:o,relative:s,viewTransition:l}=t===void 0?{}:t,a=Gy(),u=yi(),c=om(e,{relative:s});return x.useCallback(f=>{if(c1(f,n)){f.preventDefault();let d=r!==void 0?r:Do(u)===Do(c);a(e,{replace:d,state:i,preventScrollReset:o,relative:s,viewTransition:l})}},[u,a,c,r,i,n,e,o,s,l])}function y1(e){if(typeof Proxy>\"u\")return e;const t=new Map,n=(...r)=>e(...r);return new Proxy(n,{get:(r,i)=>i===\"create\"?e:(t.has(i)||t.set(i,e(i)),t.get(i))})}function ai(e){return e!==null&&typeof e==\"object\"&&typeof e.start==\"function\"}const ta=e=>Array.isArray(e);function am(e,t){if(!Array.isArray(t))return!1;const n=t.length;if(n!==e.length)return!1;for(let r=0;r<n;r++)if(t[r]!==e[r])return!1;return!0}function ui(e){return typeof e==\"string\"||Array.isArray(e)}function hf(e){const t=[{},{}];return e==null||e.values.forEach((n,r)=>{t[0][r]=n.get(),t[1][r]=n.getVelocity()}),t}function pu(e,t,n,r){if(typeof t==\"function\"){const[i,o]=hf(r);t=t(n!==void 0?n:e.custom,i,o)}if(typeof t==\"string\"&&(t=e.variants&&e.variants[t]),typeof t==\"function\"){const[i,o]=hf(r);t=t(n!==void 0?n:e.custom,i,o)}return t}function as(e,t,n){const r=e.getProps();return pu(r,t,n!==void 0?n:r.custom,e)}const mu=[\"animate\",\"whileInView\",\"whileFocus\",\"whileHover\",\"whileTap\",\"whileDrag\",\"exit\"],gu=[\"initial\",...mu],xi=[\"transformPerspective\",\"x\",\"y\",\"z\",\"translateX\",\"translateY\",\"translateZ\",\"scale\",\"scaleX\",\"scaleY\",\"rotate\",\"rotateX\",\"rotateY\",\"rotateZ\",\"skew\",\"skewX\",\"skewY\"],qt=new Set(xi),gt=e=>e*1e3,vt=e=>e/1e3,x1={type:\"spring\",stiffness:500,damping:25,restSpeed:10},w1=e=>({type:\"spring\",stiffness:550,damping:e===0?2*Math.sqrt(550):30,restSpeed:10}),S1={type:\"keyframes\",duration:.8},P1={type:\"keyframes\",ease:[.25,.1,.35,1],duration:.3},C1=(e,{keyframes:t})=>t.length>2?S1:qt.has(e)?e.startsWith(\"scale\")?w1(t[1]):x1:P1;function vu(e,t){return e?e[t]||e.default||e:void 0}const E1={skipAnimations:!1,useManualTiming:!1},T1=e=>e!==null;function us(e,{repeat:t,repeatType:n=\"loop\"},r){const i=e.filter(T1),o=t&&n!==\"loop\"&&t%2===1?0:i.length-1;return!o||r===void 0?i[o]:r}const ue=e=>e;function k1(e){let t=new Set,n=new Set,r=!1,i=!1;const o=new WeakSet;let s={delta:0,timestamp:0,isProcessing:!1};function l(u){o.has(u)&&(a.schedule(u),e()),u(s)}const a={schedule:(u,c=!1,f=!1)=>{const g=f&&r?t:n;return c&&o.add(u),g.has(u)||g.add(u),u},cancel:u=>{n.delete(u),o.delete(u)},process:u=>{if(s=u,r){i=!0;return}r=!0,[t,n]=[n,t],n.clear(),t.forEach(l),r=!1,i&&(i=!1,a.process(u))}};return a}const $i=[\"read\",\"resolveKeyframes\",\"update\",\"preRender\",\"render\",\"postRender\"],L1=40;function um(e,t){let n=!1,r=!0;const i={delta:0,timestamp:0,isProcessing:!1},o=()=>n=!0,s=$i.reduce((p,h)=>(p[h]=k1(o),p),{}),{read:l,resolveKeyframes:a,update:u,preRender:c,render:f,postRender:d}=s,g=()=>{const p=performance.now();n=!1,i.delta=r?1e3/60:Math.max(Math.min(p-i.timestamp,L1),1),i.timestamp=p,i.isProcessing=!0,l.process(i),a.process(i),u.process(i),c.process(i),f.process(i),d.process(i),i.isProcessing=!1,n&&t&&(r=!1,e(g))},v=()=>{n=!0,r=!0,i.isProcessing||e(g)};return{schedule:$i.reduce((p,h)=>{const m=s[h];return p[h]=(w,C=!1,k=!1)=>(n||v(),m.schedule(w,C,k)),p},{}),cancel:p=>{for(let h=0;h<$i.length;h++)s[$i[h]].cancel(p)},state:i,steps:s}}const{schedule:O,cancel:be,state:ie,steps:Ks}=um(typeof requestAnimationFrame<\"u\"?requestAnimationFrame:ue,!0),cm=(e,t,n)=>(((1-3*n+3*t)*e+(3*n-6*t))*e+3*t)*e,R1=1e-7,A1=12;function M1(e,t,n,r,i){let o,s,l=0;do s=t+(n-t)/2,o=cm(s,r,i)-e,o>0?n=s:t=s;while(Math.abs(o)>R1&&++l<A1);return s}function wi(e,t,n,r){if(e===t&&n===r)return ue;const i=o=>M1(o,0,1,e,n);return o=>o===0||o===1?o:cm(i(o),t,r)}const fm=e=>t=>t<=.5?e(2*t)/2:(2-e(2*(1-t)))/2,dm=e=>t=>1-e(1-t),hm=wi(.33,1.53,.69,.99),yu=dm(hm),pm=fm(yu),mm=e=>(e*=2)<1?.5*yu(e):.5*(2-Math.pow(2,-10*(e-1))),xu=e=>1-Math.sin(Math.acos(e)),gm=dm(xu),vm=fm(xu),ym=e=>/^0[^.\\s]+$/u.test(e);function V1(e){return typeof e==\"number\"?e===0:e!==null?e===\"none\"||e===\"0\"||ym(e):!0}let _1=ue,na=ue;const xm=e=>/^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(e),wm=e=>t=>typeof t==\"string\"&&t.startsWith(e),Sm=wm(\"--\"),j1=wm(\"var(--\"),wu=e=>j1(e)?D1.test(e.split(\"/*\")[0].trim()):!1,D1=/var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu,N1=/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;function O1(e){const t=N1.exec(e);if(!t)return[,];const[,n,r,i]=t;return[`--${n??r}`,i]}function Pm(e,t,n=1){const[r,i]=O1(e);if(!r)return;const o=window.getComputedStyle(t).getPropertyValue(r);if(o){const s=o.trim();return xm(s)?parseFloat(s):s}return wu(i)?Pm(i,t,n+1):i}const Qt=(e,t,n)=>n>t?t:n<e?e:n,ur={test:e=>typeof e==\"number\",parse:parseFloat,transform:e=>e},ci={...ur,transform:e=>Qt(0,1,e)},Wi={...ur,default:1},Si=e=>({test:t=>typeof t==\"string\"&&t.endsWith(e)&&t.split(\" \").length===1,parse:parseFloat,transform:t=>`${t}${e}`}),Lt=Si(\"deg\"),st=Si(\"%\"),M=Si(\"px\"),z1=Si(\"vh\"),F1=Si(\"vw\"),pf={...st,parse:e=>st.parse(e)/100,transform:e=>st.transform(e*100)},I1=new Set([\"width\",\"height\",\"top\",\"left\",\"right\",\"bottom\",\"x\",\"y\",\"translateX\",\"translateY\"]),mf=e=>e===ur||e===M,gf=(e,t)=>parseFloat(e.split(\", \")[t]),vf=(e,t)=>(n,{transform:r})=>{if(r===\"none\"||!r)return 0;const i=r.match(/^matrix3d\\((.+)\\)$/u);if(i)return gf(i[1],t);{const o=r.match(/^matrix\\((.+)\\)$/u);return o?gf(o[1],e):0}},B1=new Set([\"x\",\"y\",\"z\"]),U1=xi.filter(e=>!B1.has(e));function $1(e){const t=[];return U1.forEach(n=>{const r=e.getValue(n);r!==void 0&&(t.push([n,r.get()]),r.set(n.startsWith(\"scale\")?1:0))}),t}const rr={width:({x:e},{paddingLeft:t=\"0\",paddingRight:n=\"0\"})=>e.max-e.min-parseFloat(t)-parseFloat(n),height:({y:e},{paddingTop:t=\"0\",paddingBottom:n=\"0\"})=>e.max-e.min-parseFloat(t)-parseFloat(n),top:(e,{top:t})=>parseFloat(t),left:(e,{left:t})=>parseFloat(t),bottom:({y:e},{top:t})=>parseFloat(t)+(e.max-e.min),right:({x:e},{left:t})=>parseFloat(t)+(e.max-e.min),x:vf(4,13),y:vf(5,14)};rr.translateX=rr.x;rr.translateY=rr.y;const Cm=e=>t=>t.test(e),W1={test:e=>e===\"auto\",parse:e=>e},Em=[ur,M,st,Lt,F1,z1,W1],yf=e=>Em.find(Cm(e)),gn=new Set;let ra=!1,ia=!1;function Tm(){if(ia){const e=Array.from(gn).filter(r=>r.needsMeasurement),t=new Set(e.map(r=>r.element)),n=new Map;t.forEach(r=>{const i=$1(r);i.length&&(n.set(r,i),r.render())}),e.forEach(r=>r.measureInitialState()),t.forEach(r=>{r.render();const i=n.get(r);i&&i.forEach(([o,s])=>{var l;(l=r.getValue(o))===null||l===void 0||l.set(s)})}),e.forEach(r=>r.measureEndState()),e.forEach(r=>{r.suspendedScrollY!==void 0&&window.scrollTo(0,r.suspendedScrollY)})}ia=!1,ra=!1,gn.forEach(e=>e.complete()),gn.clear()}function km(){gn.forEach(e=>{e.readKeyframes(),e.needsMeasurement&&(ia=!0)})}function H1(){km(),Tm()}class Su{constructor(t,n,r,i,o,s=!1){this.isComplete=!1,this.isAsync=!1,this.needsMeasurement=!1,this.isScheduled=!1,this.unresolvedKeyframes=[...t],this.onComplete=n,this.name=r,this.motionValue=i,this.element=o,this.isAsync=s}scheduleResolve(){this.isScheduled=!0,this.isAsync?(gn.add(this),ra||(ra=!0,O.read(km),O.resolveKeyframes(Tm))):(this.readKeyframes(),this.complete())}readKeyframes(){const{unresolvedKeyframes:t,name:n,element:r,motionValue:i}=this;for(let o=0;o<t.length;o++)if(t[o]===null)if(o===0){const s=i==null?void 0:i.get(),l=t[t.length-1];if(s!==void 0)t[0]=s;else if(r&&n){const a=r.readValue(n,l);a!=null&&(t[0]=a)}t[0]===void 0&&(t[0]=l),i&&s===void 0&&i.set(t[0])}else t[o]=t[o-1]}setFinalKeyframe(){}measureInitialState(){}renderEndStyles(){}measureEndState(){}complete(){this.isComplete=!0,this.onComplete(this.unresolvedKeyframes,this.finalKeyframe),gn.delete(this)}cancel(){this.isComplete||(this.isScheduled=!1,gn.delete(this))}resume(){this.isComplete||this.scheduleResolve()}}const Fr=e=>Math.round(e*1e5)/1e5,Pu=/-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;function K1(e){return e==null}const G1=/^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu,Cu=(e,t)=>n=>!!(typeof n==\"string\"&&G1.test(n)&&n.startsWith(e)||t&&!K1(n)&&Object.prototype.hasOwnProperty.call(n,t)),Lm=(e,t,n)=>r=>{if(typeof r!=\"string\")return r;const[i,o,s,l]=r.match(Pu);return{[e]:parseFloat(i),[t]:parseFloat(o),[n]:parseFloat(s),alpha:l!==void 0?parseFloat(l):1}},Q1=e=>Qt(0,255,e),Gs={...ur,transform:e=>Math.round(Q1(e))},hn={test:Cu(\"rgb\",\"red\"),parse:Lm(\"red\",\"green\",\"blue\"),transform:({red:e,green:t,blue:n,alpha:r=1})=>\"rgba(\"+Gs.transform(e)+\", \"+Gs.transform(t)+\", \"+Gs.transform(n)+\", \"+Fr(ci.transform(r))+\")\"};function Y1(e){let t=\"\",n=\"\",r=\"\",i=\"\";return e.length>5?(t=e.substring(1,3),n=e.substring(3,5),r=e.substring(5,7),i=e.substring(7,9)):(t=e.substring(1,2),n=e.substring(2,3),r=e.substring(3,4),i=e.substring(4,5),t+=t,n+=n,r+=r,i+=i),{red:parseInt(t,16),green:parseInt(n,16),blue:parseInt(r,16),alpha:i?parseInt(i,16)/255:1}}const oa={test:Cu(\"#\"),parse:Y1,transform:hn.transform},In={test:Cu(\"hsl\",\"hue\"),parse:Lm(\"hue\",\"saturation\",\"lightness\"),transform:({hue:e,saturation:t,lightness:n,alpha:r=1})=>\"hsla(\"+Math.round(e)+\", \"+st.transform(Fr(t))+\", \"+st.transform(Fr(n))+\", \"+Fr(ci.transform(r))+\")\"},he={test:e=>hn.test(e)||oa.test(e)||In.test(e),parse:e=>hn.test(e)?hn.parse(e):In.test(e)?In.parse(e):oa.parse(e),transform:e=>typeof e==\"string\"?e:e.hasOwnProperty(\"red\")?hn.transform(e):In.transform(e)},X1=/(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;function Z1(e){var t,n;return isNaN(e)&&typeof e==\"string\"&&(((t=e.match(Pu))===null||t===void 0?void 0:t.length)||0)+(((n=e.match(X1))===null||n===void 0?void 0:n.length)||0)>0}const Rm=\"number\",Am=\"color\",b1=\"var\",J1=\"var(\",xf=\"${}\",q1=/var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;function fi(e){const t=e.toString(),n=[],r={color:[],number:[],var:[]},i=[];let o=0;const l=t.replace(q1,a=>(he.test(a)?(r.color.push(o),i.push(Am),n.push(he.parse(a))):a.startsWith(J1)?(r.var.push(o),i.push(b1),n.push(a)):(r.number.push(o),i.push(Rm),n.push(parseFloat(a))),++o,xf)).split(xf);return{values:n,split:l,indexes:r,types:i}}function Mm(e){return fi(e).values}function Vm(e){const{split:t,types:n}=fi(e),r=t.length;return i=>{let o=\"\";for(let s=0;s<r;s++)if(o+=t[s],i[s]!==void 0){const l=n[s];l===Rm?o+=Fr(i[s]):l===Am?o+=he.transform(i[s]):o+=i[s]}return o}}const e2=e=>typeof e==\"number\"?0:e;function t2(e){const t=Mm(e);return Vm(e)(t.map(e2))}const Yt={test:Z1,parse:Mm,createTransformer:Vm,getAnimatableNone:t2},n2=new Set([\"brightness\",\"contrast\",\"saturate\",\"opacity\"]);function r2(e){const[t,n]=e.slice(0,-1).split(\"(\");if(t===\"drop-shadow\")return e;const[r]=n.match(Pu)||[];if(!r)return e;const i=n.replace(r,\"\");let o=n2.has(t)?1:0;return r!==n&&(o*=100),t+\"(\"+o+i+\")\"}const i2=/\\b([a-z-]*)\\(.*?\\)/gu,sa={...Yt,getAnimatableNone:e=>{const t=e.match(i2);return t?t.map(r2).join(\" \"):e}},o2={borderWidth:M,borderTopWidth:M,borderRightWidth:M,borderBottomWidth:M,borderLeftWidth:M,borderRadius:M,radius:M,borderTopLeftRadius:M,borderTopRightRadius:M,borderBottomRightRadius:M,borderBottomLeftRadius:M,width:M,maxWidth:M,height:M,maxHeight:M,top:M,right:M,bottom:M,left:M,padding:M,paddingTop:M,paddingRight:M,paddingBottom:M,paddingLeft:M,margin:M,marginTop:M,marginRight:M,marginBottom:M,marginLeft:M,backgroundPositionX:M,backgroundPositionY:M},s2={rotate:Lt,rotateX:Lt,rotateY:Lt,rotateZ:Lt,scale:Wi,scaleX:Wi,scaleY:Wi,scaleZ:Wi,skew:Lt,skewX:Lt,skewY:Lt,distance:M,translateX:M,translateY:M,translateZ:M,x:M,y:M,z:M,perspective:M,transformPerspective:M,opacity:ci,originX:pf,originY:pf,originZ:M},wf={...ur,transform:Math.round},Eu={...o2,...s2,zIndex:wf,size:M,fillOpacity:ci,strokeOpacity:ci,numOctaves:wf},l2={...Eu,color:he,backgroundColor:he,outlineColor:he,fill:he,stroke:he,borderColor:he,borderTopColor:he,borderRightColor:he,borderBottomColor:he,borderLeftColor:he,filter:sa,WebkitFilter:sa},Tu=e=>l2[e];function _m(e,t){let n=Tu(e);return n!==sa&&(n=Yt),n.getAnimatableNone?n.getAnimatableNone(t):void 0}const a2=new Set([\"auto\",\"none\",\"0\"]);function u2(e,t,n){let r=0,i;for(;r<e.length&&!i;){const o=e[r];typeof o==\"string\"&&!a2.has(o)&&fi(o).values.length&&(i=e[r]),r++}if(i&&n)for(const o of t)e[o]=_m(n,i)}class jm extends Su{constructor(t,n,r,i,o){super(t,n,r,i,o,!0)}readKeyframes(){const{unresolvedKeyframes:t,element:n,name:r}=this;if(!n||!n.current)return;super.readKeyframes();for(let a=0;a<t.length;a++){let u=t[a];if(typeof u==\"string\"&&(u=u.trim(),wu(u))){const c=Pm(u,n.current);c!==void 0&&(t[a]=c),a===t.length-1&&(this.finalKeyframe=u)}}if(this.resolveNoneKeyframes(),!I1.has(r)||t.length!==2)return;const[i,o]=t,s=yf(i),l=yf(o);if(s!==l)if(mf(s)&&mf(l))for(let a=0;a<t.length;a++){const u=t[a];typeof u==\"string\"&&(t[a]=parseFloat(u))}else this.needsMeasurement=!0}resolveNoneKeyframes(){const{unresolvedKeyframes:t,name:n}=this,r=[];for(let i=0;i<t.length;i++)V1(t[i])&&r.push(i);r.length&&u2(t,r,n)}measureInitialState(){const{element:t,unresolvedKeyframes:n,name:r}=this;if(!t||!t.current)return;r===\"height\"&&(this.suspendedScrollY=window.pageYOffset),this.measuredOrigin=rr[r](t.measureViewportBox(),window.getComputedStyle(t.current)),n[0]=this.measuredOrigin;const i=n[n.length-1];i!==void 0&&t.getValue(r,i).jump(i,!1)}measureEndState(){var t;const{element:n,name:r,unresolvedKeyframes:i}=this;if(!n||!n.current)return;const o=n.getValue(r);o&&o.jump(this.measuredOrigin,!1);const s=i.length-1,l=i[s];i[s]=rr[r](n.measureViewportBox(),window.getComputedStyle(n.current)),l!==null&&this.finalKeyframe===void 0&&(this.finalKeyframe=l),!((t=this.removedTransforms)===null||t===void 0)&&t.length&&this.removedTransforms.forEach(([a,u])=>{n.getValue(a).set(u)}),this.resolveNoneKeyframes()}}function ku(e){return typeof e==\"function\"}let io;function c2(){io=void 0}const lt={now:()=>(io===void 0&&lt.set(ie.isProcessing||E1.useManualTiming?ie.timestamp:performance.now()),io),set:e=>{io=e,queueMicrotask(c2)}},Sf=(e,t)=>t===\"zIndex\"?!1:!!(typeof e==\"number\"||Array.isArray(e)||typeof e==\"string\"&&(Yt.test(e)||e===\"0\")&&!e.startsWith(\"url(\"));function f2(e){const t=e[0];if(e.length===1)return!0;for(let n=0;n<e.length;n++)if(e[n]!==t)return!0}function d2(e,t,n,r){const i=e[0];if(i===null)return!1;if(t===\"display\"||t===\"visibility\")return!0;const o=e[e.length-1],s=Sf(i,t),l=Sf(o,t);return!s||!l?!1:f2(e)||(n===\"spring\"||ku(n))&&r}const h2=40;class Dm{constructor({autoplay:t=!0,delay:n=0,type:r=\"keyframes\",repeat:i=0,repeatDelay:o=0,repeatType:s=\"loop\",...l}){this.isStopped=!1,this.hasAttemptedResolve=!1,this.createdAt=lt.now(),this.options={autoplay:t,delay:n,type:r,repeat:i,repeatDelay:o,repeatType:s,...l},this.updateFinishedPromise()}calcStartTime(){return this.resolvedAt?this.resolvedAt-this.createdAt>h2?this.resolvedAt:this.createdAt:this.createdAt}get resolved(){return!this._resolved&&!this.hasAttemptedResolve&&H1(),this._resolved}onKeyframesResolved(t,n){this.resolvedAt=lt.now(),this.hasAttemptedResolve=!0;const{name:r,type:i,velocity:o,delay:s,onComplete:l,onUpdate:a,isGenerator:u}=this.options;if(!u&&!d2(t,r,i,o))if(s)this.options.duration=0;else{a==null||a(us(t,this.options,n)),l==null||l(),this.resolveFinishedPromise();return}const c=this.initPlayback(t,n);c!==!1&&(this._resolved={keyframes:t,finalKeyframe:n,...c},this.onPostResolved())}onPostResolved(){}then(t,n){return this.currentFinishedPromise.then(t,n)}updateFinishedPromise(){this.currentFinishedPromise=new Promise(t=>{this.resolveFinishedPromise=t})}}function Lu(e,t){return t?e*(1e3/t):0}const p2=5;function Nm(e,t,n){const r=Math.max(t-p2,0);return Lu(n-e(r),t-r)}const Qs=.001,m2=.01,g2=10,v2=.05,y2=1;function x2({duration:e=800,bounce:t=.25,velocity:n=0,mass:r=1}){let i,o,s=1-t;s=Qt(v2,y2,s),e=Qt(m2,g2,vt(e)),s<1?(i=u=>{const c=u*s,f=c*e,d=c-n,g=la(u,s),v=Math.exp(-f);return Qs-d/g*v},o=u=>{const f=u*s*e,d=f*n+n,g=Math.pow(s,2)*Math.pow(u,2)*e,v=Math.exp(-f),y=la(Math.pow(u,2),s);return(-i(u)+Qs>0?-1:1)*((d-g)*v)/y}):(i=u=>{const c=Math.exp(-u*e),f=(u-n)*e+1;return-Qs+c*f},o=u=>{const c=Math.exp(-u*e),f=(n-u)*(e*e);return c*f});const l=5/e,a=S2(i,o,l);if(e=gt(e),isNaN(a))return{stiffness:100,damping:10,duration:e};{const u=Math.pow(a,2)*r;return{stiffness:u,damping:s*2*Math.sqrt(r*u),duration:e}}}const w2=12;function S2(e,t,n){let r=n;for(let i=1;i<w2;i++)r=r-e(r)/t(r);return r}function la(e,t){return e*Math.sqrt(1-t*t)}const P2=[\"duration\",\"bounce\"],C2=[\"stiffness\",\"damping\",\"mass\"];function Pf(e,t){return t.some(n=>e[n]!==void 0)}function E2(e){let t={velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1,...e};if(!Pf(e,C2)&&Pf(e,P2)){const n=x2(e);t={...t,...n,mass:1},t.isResolvedFromDuration=!0}return t}function Om({keyframes:e,restDelta:t,restSpeed:n,...r}){const i=e[0],o=e[e.length-1],s={done:!1,value:i},{stiffness:l,damping:a,mass:u,duration:c,velocity:f,isResolvedFromDuration:d}=E2({...r,velocity:-vt(r.velocity||0)}),g=f||0,v=a/(2*Math.sqrt(l*u)),y=o-i,S=vt(Math.sqrt(l/u)),p=Math.abs(y)<5;n||(n=p?.01:2),t||(t=p?.005:.5);let h;if(v<1){const m=la(S,v);h=w=>{const C=Math.exp(-v*S*w);return o-C*((g+v*S*y)/m*Math.sin(m*w)+y*Math.cos(m*w))}}else if(v===1)h=m=>o-Math.exp(-S*m)*(y+(g+S*y)*m);else{const m=S*Math.sqrt(v*v-1);h=w=>{const C=Math.exp(-v*S*w),k=Math.min(m*w,300);return o-C*((g+v*S*y)*Math.sinh(k)+m*y*Math.cosh(k))/m}}return{calculatedDuration:d&&c||null,next:m=>{const w=h(m);if(d)s.done=m>=c;else{let C=0;v<1&&(C=m===0?gt(g):Nm(h,m,w));const k=Math.abs(C)<=n,R=Math.abs(o-w)<=t;s.done=k&&R}return s.value=s.done?o:w,s}}}function Cf({keyframes:e,velocity:t=0,power:n=.8,timeConstant:r=325,bounceDamping:i=10,bounceStiffness:o=500,modifyTarget:s,min:l,max:a,restDelta:u=.5,restSpeed:c}){const f=e[0],d={done:!1,value:f},g=T=>l!==void 0&&T<l||a!==void 0&&T>a,v=T=>l===void 0?a:a===void 0||Math.abs(l-T)<Math.abs(a-T)?l:a;let y=n*t;const S=f+y,p=s===void 0?S:s(S);p!==S&&(y=p-f);const h=T=>-y*Math.exp(-T/r),m=T=>p+h(T),w=T=>{const N=h(T),V=m(T);d.done=Math.abs(N)<=u,d.value=d.done?p:V};let C,k;const R=T=>{g(d.value)&&(C=T,k=Om({keyframes:[d.value,v(d.value)],velocity:Nm(m,T,d.value),damping:i,stiffness:o,restDelta:u,restSpeed:c}))};return R(0),{calculatedDuration:null,next:T=>{let N=!1;return!k&&C===void 0&&(N=!0,w(T),R(T)),C!==void 0&&T>=C?k.next(T-C):(!N&&w(T),d)}}}const T2=wi(.42,0,1,1),k2=wi(0,0,.58,1),zm=wi(.42,0,.58,1),L2=e=>Array.isArray(e)&&typeof e[0]!=\"number\",Ru=e=>Array.isArray(e)&&typeof e[0]==\"number\",Ef={linear:ue,easeIn:T2,easeInOut:zm,easeOut:k2,circIn:xu,circInOut:vm,circOut:gm,backIn:yu,backInOut:pm,backOut:hm,anticipate:mm},Tf=e=>{if(Ru(e)){na(e.length===4);const[t,n,r,i]=e;return wi(t,n,r,i)}else if(typeof e==\"string\")return na(Ef[e]!==void 0),Ef[e];return e},R2=(e,t)=>n=>t(e(n)),yt=(...e)=>e.reduce(R2),Pn=(e,t,n)=>{const r=t-e;return r===0?1:(n-e)/r},H=(e,t,n)=>e+(t-e)*n;function Ys(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e}function A2({hue:e,saturation:t,lightness:n,alpha:r}){e/=360,t/=100,n/=100;let i=0,o=0,s=0;if(!t)i=o=s=n;else{const l=n<.5?n*(1+t):n+t-n*t,a=2*n-l;i=Ys(a,l,e+1/3),o=Ys(a,l,e),s=Ys(a,l,e-1/3)}return{red:Math.round(i*255),green:Math.round(o*255),blue:Math.round(s*255),alpha:r}}function Oo(e,t){return n=>n>0?t:e}const Xs=(e,t,n)=>{const r=e*e,i=n*(t*t-r)+r;return i<0?0:Math.sqrt(i)},M2=[oa,hn,In],V2=e=>M2.find(t=>t.test(e));function kf(e){const t=V2(e);if(!t)return!1;let n=t.parse(e);return t===In&&(n=A2(n)),n}const Lf=(e,t)=>{const n=kf(e),r=kf(t);if(!n||!r)return Oo(e,t);const i={...n};return o=>(i.red=Xs(n.red,r.red,o),i.green=Xs(n.green,r.green,o),i.blue=Xs(n.blue,r.blue,o),i.alpha=H(n.alpha,r.alpha,o),hn.transform(i))},aa=new Set([\"none\",\"hidden\"]);function _2(e,t){return aa.has(e)?n=>n<=0?e:t:n=>n>=1?t:e}function j2(e,t){return n=>H(e,t,n)}function Au(e){return typeof e==\"number\"?j2:typeof e==\"string\"?wu(e)?Oo:he.test(e)?Lf:O2:Array.isArray(e)?Fm:typeof e==\"object\"?he.test(e)?Lf:D2:Oo}function Fm(e,t){const n=[...e],r=n.length,i=e.map((o,s)=>Au(o)(o,t[s]));return o=>{for(let s=0;s<r;s++)n[s]=i[s](o);return n}}function D2(e,t){const n={...e,...t},r={};for(const i in n)e[i]!==void 0&&t[i]!==void 0&&(r[i]=Au(e[i])(e[i],t[i]));return i=>{for(const o in r)n[o]=r[o](i);return n}}function N2(e,t){var n;const r=[],i={color:0,var:0,number:0};for(let o=0;o<t.values.length;o++){const s=t.types[o],l=e.indexes[s][i[s]],a=(n=e.values[l])!==null&&n!==void 0?n:0;r[o]=a,i[s]++}return r}const O2=(e,t)=>{const n=Yt.createTransformer(t),r=fi(e),i=fi(t);return r.indexes.var.length===i.indexes.var.length&&r.indexes.color.length===i.indexes.color.length&&r.indexes.number.length>=i.indexes.number.length?aa.has(e)&&!i.values.length||aa.has(t)&&!r.values.length?_2(e,t):yt(Fm(N2(r,i),i.values),n):Oo(e,t)};function Im(e,t,n){return typeof e==\"number\"&&typeof t==\"number\"&&typeof n==\"number\"?H(e,t,n):Au(e)(e,t)}function z2(e,t,n){const r=[],i=n||Im,o=e.length-1;for(let s=0;s<o;s++){let l=i(e[s],e[s+1]);if(t){const a=Array.isArray(t)?t[s]||ue:t;l=yt(a,l)}r.push(l)}return r}function Mu(e,t,{clamp:n=!0,ease:r,mixer:i}={}){const o=e.length;if(na(o===t.length),o===1)return()=>t[0];if(o===2&&e[0]===e[1])return()=>t[1];e[0]>e[o-1]&&(e=[...e].reverse(),t=[...t].reverse());const s=z2(t,r,i),l=s.length,a=u=>{let c=0;if(l>1)for(;c<e.length-2&&!(u<e[c+1]);c++);const f=Pn(e[c],e[c+1],u);return s[c](f)};return n?u=>a(Qt(e[0],e[o-1],u)):a}function F2(e,t){const n=e[e.length-1];for(let r=1;r<=t;r++){const i=Pn(0,t,r);e.push(H(n,1,i))}}function Bm(e){const t=[0];return F2(t,e.length-1),t}function I2(e,t){return e.map(n=>n*t)}function B2(e,t){return e.map(()=>t||zm).splice(0,e.length-1)}function zo({duration:e=300,keyframes:t,times:n,ease:r=\"easeInOut\"}){const i=L2(r)?r.map(Tf):Tf(r),o={done:!1,value:t[0]},s=I2(n&&n.length===t.length?n:Bm(t),e),l=Mu(s,t,{ease:Array.isArray(i)?i:B2(t,i)});return{calculatedDuration:e,next:a=>(o.value=l(a),o.done=a>=e,o)}}const Rf=2e4;function U2(e){let t=0;const n=50;let r=e.next(t);for(;!r.done&&t<Rf;)t+=n,r=e.next(t);return t>=Rf?1/0:t}const $2=e=>{const t=({timestamp:n})=>e(n);return{start:()=>O.update(t,!0),stop:()=>be(t),now:()=>ie.isProcessing?ie.timestamp:lt.now()}},W2={decay:Cf,inertia:Cf,tween:zo,keyframes:zo,spring:Om},H2=e=>e/100;class Vu extends Dm{constructor(t){super(t),this.holdTime=null,this.cancelTime=null,this.currentTime=0,this.playbackSpeed=1,this.pendingPlayState=\"running\",this.startTime=null,this.state=\"idle\",this.stop=()=>{if(this.resolver.cancel(),this.isStopped=!0,this.state===\"idle\")return;this.teardown();const{onStop:a}=this.options;a&&a()};const{name:n,motionValue:r,element:i,keyframes:o}=this.options,s=(i==null?void 0:i.KeyframeResolver)||Su,l=(a,u)=>this.onKeyframesResolved(a,u);this.resolver=new s(o,l,n,r,i),this.resolver.scheduleResolve()}initPlayback(t){const{type:n=\"keyframes\",repeat:r=0,repeatDelay:i=0,repeatType:o,velocity:s=0}=this.options,l=ku(n)?n:W2[n]||zo;let a,u;l!==zo&&typeof t[0]!=\"number\"&&(a=yt(H2,Im(t[0],t[1])),t=[0,100]);const c=l({...this.options,keyframes:t});o===\"mirror\"&&(u=l({...this.options,keyframes:[...t].reverse(),velocity:-s})),c.calculatedDuration===null&&(c.calculatedDuration=U2(c));const{calculatedDuration:f}=c,d=f+i,g=d*(r+1)-i;return{generator:c,mirroredGenerator:u,mapPercentToKeyframes:a,calculatedDuration:f,resolvedDuration:d,totalDuration:g}}onPostResolved(){const{autoplay:t=!0}=this.options;this.play(),this.pendingPlayState===\"paused\"||!t?this.pause():this.state=this.pendingPlayState}tick(t,n=!1){const{resolved:r}=this;if(!r){const{keyframes:T}=this.options;return{done:!0,value:T[T.length-1]}}const{finalKeyframe:i,generator:o,mirroredGenerator:s,mapPercentToKeyframes:l,keyframes:a,calculatedDuration:u,totalDuration:c,resolvedDuration:f}=r;if(this.startTime===null)return o.next(0);const{delay:d,repeat:g,repeatType:v,repeatDelay:y,onUpdate:S}=this.options;this.speed>0?this.startTime=Math.min(this.startTime,t):this.speed<0&&(this.startTime=Math.min(t-c/this.speed,this.startTime)),n?this.currentTime=t:this.holdTime!==null?this.currentTime=this.holdTime:this.currentTime=Math.round(t-this.startTime)*this.speed;const p=this.currentTime-d*(this.speed>=0?1:-1),h=this.speed>=0?p<0:p>c;this.currentTime=Math.max(p,0),this.state===\"finished\"&&this.holdTime===null&&(this.currentTime=c);let m=this.currentTime,w=o;if(g){const T=Math.min(this.currentTime,c)/f;let N=Math.floor(T),V=T%1;!V&&T>=1&&(V=1),V===1&&N--,N=Math.min(N,g+1),!!(N%2)&&(v===\"reverse\"?(V=1-V,y&&(V-=y/f)):v===\"mirror\"&&(w=s)),m=Qt(0,1,V)*f}const C=h?{done:!1,value:a[0]}:w.next(m);l&&(C.value=l(C.value));let{done:k}=C;!h&&u!==null&&(k=this.speed>=0?this.currentTime>=c:this.currentTime<=0);const R=this.holdTime===null&&(this.state===\"finished\"||this.state===\"running\"&&k);return R&&i!==void 0&&(C.value=us(a,this.options,i)),S&&S(C.value),R&&this.finish(),C}get duration(){const{resolved:t}=this;return t?vt(t.calculatedDuration):0}get time(){return vt(this.currentTime)}set time(t){t=gt(t),this.currentTime=t,this.holdTime!==null||this.speed===0?this.holdTime=t:this.driver&&(this.startTime=this.driver.now()-t/this.speed)}get speed(){return this.playbackSpeed}set speed(t){const n=this.playbackSpeed!==t;this.playbackSpeed=t,n&&(this.time=vt(this.currentTime))}play(){if(this.resolver.isScheduled||this.resolver.resume(),!this._resolved){this.pendingPlayState=\"running\";return}if(this.isStopped)return;const{driver:t=$2,onPlay:n,startTime:r}=this.options;this.driver||(this.driver=t(o=>this.tick(o))),n&&n();const i=this.driver.now();this.holdTime!==null?this.startTime=i-this.holdTime:this.startTime?this.state===\"finished\"&&(this.startTime=i):this.startTime=r??this.calcStartTime(),this.state===\"finished\"&&this.updateFinishedPromise(),this.cancelTime=this.startTime,this.holdTime=null,this.state=\"running\",this.driver.start()}pause(){var t;if(!this._resolved){this.pendingPlayState=\"paused\";return}this.state=\"paused\",this.holdTime=(t=this.currentTime)!==null&&t!==void 0?t:0}complete(){this.state!==\"running\"&&this.play(),this.pendingPlayState=this.state=\"finished\",this.holdTime=null}finish(){this.teardown(),this.state=\"finished\";const{onComplete:t}=this.options;t&&t()}cancel(){this.cancelTime!==null&&this.tick(this.cancelTime),this.teardown(),this.updateFinishedPromise()}teardown(){this.state=\"idle\",this.stopDriver(),this.resolveFinishedPromise(),this.updateFinishedPromise(),this.startTime=this.cancelTime=null,this.resolver.cancel()}stopDriver(){this.driver&&(this.driver.stop(),this.driver=void 0)}sample(t){return this.startTime=0,this.tick(t,!0)}}const Um=new Set([\"opacity\",\"clipPath\",\"filter\",\"transform\"]),K2=10,G2=(e,t)=>{let n=\"\";const r=Math.max(Math.round(t/K2),2);for(let i=0;i<r;i++)n+=e(Pn(0,r-1,i))+\", \";return`linear(${n.substring(0,n.length-2)})`};function _u(e){let t;return()=>(t===void 0&&(t=e()),t)}const Q2={linearEasing:void 0};function Y2(e,t){const n=_u(e);return()=>{var r;return(r=Q2[t])!==null&&r!==void 0?r:n()}}const Fo=Y2(()=>{try{document.createElement(\"div\").animate({opacity:0},{easing:\"linear(0, 1)\"})}catch{return!1}return!0},\"linearEasing\");function $m(e){return!!(typeof e==\"function\"&&Fo()||!e||typeof e==\"string\"&&(e in ua||Fo())||Ru(e)||Array.isArray(e)&&e.every($m))}const Lr=([e,t,n,r])=>`cubic-bezier(${e}, ${t}, ${n}, ${r})`,ua={linear:\"linear\",ease:\"ease\",easeIn:\"ease-in\",easeOut:\"ease-out\",easeInOut:\"ease-in-out\",circIn:Lr([0,.65,.55,1]),circOut:Lr([.55,0,1,.45]),backIn:Lr([.31,.01,.66,-.59]),backOut:Lr([.33,1.53,.69,.99])};function Wm(e,t){if(e)return typeof e==\"function\"&&Fo()?G2(e,t):Ru(e)?Lr(e):Array.isArray(e)?e.map(n=>Wm(n,t)||ua.easeOut):ua[e]}function X2(e,t,n,{delay:r=0,duration:i=300,repeat:o=0,repeatType:s=\"loop\",ease:l,times:a}={}){const u={[t]:n};a&&(u.offset=a);const c=Wm(l,i);return Array.isArray(c)&&(u.easing=c),e.animate(u,{delay:r,duration:i,easing:Array.isArray(c)?\"linear\":c,fill:\"both\",iterations:o+1,direction:s===\"reverse\"?\"alternate\":\"normal\"})}function Af(e,t){e.timeline=t,e.onfinish=null}const Z2=_u(()=>Object.hasOwnProperty.call(Element.prototype,\"animate\")),Io=10,b2=2e4;function J2(e){return ku(e.type)||e.type===\"spring\"||!$m(e.ease)}function q2(e,t){const n=new Vu({...t,keyframes:e,repeat:0,delay:0,isGenerator:!0});let r={done:!1,value:e[0]};const i=[];let o=0;for(;!r.done&&o<b2;)r=n.sample(o),i.push(r.value),o+=Io;return{times:void 0,keyframes:i,duration:o-Io,ease:\"linear\"}}const Hm={anticipate:mm,backInOut:pm,circInOut:vm};function ex(e){return e in Hm}class Mf extends Dm{constructor(t){super(t);const{name:n,motionValue:r,element:i,keyframes:o}=this.options;this.resolver=new jm(o,(s,l)=>this.onKeyframesResolved(s,l),n,r,i),this.resolver.scheduleResolve()}initPlayback(t,n){var r;let{duration:i=300,times:o,ease:s,type:l,motionValue:a,name:u,startTime:c}=this.options;if(!(!((r=a.owner)===null||r===void 0)&&r.current))return!1;if(typeof s==\"string\"&&Fo()&&ex(s)&&(s=Hm[s]),J2(this.options)){const{onComplete:d,onUpdate:g,motionValue:v,element:y,...S}=this.options,p=q2(t,S);t=p.keyframes,t.length===1&&(t[1]=t[0]),i=p.duration,o=p.times,s=p.ease,l=\"keyframes\"}const f=X2(a.owner.current,u,t,{...this.options,duration:i,times:o,ease:s});return f.startTime=c??this.calcStartTime(),this.pendingTimeline?(Af(f,this.pendingTimeline),this.pendingTimeline=void 0):f.onfinish=()=>{const{onComplete:d}=this.options;a.set(us(t,this.options,n)),d&&d(),this.cancel(),this.resolveFinishedPromise()},{animation:f,duration:i,times:o,type:l,ease:s,keyframes:t}}get duration(){const{resolved:t}=this;if(!t)return 0;const{duration:n}=t;return vt(n)}get time(){const{resolved:t}=this;if(!t)return 0;const{animation:n}=t;return vt(n.currentTime||0)}set time(t){const{resolved:n}=this;if(!n)return;const{animation:r}=n;r.currentTime=gt(t)}get speed(){const{resolved:t}=this;if(!t)return 1;const{animation:n}=t;return n.playbackRate}set speed(t){const{resolved:n}=this;if(!n)return;const{animation:r}=n;r.playbackRate=t}get state(){const{resolved:t}=this;if(!t)return\"idle\";const{animation:n}=t;return n.playState}get startTime(){const{resolved:t}=this;if(!t)return null;const{animation:n}=t;return n.startTime}attachTimeline(t){if(!this._resolved)this.pendingTimeline=t;else{const{resolved:n}=this;if(!n)return ue;const{animation:r}=n;Af(r,t)}return ue}play(){if(this.isStopped)return;const{resolved:t}=this;if(!t)return;const{animation:n}=t;n.playState===\"finished\"&&this.updateFinishedPromise(),n.play()}pause(){const{resolved:t}=this;if(!t)return;const{animation:n}=t;n.pause()}stop(){if(this.resolver.cancel(),this.isStopped=!0,this.state===\"idle\")return;this.resolveFinishedPromise(),this.updateFinishedPromise();const{resolved:t}=this;if(!t)return;const{animation:n,keyframes:r,duration:i,type:o,ease:s,times:l}=t;if(n.playState===\"idle\"||n.playState===\"finished\")return;if(this.time){const{motionValue:u,onUpdate:c,onComplete:f,element:d,...g}=this.options,v=new Vu({...g,keyframes:r,duration:i,type:o,ease:s,times:l,isGenerator:!0}),y=gt(this.time);u.setWithVelocity(v.sample(y-Io).value,v.sample(y).value,Io)}const{onStop:a}=this.options;a&&a(),this.cancel()}complete(){const{resolved:t}=this;t&&t.animation.finish()}cancel(){const{resolved:t}=this;t&&t.animation.cancel()}static supports(t){const{motionValue:n,name:r,repeatDelay:i,repeatType:o,damping:s,type:l}=t;return Z2()&&r&&Um.has(r)&&n&&n.owner&&n.owner.current instanceof HTMLElement&&!n.owner.getProps().onUpdate&&!i&&o!==\"mirror\"&&s!==0&&l!==\"inertia\"}}const Km=_u(()=>window.ScrollTimeline!==void 0);class tx{constructor(t){this.stop=()=>this.runAll(\"stop\"),this.animations=t.filter(Boolean)}then(t,n){return Promise.all(this.animations).then(t).catch(n)}getAll(t){return this.animations[0][t]}setAll(t,n){for(let r=0;r<this.animations.length;r++)this.animations[r][t]=n}attachTimeline(t,n){const r=this.animations.map(i=>Km()&&i.attachTimeline?i.attachTimeline(t):n(i));return()=>{r.forEach((i,o)=>{i&&i(),this.animations[o].stop()})}}get time(){return this.getAll(\"time\")}set time(t){this.setAll(\"time\",t)}get speed(){return this.getAll(\"speed\")}set speed(t){this.setAll(\"speed\",t)}get startTime(){return this.getAll(\"startTime\")}get duration(){let t=0;for(let n=0;n<this.animations.length;n++)t=Math.max(t,this.animations[n].duration);return t}runAll(t){this.animations.forEach(n=>n[t]())}play(){this.runAll(\"play\")}pause(){this.runAll(\"pause\")}cancel(){this.runAll(\"cancel\")}complete(){this.runAll(\"complete\")}}function nx({when:e,delay:t,delayChildren:n,staggerChildren:r,staggerDirection:i,repeat:o,repeatType:s,repeatDelay:l,from:a,elapsed:u,...c}){return!!Object.keys(c).length}const ju=(e,t,n,r={},i,o)=>s=>{const l=vu(r,e)||{},a=l.delay||r.delay||0;let{elapsed:u=0}=r;u=u-gt(a);let c={keyframes:Array.isArray(n)?n:[null,n],ease:\"easeOut\",velocity:t.getVelocity(),...l,delay:-u,onUpdate:d=>{t.set(d),l.onUpdate&&l.onUpdate(d)},onComplete:()=>{s(),l.onComplete&&l.onComplete()},name:e,motionValue:t,element:o?void 0:i};nx(l)||(c={...c,...C1(e,c)}),c.duration&&(c.duration=gt(c.duration)),c.repeatDelay&&(c.repeatDelay=gt(c.repeatDelay)),c.from!==void 0&&(c.keyframes[0]=c.from);let f=!1;if((c.type===!1||c.duration===0&&!c.repeatDelay)&&(c.duration=0,c.delay===0&&(f=!0)),f&&!o&&t.get()!==void 0){const d=us(c.keyframes,l);if(d!==void 0)return O.update(()=>{c.onUpdate(d),c.onComplete()}),new tx([])}return!o&&Mf.supports(c)?new Mf(c):new Vu(c)},rx=e=>!!(e&&typeof e==\"object\"&&e.mix&&e.toValue),ix=e=>ta(e)?e[e.length-1]||0:e;function Du(e,t){e.indexOf(t)===-1&&e.push(t)}function Nu(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}class Ou{constructor(){this.subscriptions=[]}add(t){return Du(this.subscriptions,t),()=>Nu(this.subscriptions,t)}notify(t,n,r){const i=this.subscriptions.length;if(i)if(i===1)this.subscriptions[0](t,n,r);else for(let o=0;o<i;o++){const s=this.subscriptions[o];s&&s(t,n,r)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}const Vf=30,ox=e=>!isNaN(parseFloat(e)),Ir={current:void 0};class sx{constructor(t,n={}){this.version=\"11.11.9\",this.canTrackVelocity=null,this.events={},this.updateAndNotify=(r,i=!0)=>{const o=lt.now();this.updatedAt!==o&&this.setPrevFrameValue(),this.prev=this.current,this.setCurrent(r),this.current!==this.prev&&this.events.change&&this.events.change.notify(this.current),i&&this.events.renderRequest&&this.events.renderRequest.notify(this.current)},this.hasAnimated=!1,this.setCurrent(t),this.owner=n.owner}setCurrent(t){this.current=t,this.updatedAt=lt.now(),this.canTrackVelocity===null&&t!==void 0&&(this.canTrackVelocity=ox(this.current))}setPrevFrameValue(t=this.current){this.prevFrameValue=t,this.prevUpdatedAt=this.updatedAt}onChange(t){return this.on(\"change\",t)}on(t,n){this.events[t]||(this.events[t]=new Ou);const r=this.events[t].add(n);return t===\"change\"?()=>{r(),O.read(()=>{this.events.change.getSize()||this.stop()})}:r}clearListeners(){for(const t in this.events)this.events[t].clear()}attach(t,n){this.passiveEffect=t,this.stopPassiveEffect=n}set(t,n=!0){!n||!this.passiveEffect?this.updateAndNotify(t,n):this.passiveEffect(t,this.updateAndNotify)}setWithVelocity(t,n,r){this.set(n),this.prev=void 0,this.prevFrameValue=t,this.prevUpdatedAt=this.updatedAt-r}jump(t,n=!0){this.updateAndNotify(t),this.prev=t,this.prevUpdatedAt=this.prevFrameValue=void 0,n&&this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}get(){return Ir.current&&Ir.current.push(this),this.current}getPrevious(){return this.prev}getVelocity(){const t=lt.now();if(!this.canTrackVelocity||this.prevFrameValue===void 0||t-this.updatedAt>Vf)return 0;const n=Math.min(this.updatedAt-this.prevUpdatedAt,Vf);return Lu(parseFloat(this.current)-parseFloat(this.prevFrameValue),n)}start(t){return this.stop(),new Promise(n=>{this.hasAnimated=!0,this.animation=t(n),this.events.animationStart&&this.events.animationStart.notify()}).then(()=>{this.events.animationComplete&&this.events.animationComplete.notify(),this.clearAnimation()})}stop(){this.animation&&(this.animation.stop(),this.events.animationCancel&&this.events.animationCancel.notify()),this.clearAnimation()}isAnimating(){return!!this.animation}clearAnimation(){delete this.animation}destroy(){this.clearListeners(),this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}}function rt(e,t){return new sx(e,t)}function lx(e,t,n){e.hasValue(t)?e.getValue(t).set(n):e.addValue(t,rt(n))}function ax(e,t){const n=as(e,t);let{transitionEnd:r={},transition:i={},...o}=n||{};o={...o,...r};for(const s in o){const l=ix(o[s]);lx(e,s,l)}}const cs=e=>e.replace(/([a-z])([A-Z])/gu,\"$1-$2\").toLowerCase(),ux=\"framerAppearId\",Gm=\"data-\"+cs(ux);function Qm(e){return e.props[Gm]}const me=e=>!!(e&&e.getVelocity);function cx(e){return!!(me(e)&&e.add)}function ca(e,t){if(!e.applyWillChange)return;const n=e.getValue(\"willChange\");if(cx(n))return n.add(t)}function fx({protectedKeys:e,needsAnimating:t},n){const r=e.hasOwnProperty(n)&&t[n]!==!0;return t[n]=!1,r}function Ym(e,t,{delay:n=0,transitionOverride:r,type:i}={}){var o;let{transition:s=e.getDefaultTransition(),transitionEnd:l,...a}=t;r&&(s=r);const u=[],c=i&&e.animationState&&e.animationState.getState()[i];for(const f in a){const d=e.getValue(f,(o=e.latestValues[f])!==null&&o!==void 0?o:null),g=a[f];if(g===void 0||c&&fx(c,f))continue;const v={delay:n,...vu(s||{},f)};let y=!1;if(window.MotionHandoffAnimation){const p=Qm(e);if(p){const h=window.MotionHandoffAnimation(p,f,O);h!==null&&(v.startTime=h,y=!0)}}ca(e,f),d.start(ju(f,d,g,e.shouldReduceMotion&&qt.has(f)?{type:!1}:v,e,y));const S=d.animation;S&&u.push(S)}return l&&Promise.all(u).then(()=>{O.update(()=>{l&&ax(e,l)})}),u}function fa(e,t,n={}){var r;const i=as(e,t,n.type===\"exit\"?(r=e.presenceContext)===null||r===void 0?void 0:r.custom:void 0);let{transition:o=e.getDefaultTransition()||{}}=i||{};n.transitionOverride&&(o=n.transitionOverride);const s=i?()=>Promise.all(Ym(e,i,n)):()=>Promise.resolve(),l=e.variantChildren&&e.variantChildren.size?(u=0)=>{const{delayChildren:c=0,staggerChildren:f,staggerDirection:d}=o;return dx(e,t,c+u,f,d,n)}:()=>Promise.resolve(),{when:a}=o;if(a){const[u,c]=a===\"beforeChildren\"?[s,l]:[l,s];return u().then(()=>c())}else return Promise.all([s(),l(n.delay)])}function dx(e,t,n=0,r=0,i=1,o){const s=[],l=(e.variantChildren.size-1)*r,a=i===1?(u=0)=>u*r:(u=0)=>l-u*r;return Array.from(e.variantChildren).sort(hx).forEach((u,c)=>{u.notify(\"AnimationStart\",t),s.push(fa(u,t,{...o,delay:n+a(c)}).then(()=>u.notify(\"AnimationComplete\",t)))}),Promise.all(s)}function hx(e,t){return e.sortNodePosition(t)}function px(e,t,n={}){e.notify(\"AnimationStart\",t);let r;if(Array.isArray(t)){const i=t.map(o=>fa(e,o,n));r=Promise.all(i)}else if(typeof t==\"string\")r=fa(e,t,n);else{const i=typeof t==\"function\"?as(e,t,n.custom):t;r=Promise.all(Ym(e,i,n))}return r.then(()=>{e.notify(\"AnimationComplete\",t)})}const mx=gu.length;function Xm(e){if(!e)return;if(!e.isControllingVariants){const n=e.parent?Xm(e.parent)||{}:{};return e.props.initial!==void 0&&(n.initial=e.props.initial),n}const t={};for(let n=0;n<mx;n++){const r=gu[n],i=e.props[r];(ui(i)||i===!1)&&(t[r]=i)}return t}const gx=[...mu].reverse(),vx=mu.length;function yx(e){return t=>Promise.all(t.map(({animation:n,options:r})=>px(e,n,r)))}function xx(e){let t=yx(e),n=_f(),r=!0;const i=a=>(u,c)=>{var f;const d=as(e,c,a===\"exit\"?(f=e.presenceContext)===null||f===void 0?void 0:f.custom:void 0);if(d){const{transition:g,transitionEnd:v,...y}=d;u={...u,...y,...v}}return u};function o(a){t=a(e)}function s(a){const{props:u}=e,c=Xm(e.parent)||{},f=[],d=new Set;let g={},v=1/0;for(let S=0;S<vx;S++){const p=gx[S],h=n[p],m=u[p]!==void 0?u[p]:c[p],w=ui(m),C=p===a?h.isActive:null;C===!1&&(v=S);let k=m===c[p]&&m!==u[p]&&w;if(k&&r&&e.manuallyAnimateOnMount&&(k=!1),h.protectedKeys={...g},!h.isActive&&C===null||!m&&!h.prevProp||ai(m)||typeof m==\"boolean\")continue;const R=wx(h.prevProp,m);let T=R||p===a&&h.isActive&&!k&&w||S>v&&w,N=!1;const V=Array.isArray(m)?m:[m];let ne=V.reduce(i(p),{});C===!1&&(ne={});const{prevResolvedValues:Tt={}}=h,tn={...Tt,...ne},dr=q=>{T=!0,d.has(q)&&(N=!0,d.delete(q)),h.needsAnimating[q]=!0;const L=e.getValue(q);L&&(L.liveStyle=!1)};for(const q in tn){const L=ne[q],_=Tt[q];if(g.hasOwnProperty(q))continue;let j=!1;ta(L)&&ta(_)?j=!am(L,_):j=L!==_,j?L!=null?dr(q):d.add(q):L!==void 0&&d.has(q)?dr(q):h.protectedKeys[q]=!0}h.prevProp=m,h.prevResolvedValues=ne,h.isActive&&(g={...g,...ne}),r&&e.blockInitialAnimation&&(T=!1),T&&(!(k&&R)||N)&&f.push(...V.map(q=>({animation:q,options:{type:p}})))}if(d.size){const S={};d.forEach(p=>{const h=e.getBaseTarget(p),m=e.getValue(p);m&&(m.liveStyle=!0),S[p]=h??null}),f.push({animation:S})}let y=!!f.length;return r&&(u.initial===!1||u.initial===u.animate)&&!e.manuallyAnimateOnMount&&(y=!1),r=!1,y?t(f):Promise.resolve()}function l(a,u){var c;if(n[a].isActive===u)return Promise.resolve();(c=e.variantChildren)===null||c===void 0||c.forEach(d=>{var g;return(g=d.animationState)===null||g===void 0?void 0:g.setActive(a,u)}),n[a].isActive=u;const f=s(a);for(const d in n)n[d].protectedKeys={};return f}return{animateChanges:s,setActive:l,setAnimateFunction:o,getState:()=>n,reset:()=>{n=_f(),r=!0}}}function wx(e,t){return typeof t==\"string\"?t!==e:Array.isArray(t)?!am(t,e):!1}function on(e=!1){return{isActive:e,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}function _f(){return{animate:on(!0),whileInView:on(),whileHover:on(),whileTap:on(),whileDrag:on(),whileFocus:on(),exit:on()}}class en{constructor(t){this.isMounted=!1,this.node=t}update(){}}class Sx extends en{constructor(t){super(t),t.animationState||(t.animationState=xx(t))}updateAnimationControlsSubscription(){const{animate:t}=this.node.getProps();ai(t)&&(this.unmountControls=t.subscribe(this.node))}mount(){this.updateAnimationControlsSubscription()}update(){const{animate:t}=this.node.getProps(),{animate:n}=this.node.prevProps||{};t!==n&&this.updateAnimationControlsSubscription()}unmount(){var t;this.node.animationState.reset(),(t=this.unmountControls)===null||t===void 0||t.call(this)}}let Px=0;class Cx extends en{constructor(){super(...arguments),this.id=Px++}update(){if(!this.node.presenceContext)return;const{isPresent:t,onExitComplete:n}=this.node.presenceContext,{isPresent:r}=this.node.prevPresenceContext||{};if(!this.node.animationState||t===r)return;const i=this.node.animationState.setActive(\"exit\",!t);n&&!t&&i.then(()=>n(this.id))}mount(){const{register:t}=this.node.presenceContext||{};t&&(this.unmount=t(this.id))}unmount(){}}const Ex={animation:{Feature:Sx},exit:{Feature:Cx}},Zm=e=>e.pointerType===\"mouse\"?typeof e.button!=\"number\"||e.button<=0:e.isPrimary!==!1;function fs(e,t=\"page\"){return{point:{x:e[`${t}X`],y:e[`${t}Y`]}}}const Tx=e=>t=>Zm(t)&&e(t,fs(t));function ht(e,t,n,r={passive:!0}){return e.addEventListener(t,n,r),()=>e.removeEventListener(t,n)}function xt(e,t,n,r){return ht(e,t,Tx(n),r)}const jf=(e,t)=>Math.abs(e-t);function kx(e,t){const n=jf(e.x,t.x),r=jf(e.y,t.y);return Math.sqrt(n**2+r**2)}class bm{constructor(t,n,{transformPagePoint:r,contextWindow:i,dragSnapToOrigin:o=!1}={}){if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.contextWindow=window,this.updatePoint=()=>{if(!(this.lastMoveEvent&&this.lastMoveEventInfo))return;const f=bs(this.lastMoveEventInfo,this.history),d=this.startEvent!==null,g=kx(f.offset,{x:0,y:0})>=3;if(!d&&!g)return;const{point:v}=f,{timestamp:y}=ie;this.history.push({...v,timestamp:y});const{onStart:S,onMove:p}=this.handlers;d||(S&&S(this.lastMoveEvent,f),this.startEvent=this.lastMoveEvent),p&&p(this.lastMoveEvent,f)},this.handlePointerMove=(f,d)=>{this.lastMoveEvent=f,this.lastMoveEventInfo=Zs(d,this.transformPagePoint),O.update(this.updatePoint,!0)},this.handlePointerUp=(f,d)=>{this.end();const{onEnd:g,onSessionEnd:v,resumeAnimation:y}=this.handlers;if(this.dragSnapToOrigin&&y&&y(),!(this.lastMoveEvent&&this.lastMoveEventInfo))return;const S=bs(f.type===\"pointercancel\"?this.lastMoveEventInfo:Zs(d,this.transformPagePoint),this.history);this.startEvent&&g&&g(f,S),v&&v(f,S)},!Zm(t))return;this.dragSnapToOrigin=o,this.handlers=n,this.transformPagePoint=r,this.contextWindow=i||window;const s=fs(t),l=Zs(s,this.transformPagePoint),{point:a}=l,{timestamp:u}=ie;this.history=[{...a,timestamp:u}];const{onSessionStart:c}=n;c&&c(t,bs(l,this.history)),this.removeListeners=yt(xt(this.contextWindow,\"pointermove\",this.handlePointerMove),xt(this.contextWindow,\"pointerup\",this.handlePointerUp),xt(this.contextWindow,\"pointercancel\",this.handlePointerUp))}updateHandlers(t){this.handlers=t}end(){this.removeListeners&&this.removeListeners(),be(this.updatePoint)}}function Zs(e,t){return t?{point:t(e.point)}:e}function Df(e,t){return{x:e.x-t.x,y:e.y-t.y}}function bs({point:e},t){return{point:e,delta:Df(e,Jm(t)),offset:Df(e,Lx(t)),velocity:Rx(t,.1)}}function Lx(e){return e[0]}function Jm(e){return e[e.length-1]}function Rx(e,t){if(e.length<2)return{x:0,y:0};let n=e.length-1,r=null;const i=Jm(e);for(;n>=0&&(r=e[n],!(i.timestamp-r.timestamp>gt(t)));)n--;if(!r)return{x:0,y:0};const o=vt(i.timestamp-r.timestamp);if(o===0)return{x:0,y:0};const s={x:(i.x-r.x)/o,y:(i.y-r.y)/o};return s.x===1/0&&(s.x=0),s.y===1/0&&(s.y=0),s}function qm(e){let t=null;return()=>{const n=()=>{t=null};return t===null?(t=e,n):!1}}const Nf=qm(\"dragHorizontal\"),Of=qm(\"dragVertical\");function e0(e){let t=!1;if(e===\"y\")t=Of();else if(e===\"x\")t=Nf();else{const n=Nf(),r=Of();n&&r?t=()=>{n(),r()}:(n&&n(),r&&r())}return t}function t0(){const e=e0(!0);return e?(e(),!1):!0}function Bn(e){return e&&typeof e==\"object\"&&Object.prototype.hasOwnProperty.call(e,\"current\")}const n0=1e-4,Ax=1-n0,Mx=1+n0,r0=.01,Vx=0-r0,_x=0+r0;function Ve(e){return e.max-e.min}function jx(e,t,n){return Math.abs(e-t)<=n}function zf(e,t,n,r=.5){e.origin=r,e.originPoint=H(t.min,t.max,e.origin),e.scale=Ve(n)/Ve(t),e.translate=H(n.min,n.max,e.origin)-e.originPoint,(e.scale>=Ax&&e.scale<=Mx||isNaN(e.scale))&&(e.scale=1),(e.translate>=Vx&&e.translate<=_x||isNaN(e.translate))&&(e.translate=0)}function Br(e,t,n,r){zf(e.x,t.x,n.x,r?r.originX:void 0),zf(e.y,t.y,n.y,r?r.originY:void 0)}function Ff(e,t,n){e.min=n.min+t.min,e.max=e.min+Ve(t)}function Dx(e,t,n){Ff(e.x,t.x,n.x),Ff(e.y,t.y,n.y)}function If(e,t,n){e.min=t.min-n.min,e.max=e.min+Ve(t)}function Ur(e,t,n){If(e.x,t.x,n.x),If(e.y,t.y,n.y)}function Nx(e,{min:t,max:n},r){return t!==void 0&&e<t?e=r?H(t,e,r.min):Math.max(e,t):n!==void 0&&e>n&&(e=r?H(n,e,r.max):Math.min(e,n)),e}function Bf(e,t,n){return{min:t!==void 0?e.min+t:void 0,max:n!==void 0?e.max+n-(e.max-e.min):void 0}}function Ox(e,{top:t,left:n,bottom:r,right:i}){return{x:Bf(e.x,n,i),y:Bf(e.y,t,r)}}function Uf(e,t){let n=t.min-e.min,r=t.max-e.max;return t.max-t.min<e.max-e.min&&([n,r]=[r,n]),{min:n,max:r}}function zx(e,t){return{x:Uf(e.x,t.x),y:Uf(e.y,t.y)}}function Fx(e,t){let n=.5;const r=Ve(e),i=Ve(t);return i>r?n=Pn(t.min,t.max-r,e.min):r>i&&(n=Pn(e.min,e.max-i,t.min)),Qt(0,1,n)}function Ix(e,t){const n={};return t.min!==void 0&&(n.min=t.min-e.min),t.max!==void 0&&(n.max=t.max-e.min),n}const da=.35;function Bx(e=da){return e===!1?e=0:e===!0&&(e=da),{x:$f(e,\"left\",\"right\"),y:$f(e,\"top\",\"bottom\")}}function $f(e,t,n){return{min:Wf(e,t),max:Wf(e,n)}}function Wf(e,t){return typeof e==\"number\"?e:e[t]||0}const Hf=()=>({translate:0,scale:1,origin:0,originPoint:0}),Un=()=>({x:Hf(),y:Hf()}),Kf=()=>({min:0,max:0}),X=()=>({x:Kf(),y:Kf()});function Ne(e){return[e(\"x\"),e(\"y\")]}function i0({top:e,left:t,right:n,bottom:r}){return{x:{min:t,max:n},y:{min:e,max:r}}}function Ux({x:e,y:t}){return{top:t.min,right:e.max,bottom:t.max,left:e.min}}function $x(e,t){if(!t)return e;const n=t({x:e.left,y:e.top}),r=t({x:e.right,y:e.bottom});return{top:n.y,left:n.x,bottom:r.y,right:r.x}}function Js(e){return e===void 0||e===1}function ha({scale:e,scaleX:t,scaleY:n}){return!Js(e)||!Js(t)||!Js(n)}function an(e){return ha(e)||o0(e)||e.z||e.rotate||e.rotateX||e.rotateY||e.skewX||e.skewY}function o0(e){return Gf(e.x)||Gf(e.y)}function Gf(e){return e&&e!==\"0%\"}function Bo(e,t,n){const r=e-n,i=t*r;return n+i}function Qf(e,t,n,r,i){return i!==void 0&&(e=Bo(e,i,r)),Bo(e,n,r)+t}function pa(e,t=0,n=1,r,i){e.min=Qf(e.min,t,n,r,i),e.max=Qf(e.max,t,n,r,i)}function s0(e,{x:t,y:n}){pa(e.x,t.translate,t.scale,t.originPoint),pa(e.y,n.translate,n.scale,n.originPoint)}const Yf=.999999999999,Xf=1.0000000000001;function Wx(e,t,n,r=!1){const i=n.length;if(!i)return;t.x=t.y=1;let o,s;for(let l=0;l<i;l++){o=n[l],s=o.projectionDelta;const{visualElement:a}=o.options;a&&a.props.style&&a.props.style.display===\"contents\"||(r&&o.options.layoutScroll&&o.scroll&&o!==o.root&&Wn(e,{x:-o.scroll.offset.x,y:-o.scroll.offset.y}),s&&(t.x*=s.x.scale,t.y*=s.y.scale,s0(e,s)),r&&an(o.latestValues)&&Wn(e,o.latestValues))}t.x<Xf&&t.x>Yf&&(t.x=1),t.y<Xf&&t.y>Yf&&(t.y=1)}function $n(e,t){e.min=e.min+t,e.max=e.max+t}function Zf(e,t,n,r,i=.5){const o=H(e.min,e.max,i);pa(e,t,n,o,r)}function Wn(e,t){Zf(e.x,t.x,t.scaleX,t.scale,t.originX),Zf(e.y,t.y,t.scaleY,t.scale,t.originY)}function l0(e,t){return i0($x(e.getBoundingClientRect(),t))}function Hx(e,t,n){const r=l0(e,n),{scroll:i}=t;return i&&($n(r.x,i.offset.x),$n(r.y,i.offset.y)),r}const a0=({current:e})=>e?e.ownerDocument.defaultView:null,Kx=new WeakMap;class Gx{constructor(t){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic=X(),this.visualElement=t}start(t,{snapToCursor:n=!1}={}){const{presenceContext:r}=this.visualElement;if(r&&r.isPresent===!1)return;const i=c=>{const{dragSnapToOrigin:f}=this.getProps();f?this.pauseAnimation():this.stopAnimation(),n&&this.snapToCursor(fs(c,\"page\").point)},o=(c,f)=>{const{drag:d,dragPropagation:g,onDragStart:v}=this.getProps();if(d&&!g&&(this.openGlobalLock&&this.openGlobalLock(),this.openGlobalLock=e0(d),!this.openGlobalLock))return;this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),Ne(S=>{let p=this.getAxisMotionValue(S).get()||0;if(st.test(p)){const{projection:h}=this.visualElement;if(h&&h.layout){const m=h.layout.layoutBox[S];m&&(p=Ve(m)*(parseFloat(p)/100))}}this.originPoint[S]=p}),v&&O.postRender(()=>v(c,f)),ca(this.visualElement,\"transform\");const{animationState:y}=this.visualElement;y&&y.setActive(\"whileDrag\",!0)},s=(c,f)=>{const{dragPropagation:d,dragDirectionLock:g,onDirectionLock:v,onDrag:y}=this.getProps();if(!d&&!this.openGlobalLock)return;const{offset:S}=f;if(g&&this.currentDirection===null){this.currentDirection=Qx(S),this.currentDirection!==null&&v&&v(this.currentDirection);return}this.updateAxis(\"x\",f.point,S),this.updateAxis(\"y\",f.point,S),this.visualElement.render(),y&&y(c,f)},l=(c,f)=>this.stop(c,f),a=()=>Ne(c=>{var f;return this.getAnimationState(c)===\"paused\"&&((f=this.getAxisMotionValue(c).animation)===null||f===void 0?void 0:f.play())}),{dragSnapToOrigin:u}=this.getProps();this.panSession=new bm(t,{onSessionStart:i,onStart:o,onMove:s,onSessionEnd:l,resumeAnimation:a},{transformPagePoint:this.visualElement.getTransformPagePoint(),dragSnapToOrigin:u,contextWindow:a0(this.visualElement)})}stop(t,n){const r=this.isDragging;if(this.cancel(),!r)return;const{velocity:i}=n;this.startAnimation(i);const{onDragEnd:o}=this.getProps();o&&O.postRender(()=>o(t,n))}cancel(){this.isDragging=!1;const{projection:t,animationState:n}=this.visualElement;t&&(t.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;const{dragPropagation:r}=this.getProps();!r&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),n&&n.setActive(\"whileDrag\",!1)}updateAxis(t,n,r){const{drag:i}=this.getProps();if(!r||!Hi(t,i,this.currentDirection))return;const o=this.getAxisMotionValue(t);let s=this.originPoint[t]+r[t];this.constraints&&this.constraints[t]&&(s=Nx(s,this.constraints[t],this.elastic[t])),o.set(s)}resolveConstraints(){var t;const{dragConstraints:n,dragElastic:r}=this.getProps(),i=this.visualElement.projection&&!this.visualElement.projection.layout?this.visualElement.projection.measure(!1):(t=this.visualElement.projection)===null||t===void 0?void 0:t.layout,o=this.constraints;n&&Bn(n)?this.constraints||(this.constraints=this.resolveRefConstraints()):n&&i?this.constraints=Ox(i.layoutBox,n):this.constraints=!1,this.elastic=Bx(r),o!==this.constraints&&i&&this.constraints&&!this.hasMutatedConstraints&&Ne(s=>{this.constraints!==!1&&this.getAxisMotionValue(s)&&(this.constraints[s]=Ix(i.layoutBox[s],this.constraints[s]))})}resolveRefConstraints(){const{dragConstraints:t,onMeasureDragConstraints:n}=this.getProps();if(!t||!Bn(t))return!1;const r=t.current,{projection:i}=this.visualElement;if(!i||!i.layout)return!1;const o=Hx(r,i.root,this.visualElement.getTransformPagePoint());let s=zx(i.layout.layoutBox,o);if(n){const l=n(Ux(s));this.hasMutatedConstraints=!!l,l&&(s=i0(l))}return s}startAnimation(t){const{drag:n,dragMomentum:r,dragElastic:i,dragTransition:o,dragSnapToOrigin:s,onDragTransitionEnd:l}=this.getProps(),a=this.constraints||{},u=Ne(c=>{if(!Hi(c,n,this.currentDirection))return;let f=a&&a[c]||{};s&&(f={min:0,max:0});const d=i?200:1e6,g=i?40:1e7,v={type:\"inertia\",velocity:r?t[c]:0,bounceStiffness:d,bounceDamping:g,timeConstant:750,restDelta:1,restSpeed:10,...o,...f};return this.startAxisValueAnimation(c,v)});return Promise.all(u).then(l)}startAxisValueAnimation(t,n){const r=this.getAxisMotionValue(t);return ca(this.visualElement,t),r.start(ju(t,r,0,n,this.visualElement,!1))}stopAnimation(){Ne(t=>this.getAxisMotionValue(t).stop())}pauseAnimation(){Ne(t=>{var n;return(n=this.getAxisMotionValue(t).animation)===null||n===void 0?void 0:n.pause()})}getAnimationState(t){var n;return(n=this.getAxisMotionValue(t).animation)===null||n===void 0?void 0:n.state}getAxisMotionValue(t){const n=`_drag${t.toUpperCase()}`,r=this.visualElement.getProps(),i=r[n];return i||this.visualElement.getValue(t,(r.initial?r.initial[t]:void 0)||0)}snapToCursor(t){Ne(n=>{const{drag:r}=this.getProps();if(!Hi(n,r,this.currentDirection))return;const{projection:i}=this.visualElement,o=this.getAxisMotionValue(n);if(i&&i.layout){const{min:s,max:l}=i.layout.layoutBox[n];o.set(t[n]-H(s,l,.5))}})}scalePositionWithinConstraints(){if(!this.visualElement.current)return;const{drag:t,dragConstraints:n}=this.getProps(),{projection:r}=this.visualElement;if(!Bn(n)||!r||!this.constraints)return;this.stopAnimation();const i={x:0,y:0};Ne(s=>{const l=this.getAxisMotionValue(s);if(l&&this.constraints!==!1){const a=l.get();i[s]=Fx({min:a,max:a},this.constraints[s])}});const{transformTemplate:o}=this.visualElement.getProps();this.visualElement.current.style.transform=o?o({},\"\"):\"none\",r.root&&r.root.updateScroll(),r.updateLayout(),this.resolveConstraints(),Ne(s=>{if(!Hi(s,t,null))return;const l=this.getAxisMotionValue(s),{min:a,max:u}=this.constraints[s];l.set(H(a,u,i[s]))})}addListeners(){if(!this.visualElement.current)return;Kx.set(this.visualElement,this);const t=this.visualElement.current,n=xt(t,\"pointerdown\",a=>{const{drag:u,dragListener:c=!0}=this.getProps();u&&c&&this.start(a)}),r=()=>{const{dragConstraints:a}=this.getProps();Bn(a)&&a.current&&(this.constraints=this.resolveRefConstraints())},{projection:i}=this.visualElement,o=i.addEventListener(\"measure\",r);i&&!i.layout&&(i.root&&i.root.updateScroll(),i.updateLayout()),O.read(r);const s=ht(window,\"resize\",()=>this.scalePositionWithinConstraints()),l=i.addEventListener(\"didUpdate\",({delta:a,hasLayoutChanged:u})=>{this.isDragging&&u&&(Ne(c=>{const f=this.getAxisMotionValue(c);f&&(this.originPoint[c]+=a[c].translate,f.set(f.get()+a[c].translate))}),this.visualElement.render())});return()=>{s(),n(),o(),l&&l()}}getProps(){const t=this.visualElement.getProps(),{drag:n=!1,dragDirectionLock:r=!1,dragPropagation:i=!1,dragConstraints:o=!1,dragElastic:s=da,dragMomentum:l=!0}=t;return{...t,drag:n,dragDirectionLock:r,dragPropagation:i,dragConstraints:o,dragElastic:s,dragMomentum:l}}}function Hi(e,t,n){return(t===!0||t===e)&&(n===null||n===e)}function Qx(e,t=10){let n=null;return Math.abs(e.y)>t?n=\"y\":Math.abs(e.x)>t&&(n=\"x\"),n}class Yx extends en{constructor(t){super(t),this.removeGroupControls=ue,this.removeListeners=ue,this.controls=new Gx(t)}mount(){const{dragControls:t}=this.node.getProps();t&&(this.removeGroupControls=t.subscribe(this.controls)),this.removeListeners=this.controls.addListeners()||ue}unmount(){this.removeGroupControls(),this.removeListeners()}}const bf=e=>(t,n)=>{e&&O.postRender(()=>e(t,n))};class Xx extends en{constructor(){super(...arguments),this.removePointerDownListener=ue}onPointerDown(t){this.session=new bm(t,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint(),contextWindow:a0(this.node)})}createPanHandlers(){const{onPanSessionStart:t,onPanStart:n,onPan:r,onPanEnd:i}=this.node.getProps();return{onSessionStart:bf(t),onStart:bf(n),onMove:r,onEnd:(o,s)=>{delete this.session,i&&O.postRender(()=>i(o,s))}}}mount(){this.removePointerDownListener=xt(this.node.current,\"pointerdown\",t=>this.onPointerDown(t))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}const ds=x.createContext(null);function Zx(){const e=x.useContext(ds);if(e===null)return[!0,null];const{isPresent:t,onExitComplete:n,register:r}=e,i=x.useId();x.useEffect(()=>r(i),[]);const o=x.useCallback(()=>n&&n(i),[i,n]);return!t&&n?[!1,o]:[!0]}const zu=x.createContext({}),u0=x.createContext({}),oo={hasAnimatedSinceResize:!0,hasEverUpdated:!1};function Jf(e,t){return t.max===t.min?0:e/(t.max-t.min)*100}const Sr={correct:(e,t)=>{if(!t.target)return e;if(typeof e==\"string\")if(M.test(e))e=parseFloat(e);else return e;const n=Jf(e,t.target.x),r=Jf(e,t.target.y);return`${n}% ${r}%`}},bx={correct:(e,{treeScale:t,projectionDelta:n})=>{const r=e,i=Yt.parse(e);if(i.length>5)return r;const o=Yt.createTransformer(e),s=typeof i[0]!=\"number\"?1:0,l=n.x.scale*t.x,a=n.y.scale*t.y;i[0+s]/=l,i[1+s]/=a;const u=H(l,a,.5);return typeof i[2+s]==\"number\"&&(i[2+s]/=u),typeof i[3+s]==\"number\"&&(i[3+s]/=u),o(i)}},Uo={};function Jx(e){Object.assign(Uo,e)}const{schedule:Fu,cancel:oC}=um(queueMicrotask,!1);class qx extends x.Component{componentDidMount(){const{visualElement:t,layoutGroup:n,switchLayoutGroup:r,layoutId:i}=this.props,{projection:o}=t;Jx(ew),o&&(n.group&&n.group.add(o),r&&r.register&&i&&r.register(o),o.root.didUpdate(),o.addEventListener(\"animationComplete\",()=>{this.safeToRemove()}),o.setOptions({...o.options,onExitComplete:()=>this.safeToRemove()})),oo.hasEverUpdated=!0}getSnapshotBeforeUpdate(t){const{layoutDependency:n,visualElement:r,drag:i,isPresent:o}=this.props,s=r.projection;return s&&(s.isPresent=o,i||t.layoutDependency!==n||n===void 0?s.willUpdate():this.safeToRemove(),t.isPresent!==o&&(o?s.promote():s.relegate()||O.postRender(()=>{const l=s.getStack();(!l||!l.members.length)&&this.safeToRemove()}))),null}componentDidUpdate(){const{projection:t}=this.props.visualElement;t&&(t.root.didUpdate(),Fu.postRender(()=>{!t.currentAnimation&&t.isLead()&&this.safeToRemove()}))}componentWillUnmount(){const{visualElement:t,layoutGroup:n,switchLayoutGroup:r}=this.props,{projection:i}=t;i&&(i.scheduleCheckAfterUnmount(),n&&n.group&&n.group.remove(i),r&&r.deregister&&r.deregister(i))}safeToRemove(){const{safeToRemove:t}=this.props;t&&t()}render(){return null}}function c0(e){const[t,n]=Zx(),r=x.useContext(zu);return P.jsx(qx,{...e,layoutGroup:r,switchLayoutGroup:x.useContext(u0),isPresent:t,safeToRemove:n})}const ew={borderRadius:{...Sr,applyTo:[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\"]},borderTopLeftRadius:Sr,borderTopRightRadius:Sr,borderBottomLeftRadius:Sr,borderBottomRightRadius:Sr,boxShadow:bx},f0=[\"TopLeft\",\"TopRight\",\"BottomLeft\",\"BottomRight\"],tw=f0.length,qf=e=>typeof e==\"string\"?parseFloat(e):e,ed=e=>typeof e==\"number\"||M.test(e);function nw(e,t,n,r,i,o){i?(e.opacity=H(0,n.opacity!==void 0?n.opacity:1,rw(r)),e.opacityExit=H(t.opacity!==void 0?t.opacity:1,0,iw(r))):o&&(e.opacity=H(t.opacity!==void 0?t.opacity:1,n.opacity!==void 0?n.opacity:1,r));for(let s=0;s<tw;s++){const l=`border${f0[s]}Radius`;let a=td(t,l),u=td(n,l);if(a===void 0&&u===void 0)continue;a||(a=0),u||(u=0),a===0||u===0||ed(a)===ed(u)?(e[l]=Math.max(H(qf(a),qf(u),r),0),(st.test(u)||st.test(a))&&(e[l]+=\"%\")):e[l]=u}(t.rotate||n.rotate)&&(e.rotate=H(t.rotate||0,n.rotate||0,r))}function td(e,t){return e[t]!==void 0?e[t]:e.borderRadius}const rw=d0(0,.5,gm),iw=d0(.5,.95,ue);function d0(e,t,n){return r=>r<e?0:r>t?1:n(Pn(e,t,r))}function nd(e,t){e.min=t.min,e.max=t.max}function De(e,t){nd(e.x,t.x),nd(e.y,t.y)}function rd(e,t){e.translate=t.translate,e.scale=t.scale,e.originPoint=t.originPoint,e.origin=t.origin}function id(e,t,n,r,i){return e-=t,e=Bo(e,1/n,r),i!==void 0&&(e=Bo(e,1/i,r)),e}function ow(e,t=0,n=1,r=.5,i,o=e,s=e){if(st.test(t)&&(t=parseFloat(t),t=H(s.min,s.max,t/100)-s.min),typeof t!=\"number\")return;let l=H(o.min,o.max,r);e===o&&(l-=t),e.min=id(e.min,t,n,l,i),e.max=id(e.max,t,n,l,i)}function od(e,t,[n,r,i],o,s){ow(e,t[n],t[r],t[i],t.scale,o,s)}const sw=[\"x\",\"scaleX\",\"originX\"],lw=[\"y\",\"scaleY\",\"originY\"];function sd(e,t,n,r){od(e.x,t,sw,n?n.x:void 0,r?r.x:void 0),od(e.y,t,lw,n?n.y:void 0,r?r.y:void 0)}function ld(e){return e.translate===0&&e.scale===1}function h0(e){return ld(e.x)&&ld(e.y)}function ad(e,t){return e.min===t.min&&e.max===t.max}function aw(e,t){return ad(e.x,t.x)&&ad(e.y,t.y)}function ud(e,t){return Math.round(e.min)===Math.round(t.min)&&Math.round(e.max)===Math.round(t.max)}function p0(e,t){return ud(e.x,t.x)&&ud(e.y,t.y)}function cd(e){return Ve(e.x)/Ve(e.y)}function fd(e,t){return e.translate===t.translate&&e.scale===t.scale&&e.originPoint===t.originPoint}class uw{constructor(){this.members=[]}add(t){Du(this.members,t),t.scheduleRender()}remove(t){if(Nu(this.members,t),t===this.prevLead&&(this.prevLead=void 0),t===this.lead){const n=this.members[this.members.length-1];n&&this.promote(n)}}relegate(t){const n=this.members.findIndex(i=>t===i);if(n===0)return!1;let r;for(let i=n;i>=0;i--){const o=this.members[i];if(o.isPresent!==!1){r=o;break}}return r?(this.promote(r),!0):!1}promote(t,n){const r=this.lead;if(t!==r&&(this.prevLead=r,this.lead=t,t.show(),r)){r.instance&&r.scheduleRender(),t.scheduleRender(),t.resumeFrom=r,n&&(t.resumeFrom.preserveOpacity=!0),r.snapshot&&(t.snapshot=r.snapshot,t.snapshot.latestValues=r.animationValues||r.latestValues),t.root&&t.root.isUpdating&&(t.isLayoutDirty=!0);const{crossfade:i}=t.options;i===!1&&r.hide()}}exitAnimationComplete(){this.members.forEach(t=>{const{options:n,resumingFrom:r}=t;n.onExitComplete&&n.onExitComplete(),r&&r.options.onExitComplete&&r.options.onExitComplete()})}scheduleRender(){this.members.forEach(t=>{t.instance&&t.scheduleRender(!1)})}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}function cw(e,t,n){let r=\"\";const i=e.x.translate/t.x,o=e.y.translate/t.y,s=(n==null?void 0:n.z)||0;if((i||o||s)&&(r=`translate3d(${i}px, ${o}px, ${s}px) `),(t.x!==1||t.y!==1)&&(r+=`scale(${1/t.x}, ${1/t.y}) `),n){const{transformPerspective:u,rotate:c,rotateX:f,rotateY:d,skewX:g,skewY:v}=n;u&&(r=`perspective(${u}px) ${r}`),c&&(r+=`rotate(${c}deg) `),f&&(r+=`rotateX(${f}deg) `),d&&(r+=`rotateY(${d}deg) `),g&&(r+=`skewX(${g}deg) `),v&&(r+=`skewY(${v}deg) `)}const l=e.x.scale*t.x,a=e.y.scale*t.y;return(l!==1||a!==1)&&(r+=`scale(${l}, ${a})`),r||\"none\"}const fw=(e,t)=>e.depth-t.depth;class dw{constructor(){this.children=[],this.isDirty=!1}add(t){Du(this.children,t),this.isDirty=!0}remove(t){Nu(this.children,t),this.isDirty=!0}forEach(t){this.isDirty&&this.children.sort(fw),this.isDirty=!1,this.children.forEach(t)}}function so(e){const t=me(e)?e.get():e;return rx(t)?t.toValue():t}function hw(e,t){const n=lt.now(),r=({timestamp:i})=>{const o=i-n;o>=t&&(be(r),e(o-t))};return O.read(r,!0),()=>be(r)}function pw(e){return e instanceof SVGElement&&e.tagName!==\"svg\"}function mw(e,t,n){const r=me(e)?e:rt(e);return r.start(ju(\"\",r,t,n)),r.animation}const un={type:\"projectionFrame\",totalNodes:0,resolvedTargetDeltas:0,recalculatedProjection:0},Rr=typeof window<\"u\"&&window.MotionDebug!==void 0,qs=[\"\",\"X\",\"Y\",\"Z\"],gw={visibility:\"hidden\"},dd=1e3;let vw=0;function el(e,t,n,r){const{latestValues:i}=t;i[e]&&(n[e]=i[e],t.setStaticValue(e,0),r&&(r[e]=0))}function m0(e){if(e.hasCheckedOptimisedAppear=!0,e.root===e)return;const{visualElement:t}=e.options;if(!t)return;const n=Qm(t);if(window.MotionHasOptimisedAnimation(n,\"transform\")){const{layout:i,layoutId:o}=e.options;window.MotionCancelOptimisedAnimation(n,\"transform\",O,!(i||o))}const{parent:r}=e;r&&!r.hasCheckedOptimisedAppear&&m0(r)}function g0({attachResizeListener:e,defaultParent:t,measureScroll:n,checkIsScrollRoot:r,resetTransform:i}){return class{constructor(s={},l=t==null?void 0:t()){this.id=vw++,this.animationId=0,this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isProjectionDirty=!1,this.isSharedProjectionDirty=!1,this.isTransformDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.hasCheckedOptimisedAppear=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.hasTreeAnimated=!1,this.updateScheduled=!1,this.scheduleUpdate=()=>this.update(),this.projectionUpdateScheduled=!1,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{this.projectionUpdateScheduled=!1,Rr&&(un.totalNodes=un.resolvedTargetDeltas=un.recalculatedProjection=0),this.nodes.forEach(ww),this.nodes.forEach(Tw),this.nodes.forEach(kw),this.nodes.forEach(Sw),Rr&&window.MotionDebug.record(un)},this.resolvedRelativeTargetAt=0,this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.latestValues=s,this.root=l?l.root||l:this,this.path=l?[...l.path,l]:[],this.parent=l,this.depth=l?l.depth+1:0;for(let a=0;a<this.path.length;a++)this.path[a].shouldResetTransform=!0;this.root===this&&(this.nodes=new dw)}addEventListener(s,l){return this.eventHandlers.has(s)||this.eventHandlers.set(s,new Ou),this.eventHandlers.get(s).add(l)}notifyListeners(s,...l){const a=this.eventHandlers.get(s);a&&a.notify(...l)}hasListeners(s){return this.eventHandlers.has(s)}mount(s,l=this.root.hasTreeAnimated){if(this.instance)return;this.isSVG=pw(s),this.instance=s;const{layoutId:a,layout:u,visualElement:c}=this.options;if(c&&!c.current&&c.mount(s),this.root.nodes.add(this),this.parent&&this.parent.children.add(this),l&&(u||a)&&(this.isLayoutDirty=!0),e){let f;const d=()=>this.root.updateBlockedByResize=!1;e(s,()=>{this.root.updateBlockedByResize=!0,f&&f(),f=hw(d,250),oo.hasAnimatedSinceResize&&(oo.hasAnimatedSinceResize=!1,this.nodes.forEach(pd))})}a&&this.root.registerSharedNode(a,this),this.options.animate!==!1&&c&&(a||u)&&this.addEventListener(\"didUpdate\",({delta:f,hasLayoutChanged:d,hasRelativeTargetChanged:g,layout:v})=>{if(this.isTreeAnimationBlocked()){this.target=void 0,this.relativeTarget=void 0;return}const y=this.options.transition||c.getDefaultTransition()||Vw,{onLayoutAnimationStart:S,onLayoutAnimationComplete:p}=c.getProps(),h=!this.targetLayout||!p0(this.targetLayout,v)||g,m=!d&&g;if(this.options.layoutRoot||this.resumeFrom&&this.resumeFrom.instance||m||d&&(h||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0),this.setAnimationOrigin(f,m);const w={...vu(y,\"layout\"),onPlay:S,onComplete:p};(c.shouldReduceMotion||this.options.layoutRoot)&&(w.delay=0,w.type=!1),this.startAnimation(w)}else d||pd(this),this.isLead()&&this.options.onExitComplete&&this.options.onExitComplete();this.targetLayout=v})}unmount(){this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this);const s=this.getStack();s&&s.remove(this),this.parent&&this.parent.children.delete(this),this.instance=void 0,be(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){return this.isAnimationBlocked||this.parent&&this.parent.isTreeAnimationBlocked()||!1}startUpdate(){this.isUpdateBlocked()||(this.isUpdating=!0,this.nodes&&this.nodes.forEach(Lw),this.animationId++)}getTransformTemplate(){const{visualElement:s}=this.options;return s&&s.getProps().transformTemplate}willUpdate(s=!0){if(this.root.hasTreeAnimated=!0,this.root.isUpdateBlocked()){this.options.onExitComplete&&this.options.onExitComplete();return}if(window.MotionCancelOptimisedAnimation&&!this.hasCheckedOptimisedAppear&&m0(this),!this.root.isUpdating&&this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let c=0;c<this.path.length;c++){const f=this.path[c];f.shouldResetTransform=!0,f.updateScroll(\"snapshot\"),f.options.layoutRoot&&f.willUpdate(!1)}const{layoutId:l,layout:a}=this.options;if(l===void 0&&!a)return;const u=this.getTransformTemplate();this.prevTransformTemplateValue=u?u(this.latestValues,\"\"):void 0,this.updateSnapshot(),s&&this.notifyListeners(\"willUpdate\")}update(){if(this.updateScheduled=!1,this.isUpdateBlocked()){this.unblockUpdate(),this.clearAllSnapshots(),this.nodes.forEach(hd);return}this.isUpdating||this.nodes.forEach(Cw),this.isUpdating=!1,this.nodes.forEach(Ew),this.nodes.forEach(yw),this.nodes.forEach(xw),this.clearAllSnapshots();const l=lt.now();ie.delta=Qt(0,1e3/60,l-ie.timestamp),ie.timestamp=l,ie.isProcessing=!0,Ks.update.process(ie),Ks.preRender.process(ie),Ks.render.process(ie),ie.isProcessing=!1}didUpdate(){this.updateScheduled||(this.updateScheduled=!0,Fu.read(this.scheduleUpdate))}clearAllSnapshots(){this.nodes.forEach(Pw),this.sharedNodes.forEach(Rw)}scheduleUpdateProjection(){this.projectionUpdateScheduled||(this.projectionUpdateScheduled=!0,O.preRender(this.updateProjection,!1,!0))}scheduleCheckAfterUnmount(){O.postRender(()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()})}updateSnapshot(){this.snapshot||!this.instance||(this.snapshot=this.measure())}updateLayout(){if(!this.instance||(this.updateScroll(),!(this.options.alwaysMeasureLayout&&this.isLead())&&!this.isLayoutDirty))return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let a=0;a<this.path.length;a++)this.path[a].updateScroll();const s=this.layout;this.layout=this.measure(!1),this.layoutCorrected=X(),this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners(\"measure\",this.layout.layoutBox);const{visualElement:l}=this.options;l&&l.notify(\"LayoutMeasure\",this.layout.layoutBox,s?s.layoutBox:void 0)}updateScroll(s=\"measure\"){let l=!!(this.options.layoutScroll&&this.instance);if(this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===s&&(l=!1),l){const a=r(this.instance);this.scroll={animationId:this.root.animationId,phase:s,isRoot:a,offset:n(this.instance),wasRoot:this.scroll?this.scroll.isRoot:a}}}resetTransform(){if(!i)return;const s=this.isLayoutDirty||this.shouldResetTransform||this.options.alwaysMeasureLayout,l=this.projectionDelta&&!h0(this.projectionDelta),a=this.getTransformTemplate(),u=a?a(this.latestValues,\"\"):void 0,c=u!==this.prevTransformTemplateValue;s&&(l||an(this.latestValues)||c)&&(i(this.instance,u),this.shouldResetTransform=!1,this.scheduleRender())}measure(s=!0){const l=this.measurePageBox();let a=this.removeElementScroll(l);return s&&(a=this.removeTransform(a)),_w(a),{animationId:this.root.animationId,measuredBox:l,layoutBox:a,latestValues:{},source:this.id}}measurePageBox(){var s;const{visualElement:l}=this.options;if(!l)return X();const a=l.measureViewportBox();if(!(((s=this.scroll)===null||s===void 0?void 0:s.wasRoot)||this.path.some(jw))){const{scroll:c}=this.root;c&&($n(a.x,c.offset.x),$n(a.y,c.offset.y))}return a}removeElementScroll(s){var l;const a=X();if(De(a,s),!((l=this.scroll)===null||l===void 0)&&l.wasRoot)return a;for(let u=0;u<this.path.length;u++){const c=this.path[u],{scroll:f,options:d}=c;c!==this.root&&f&&d.layoutScroll&&(f.wasRoot&&De(a,s),$n(a.x,f.offset.x),$n(a.y,f.offset.y))}return a}applyTransform(s,l=!1){const a=X();De(a,s);for(let u=0;u<this.path.length;u++){const c=this.path[u];!l&&c.options.layoutScroll&&c.scroll&&c!==c.root&&Wn(a,{x:-c.scroll.offset.x,y:-c.scroll.offset.y}),an(c.latestValues)&&Wn(a,c.latestValues)}return an(this.latestValues)&&Wn(a,this.latestValues),a}removeTransform(s){const l=X();De(l,s);for(let a=0;a<this.path.length;a++){const u=this.path[a];if(!u.instance||!an(u.latestValues))continue;ha(u.latestValues)&&u.updateSnapshot();const c=X(),f=u.measurePageBox();De(c,f),sd(l,u.latestValues,u.snapshot?u.snapshot.layoutBox:void 0,c)}return an(this.latestValues)&&sd(l,this.latestValues),l}setTargetDelta(s){this.targetDelta=s,this.root.scheduleUpdateProjection(),this.isProjectionDirty=!0}setOptions(s){this.options={...this.options,...s,crossfade:s.crossfade!==void 0?s.crossfade:!0}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}forceRelativeParentToResolveTarget(){this.relativeParent&&this.relativeParent.resolvedRelativeTargetAt!==ie.timestamp&&this.relativeParent.resolveTargetDelta(!0)}resolveTargetDelta(s=!1){var l;const a=this.getLead();this.isProjectionDirty||(this.isProjectionDirty=a.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=a.isTransformDirty),this.isSharedProjectionDirty||(this.isSharedProjectionDirty=a.isSharedProjectionDirty);const u=!!this.resumingFrom||this!==a;if(!(s||u&&this.isSharedProjectionDirty||this.isProjectionDirty||!((l=this.parent)===null||l===void 0)&&l.isProjectionDirty||this.attemptToResolveRelativeTarget||this.root.updateBlockedByResize))return;const{layout:f,layoutId:d}=this.options;if(!(!this.layout||!(f||d))){if(this.resolvedRelativeTargetAt=ie.timestamp,!this.targetDelta&&!this.relativeTarget){const g=this.getClosestProjectingParent();g&&g.layout&&this.animationProgress!==1?(this.relativeParent=g,this.forceRelativeParentToResolveTarget(),this.relativeTarget=X(),this.relativeTargetOrigin=X(),Ur(this.relativeTargetOrigin,this.layout.layoutBox,g.layout.layoutBox),De(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(!(!this.relativeTarget&&!this.targetDelta)){if(this.target||(this.target=X(),this.targetWithTransforms=X()),this.relativeTarget&&this.relativeTargetOrigin&&this.relativeParent&&this.relativeParent.target?(this.forceRelativeParentToResolveTarget(),Dx(this.target,this.relativeTarget,this.relativeParent.target)):this.targetDelta?(this.resumingFrom?this.target=this.applyTransform(this.layout.layoutBox):De(this.target,this.layout.layoutBox),s0(this.target,this.targetDelta)):De(this.target,this.layout.layoutBox),this.attemptToResolveRelativeTarget){this.attemptToResolveRelativeTarget=!1;const g=this.getClosestProjectingParent();g&&!!g.resumingFrom==!!this.resumingFrom&&!g.options.layoutScroll&&g.target&&this.animationProgress!==1?(this.relativeParent=g,this.forceRelativeParentToResolveTarget(),this.relativeTarget=X(),this.relativeTargetOrigin=X(),Ur(this.relativeTargetOrigin,this.target,g.target),De(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}Rr&&un.resolvedTargetDeltas++}}}getClosestProjectingParent(){if(!(!this.parent||ha(this.parent.latestValues)||o0(this.parent.latestValues)))return this.parent.isProjecting()?this.parent:this.parent.getClosestProjectingParent()}isProjecting(){return!!((this.relativeTarget||this.targetDelta||this.options.layoutRoot)&&this.layout)}calcProjection(){var s;const l=this.getLead(),a=!!this.resumingFrom||this!==l;let u=!0;if((this.isProjectionDirty||!((s=this.parent)===null||s===void 0)&&s.isProjectionDirty)&&(u=!1),a&&(this.isSharedProjectionDirty||this.isTransformDirty)&&(u=!1),this.resolvedRelativeTargetAt===ie.timestamp&&(u=!1),u)return;const{layout:c,layoutId:f}=this.options;if(this.isTreeAnimating=!!(this.parent&&this.parent.isTreeAnimating||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!(c||f))return;De(this.layoutCorrected,this.layout.layoutBox);const d=this.treeScale.x,g=this.treeScale.y;Wx(this.layoutCorrected,this.treeScale,this.path,a),l.layout&&!l.target&&(this.treeScale.x!==1||this.treeScale.y!==1)&&(l.target=l.layout.layoutBox,l.targetWithTransforms=X());const{target:v}=l;if(!v){this.prevProjectionDelta&&(this.createProjectionDeltas(),this.scheduleRender());return}!this.projectionDelta||!this.prevProjectionDelta?this.createProjectionDeltas():(rd(this.prevProjectionDelta.x,this.projectionDelta.x),rd(this.prevProjectionDelta.y,this.projectionDelta.y)),Br(this.projectionDelta,this.layoutCorrected,v,this.latestValues),(this.treeScale.x!==d||this.treeScale.y!==g||!fd(this.projectionDelta.x,this.prevProjectionDelta.x)||!fd(this.projectionDelta.y,this.prevProjectionDelta.y))&&(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners(\"projectionUpdate\",v)),Rr&&un.recalculatedProjection++}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(s=!0){var l;if((l=this.options.visualElement)===null||l===void 0||l.scheduleRender(),s){const a=this.getStack();a&&a.scheduleRender()}this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}createProjectionDeltas(){this.prevProjectionDelta=Un(),this.projectionDelta=Un(),this.projectionDeltaWithTransform=Un()}setAnimationOrigin(s,l=!1){const a=this.snapshot,u=a?a.latestValues:{},c={...this.latestValues},f=Un();(!this.relativeParent||!this.relativeParent.options.layoutRoot)&&(this.relativeTarget=this.relativeTargetOrigin=void 0),this.attemptToResolveRelativeTarget=!l;const d=X(),g=a?a.source:void 0,v=this.layout?this.layout.source:void 0,y=g!==v,S=this.getStack(),p=!S||S.members.length<=1,h=!!(y&&!p&&this.options.crossfade===!0&&!this.path.some(Mw));this.animationProgress=0;let m;this.mixTargetDelta=w=>{const C=w/1e3;md(f.x,s.x,C),md(f.y,s.y,C),this.setTargetDelta(f),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&this.relativeParent&&this.relativeParent.layout&&(Ur(d,this.layout.layoutBox,this.relativeParent.layout.layoutBox),Aw(this.relativeTarget,this.relativeTargetOrigin,d,C),m&&aw(this.relativeTarget,m)&&(this.isProjectionDirty=!1),m||(m=X()),De(m,this.relativeTarget)),y&&(this.animationValues=c,nw(c,u,this.latestValues,C,h,p)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=C},this.mixTargetDelta(this.options.layoutRoot?1e3:0)}startAnimation(s){this.notifyListeners(\"animationStart\"),this.currentAnimation&&this.currentAnimation.stop(),this.resumingFrom&&this.resumingFrom.currentAnimation&&this.resumingFrom.currentAnimation.stop(),this.pendingAnimation&&(be(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=O.update(()=>{oo.hasAnimatedSinceResize=!0,this.currentAnimation=mw(0,dd,{...s,onUpdate:l=>{this.mixTargetDelta(l),s.onUpdate&&s.onUpdate(l)},onComplete:()=>{s.onComplete&&s.onComplete(),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0})}completeAnimation(){this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0);const s=this.getStack();s&&s.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners(\"animationComplete\")}finishAnimation(){this.currentAnimation&&(this.mixTargetDelta&&this.mixTargetDelta(dd),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){const s=this.getLead();let{targetWithTransforms:l,target:a,layout:u,latestValues:c}=s;if(!(!l||!a||!u)){if(this!==s&&this.layout&&u&&v0(this.options.animationType,this.layout.layoutBox,u.layoutBox)){a=this.target||X();const f=Ve(this.layout.layoutBox.x);a.x.min=s.target.x.min,a.x.max=a.x.min+f;const d=Ve(this.layout.layoutBox.y);a.y.min=s.target.y.min,a.y.max=a.y.min+d}De(l,a),Wn(l,c),Br(this.projectionDeltaWithTransform,this.layoutCorrected,l,c)}}registerSharedNode(s,l){this.sharedNodes.has(s)||this.sharedNodes.set(s,new uw),this.sharedNodes.get(s).add(l);const u=l.options.initialPromotionConfig;l.promote({transition:u?u.transition:void 0,preserveFollowOpacity:u&&u.shouldPreserveFollowOpacity?u.shouldPreserveFollowOpacity(l):void 0})}isLead(){const s=this.getStack();return s?s.lead===this:!0}getLead(){var s;const{layoutId:l}=this.options;return l?((s=this.getStack())===null||s===void 0?void 0:s.lead)||this:this}getPrevLead(){var s;const{layoutId:l}=this.options;return l?(s=this.getStack())===null||s===void 0?void 0:s.prevLead:void 0}getStack(){const{layoutId:s}=this.options;if(s)return this.root.sharedNodes.get(s)}promote({needsReset:s,transition:l,preserveFollowOpacity:a}={}){const u=this.getStack();u&&u.promote(this,a),s&&(this.projectionDelta=void 0,this.needsReset=!0),l&&this.setOptions({transition:l})}relegate(){const s=this.getStack();return s?s.relegate(this):!1}resetSkewAndRotation(){const{visualElement:s}=this.options;if(!s)return;let l=!1;const{latestValues:a}=s;if((a.z||a.rotate||a.rotateX||a.rotateY||a.rotateZ||a.skewX||a.skewY)&&(l=!0),!l)return;const u={};a.z&&el(\"z\",s,u,this.animationValues);for(let c=0;c<qs.length;c++)el(`rotate${qs[c]}`,s,u,this.animationValues),el(`skew${qs[c]}`,s,u,this.animationValues);s.render();for(const c in u)s.setStaticValue(c,u[c]),this.animationValues&&(this.animationValues[c]=u[c]);s.scheduleRender()}getProjectionStyles(s){var l,a;if(!this.instance||this.isSVG)return;if(!this.isVisible)return gw;const u={visibility:\"\"},c=this.getTransformTemplate();if(this.needsReset)return this.needsReset=!1,u.opacity=\"\",u.pointerEvents=so(s==null?void 0:s.pointerEvents)||\"\",u.transform=c?c(this.latestValues,\"\"):\"none\",u;const f=this.getLead();if(!this.projectionDelta||!this.layout||!f.target){const y={};return this.options.layoutId&&(y.opacity=this.latestValues.opacity!==void 0?this.latestValues.opacity:1,y.pointerEvents=so(s==null?void 0:s.pointerEvents)||\"\"),this.hasProjected&&!an(this.latestValues)&&(y.transform=c?c({},\"\"):\"none\",this.hasProjected=!1),y}const d=f.animationValues||f.latestValues;this.applyTransformsToTarget(),u.transform=cw(this.projectionDeltaWithTransform,this.treeScale,d),c&&(u.transform=c(d,u.transform));const{x:g,y:v}=this.projectionDelta;u.transformOrigin=`${g.origin*100}% ${v.origin*100}% 0`,f.animationValues?u.opacity=f===this?(a=(l=d.opacity)!==null&&l!==void 0?l:this.latestValues.opacity)!==null&&a!==void 0?a:1:this.preserveOpacity?this.latestValues.opacity:d.opacityExit:u.opacity=f===this?d.opacity!==void 0?d.opacity:\"\":d.opacityExit!==void 0?d.opacityExit:0;for(const y in Uo){if(d[y]===void 0)continue;const{correct:S,applyTo:p}=Uo[y],h=u.transform===\"none\"?d[y]:S(d[y],f);if(p){const m=p.length;for(let w=0;w<m;w++)u[p[w]]=h}else u[y]=h}return this.options.layoutId&&(u.pointerEvents=f===this?so(s==null?void 0:s.pointerEvents)||\"\":\"none\"),u}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach(s=>{var l;return(l=s.currentAnimation)===null||l===void 0?void 0:l.stop()}),this.root.nodes.forEach(hd),this.root.sharedNodes.clear()}}}function yw(e){e.updateLayout()}function xw(e){var t;const n=((t=e.resumeFrom)===null||t===void 0?void 0:t.snapshot)||e.snapshot;if(e.isLead()&&e.layout&&n&&e.hasListeners(\"didUpdate\")){const{layoutBox:r,measuredBox:i}=e.layout,{animationType:o}=e.options,s=n.source!==e.layout.source;o===\"size\"?Ne(f=>{const d=s?n.measuredBox[f]:n.layoutBox[f],g=Ve(d);d.min=r[f].min,d.max=d.min+g}):v0(o,n.layoutBox,r)&&Ne(f=>{const d=s?n.measuredBox[f]:n.layoutBox[f],g=Ve(r[f]);d.max=d.min+g,e.relativeTarget&&!e.currentAnimation&&(e.isProjectionDirty=!0,e.relativeTarget[f].max=e.relativeTarget[f].min+g)});const l=Un();Br(l,r,n.layoutBox);const a=Un();s?Br(a,e.applyTransform(i,!0),n.measuredBox):Br(a,r,n.layoutBox);const u=!h0(l);let c=!1;if(!e.resumeFrom){const f=e.getClosestProjectingParent();if(f&&!f.resumeFrom){const{snapshot:d,layout:g}=f;if(d&&g){const v=X();Ur(v,n.layoutBox,d.layoutBox);const y=X();Ur(y,r,g.layoutBox),p0(v,y)||(c=!0),f.options.layoutRoot&&(e.relativeTarget=y,e.relativeTargetOrigin=v,e.relativeParent=f)}}}e.notifyListeners(\"didUpdate\",{layout:r,snapshot:n,delta:a,layoutDelta:l,hasLayoutChanged:u,hasRelativeTargetChanged:c})}else if(e.isLead()){const{onExitComplete:r}=e.options;r&&r()}e.options.transition=void 0}function ww(e){Rr&&un.totalNodes++,e.parent&&(e.isProjecting()||(e.isProjectionDirty=e.parent.isProjectionDirty),e.isSharedProjectionDirty||(e.isSharedProjectionDirty=!!(e.isProjectionDirty||e.parent.isProjectionDirty||e.parent.isSharedProjectionDirty)),e.isTransformDirty||(e.isTransformDirty=e.parent.isTransformDirty))}function Sw(e){e.isProjectionDirty=e.isSharedProjectionDirty=e.isTransformDirty=!1}function Pw(e){e.clearSnapshot()}function hd(e){e.clearMeasurements()}function Cw(e){e.isLayoutDirty=!1}function Ew(e){const{visualElement:t}=e.options;t&&t.getProps().onBeforeLayoutMeasure&&t.notify(\"BeforeLayoutMeasure\"),e.resetTransform()}function pd(e){e.finishAnimation(),e.targetDelta=e.relativeTarget=e.target=void 0,e.isProjectionDirty=!0}function Tw(e){e.resolveTargetDelta()}function kw(e){e.calcProjection()}function Lw(e){e.resetSkewAndRotation()}function Rw(e){e.removeLeadSnapshot()}function md(e,t,n){e.translate=H(t.translate,0,n),e.scale=H(t.scale,1,n),e.origin=t.origin,e.originPoint=t.originPoint}function gd(e,t,n,r){e.min=H(t.min,n.min,r),e.max=H(t.max,n.max,r)}function Aw(e,t,n,r){gd(e.x,t.x,n.x,r),gd(e.y,t.y,n.y,r)}function Mw(e){return e.animationValues&&e.animationValues.opacityExit!==void 0}const Vw={duration:.45,ease:[.4,0,.1,1]},vd=e=>typeof navigator<\"u\"&&navigator.userAgent&&navigator.userAgent.toLowerCase().includes(e),yd=vd(\"applewebkit/\")&&!vd(\"chrome/\")?Math.round:ue;function xd(e){e.min=yd(e.min),e.max=yd(e.max)}function _w(e){xd(e.x),xd(e.y)}function v0(e,t,n){return e===\"position\"||e===\"preserve-aspect\"&&!jx(cd(t),cd(n),.2)}function jw(e){var t;return e!==e.root&&((t=e.scroll)===null||t===void 0?void 0:t.wasRoot)}const Dw=g0({attachResizeListener:(e,t)=>ht(e,\"resize\",t),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),tl={current:void 0},y0=g0({measureScroll:e=>({x:e.scrollLeft,y:e.scrollTop}),defaultParent:()=>{if(!tl.current){const e=new Dw({});e.mount(window),e.setOptions({layoutScroll:!0}),tl.current=e}return tl.current},resetTransform:(e,t)=>{e.style.transform=t!==void 0?t:\"none\"},checkIsScrollRoot:e=>window.getComputedStyle(e).position===\"fixed\"}),Nw={pan:{Feature:Xx},drag:{Feature:Yx,ProjectionNode:y0,MeasureLayout:c0}};function wd(e,t){const n=t?\"pointerenter\":\"pointerleave\",r=t?\"onHoverStart\":\"onHoverEnd\",i=(o,s)=>{if(o.pointerType===\"touch\"||t0())return;const l=e.getProps();e.animationState&&l.whileHover&&e.animationState.setActive(\"whileHover\",t);const a=l[r];a&&O.postRender(()=>a(o,s))};return xt(e.current,n,i,{passive:!e.getProps()[r]})}class Ow extends en{mount(){this.unmount=yt(wd(this.node,!0),wd(this.node,!1))}unmount(){}}class zw extends en{constructor(){super(...arguments),this.isActive=!1}onFocus(){let t=!1;try{t=this.node.current.matches(\":focus-visible\")}catch{t=!0}!t||!this.node.animationState||(this.node.animationState.setActive(\"whileFocus\",!0),this.isActive=!0)}onBlur(){!this.isActive||!this.node.animationState||(this.node.animationState.setActive(\"whileFocus\",!1),this.isActive=!1)}mount(){this.unmount=yt(ht(this.node.current,\"focus\",()=>this.onFocus()),ht(this.node.current,\"blur\",()=>this.onBlur()))}unmount(){}}const x0=(e,t)=>t?e===t?!0:x0(e,t.parentElement):!1;function nl(e,t){if(!t)return;const n=new PointerEvent(\"pointer\"+e);t(n,fs(n))}class Fw extends en{constructor(){super(...arguments),this.removeStartListeners=ue,this.removeEndListeners=ue,this.removeAccessibleListeners=ue,this.startPointerPress=(t,n)=>{if(this.isPressing)return;this.removeEndListeners();const r=this.node.getProps(),o=xt(window,\"pointerup\",(l,a)=>{if(!this.checkPressEnd())return;const{onTap:u,onTapCancel:c,globalTapTarget:f}=this.node.getProps(),d=!f&&!x0(this.node.current,l.target)?c:u;d&&O.update(()=>d(l,a))},{passive:!(r.onTap||r.onPointerUp)}),s=xt(window,\"pointercancel\",(l,a)=>this.cancelPress(l,a),{passive:!(r.onTapCancel||r.onPointerCancel)});this.removeEndListeners=yt(o,s),this.startPress(t,n)},this.startAccessiblePress=()=>{const t=o=>{if(o.key!==\"Enter\"||this.isPressing)return;const s=l=>{l.key!==\"Enter\"||!this.checkPressEnd()||nl(\"up\",(a,u)=>{const{onTap:c}=this.node.getProps();c&&O.postRender(()=>c(a,u))})};this.removeEndListeners(),this.removeEndListeners=ht(this.node.current,\"keyup\",s),nl(\"down\",(l,a)=>{this.startPress(l,a)})},n=ht(this.node.current,\"keydown\",t),r=()=>{this.isPressing&&nl(\"cancel\",(o,s)=>this.cancelPress(o,s))},i=ht(this.node.current,\"blur\",r);this.removeAccessibleListeners=yt(n,i)}}startPress(t,n){this.isPressing=!0;const{onTapStart:r,whileTap:i}=this.node.getProps();i&&this.node.animationState&&this.node.animationState.setActive(\"whileTap\",!0),r&&O.postRender(()=>r(t,n))}checkPressEnd(){return this.removeEndListeners(),this.isPressing=!1,this.node.getProps().whileTap&&this.node.animationState&&this.node.animationState.setActive(\"whileTap\",!1),!t0()}cancelPress(t,n){if(!this.checkPressEnd())return;const{onTapCancel:r}=this.node.getProps();r&&O.postRender(()=>r(t,n))}mount(){const t=this.node.getProps(),n=xt(t.globalTapTarget?window:this.node.current,\"pointerdown\",this.startPointerPress,{passive:!(t.onTapStart||t.onPointerStart)}),r=ht(this.node.current,\"focus\",this.startAccessiblePress);this.removeStartListeners=yt(n,r)}unmount(){this.removeStartListeners(),this.removeEndListeners(),this.removeAccessibleListeners()}}const ma=new WeakMap,rl=new WeakMap,Iw=e=>{const t=ma.get(e.target);t&&t(e)},Bw=e=>{e.forEach(Iw)};function Uw({root:e,...t}){const n=e||document;rl.has(n)||rl.set(n,{});const r=rl.get(n),i=JSON.stringify(t);return r[i]||(r[i]=new IntersectionObserver(Bw,{root:e,...t})),r[i]}function $w(e,t,n){const r=Uw(t);return ma.set(e,n),r.observe(e),()=>{ma.delete(e),r.unobserve(e)}}const Ww={some:0,all:1};class Hw extends en{constructor(){super(...arguments),this.hasEnteredView=!1,this.isInView=!1}startObserver(){this.unmount();const{viewport:t={}}=this.node.getProps(),{root:n,margin:r,amount:i=\"some\",once:o}=t,s={root:n?n.current:void 0,rootMargin:r,threshold:typeof i==\"number\"?i:Ww[i]},l=a=>{const{isIntersecting:u}=a;if(this.isInView===u||(this.isInView=u,o&&!u&&this.hasEnteredView))return;u&&(this.hasEnteredView=!0),this.node.animationState&&this.node.animationState.setActive(\"whileInView\",u);const{onViewportEnter:c,onViewportLeave:f}=this.node.getProps(),d=u?c:f;d&&d(a)};return $w(this.node.current,s,l)}mount(){this.startObserver()}update(){if(typeof IntersectionObserver>\"u\")return;const{props:t,prevProps:n}=this.node;[\"amount\",\"margin\",\"root\"].some(Kw(t,n))&&this.startObserver()}unmount(){}}function Kw({viewport:e={}},{viewport:t={}}={}){return n=>e[n]!==t[n]}const Gw={inView:{Feature:Hw},tap:{Feature:Fw},focus:{Feature:zw},hover:{Feature:Ow}},Qw={layout:{ProjectionNode:y0,MeasureLayout:c0}},hs=x.createContext({transformPagePoint:e=>e,isStatic:!1,reducedMotion:\"never\"}),ps=x.createContext({}),Iu=typeof window<\"u\",ms=Iu?x.useLayoutEffect:x.useEffect,w0=x.createContext({strict:!1});function Yw(e,t,n,r,i){var o,s;const{visualElement:l}=x.useContext(ps),a=x.useContext(w0),u=x.useContext(ds),c=x.useContext(hs).reducedMotion,f=x.useRef();r=r||a.renderer,!f.current&&r&&(f.current=r(e,{visualState:t,parent:l,props:n,presenceContext:u,blockInitialAnimation:u?u.initial===!1:!1,reducedMotionConfig:c}));const d=f.current,g=x.useContext(u0);d&&!d.projection&&i&&(d.type===\"html\"||d.type===\"svg\")&&Xw(f.current,n,i,g),x.useInsertionEffect(()=>{d&&d.update(n,u)});const v=n[Gm],y=x.useRef(!!v&&!(!((o=window.MotionHandoffIsComplete)===null||o===void 0)&&o.call(window,v))&&((s=window.MotionHasOptimisedAnimation)===null||s===void 0?void 0:s.call(window,v)));return ms(()=>{d&&(window.MotionIsMounted=!0,d.updateFeatures(),Fu.render(d.render),y.current&&d.animationState&&d.animationState.animateChanges())}),x.useEffect(()=>{d&&(!y.current&&d.animationState&&d.animationState.animateChanges(),y.current&&(queueMicrotask(()=>{var S;(S=window.MotionHandoffMarkAsComplete)===null||S===void 0||S.call(window,v)}),y.current=!1))}),d}function Xw(e,t,n,r){const{layoutId:i,layout:o,drag:s,dragConstraints:l,layoutScroll:a,layoutRoot:u}=t;e.projection=new n(e.latestValues,t[\"data-framer-portal-id\"]?void 0:S0(e.parent)),e.projection.setOptions({layoutId:i,layout:o,alwaysMeasureLayout:!!s||l&&Bn(l),visualElement:e,animationType:typeof o==\"string\"?o:\"both\",initialPromotionConfig:r,layoutScroll:a,layoutRoot:u})}function S0(e){if(e)return e.options.allowProjection!==!1?e.projection:S0(e.parent)}function Zw(e,t,n){return x.useCallback(r=>{r&&e.mount&&e.mount(r),t&&(r?t.mount(r):t.unmount()),n&&(typeof n==\"function\"?n(r):Bn(n)&&(n.current=r))},[t])}function gs(e){return ai(e.animate)||gu.some(t=>ui(e[t]))}function P0(e){return!!(gs(e)||e.variants)}function bw(e,t){if(gs(e)){const{initial:n,animate:r}=e;return{initial:n===!1||ui(n)?n:void 0,animate:ui(r)?r:void 0}}return e.inherit!==!1?t:{}}function Jw(e){const{initial:t,animate:n}=bw(e,x.useContext(ps));return x.useMemo(()=>({initial:t,animate:n}),[Sd(t),Sd(n)])}function Sd(e){return Array.isArray(e)?e.join(\" \"):e}const Pd={animation:[\"animate\",\"variants\",\"whileHover\",\"whileTap\",\"exit\",\"whileInView\",\"whileFocus\",\"whileDrag\"],exit:[\"exit\"],drag:[\"drag\",\"dragControls\"],focus:[\"whileFocus\"],hover:[\"whileHover\",\"onHoverStart\",\"onHoverEnd\"],tap:[\"whileTap\",\"onTap\",\"onTapStart\",\"onTapCancel\"],pan:[\"onPan\",\"onPanStart\",\"onPanSessionStart\",\"onPanEnd\"],inView:[\"whileInView\",\"onViewportEnter\",\"onViewportLeave\"],layout:[\"layout\",\"layoutId\"]},ir={};for(const e in Pd)ir[e]={isEnabled:t=>Pd[e].some(n=>!!t[n])};function qw(e){for(const t in e)ir[t]={...ir[t],...e[t]}}const eS=Symbol.for(\"motionComponentSymbol\");function tS({preloadedFeatures:e,createVisualElement:t,useRender:n,useVisualState:r,Component:i}){e&&qw(e);function o(l,a){let u;const c={...x.useContext(hs),...l,layoutId:nS(l)},{isStatic:f}=c,d=Jw(l),g=r(l,f);if(!f&&Iu){rS();const v=iS(c);u=v.MeasureLayout,d.visualElement=Yw(i,g,c,t,v.ProjectionNode)}return P.jsxs(ps.Provider,{value:d,children:[u&&d.visualElement?P.jsx(u,{visualElement:d.visualElement,...c}):null,n(i,l,Zw(g,d.visualElement,a),g,f,d.visualElement)]})}const s=x.forwardRef(o);return s[eS]=i,s}function nS({layoutId:e}){const t=x.useContext(zu).id;return t&&e!==void 0?t+\"-\"+e:e}function rS(e,t){x.useContext(w0).strict}function iS(e){const{drag:t,layout:n}=ir;if(!t&&!n)return{};const r={...t,...n};return{MeasureLayout:t!=null&&t.isEnabled(e)||n!=null&&n.isEnabled(e)?r.MeasureLayout:void 0,ProjectionNode:r.ProjectionNode}}const oS=[\"animate\",\"circle\",\"defs\",\"desc\",\"ellipse\",\"g\",\"image\",\"line\",\"filter\",\"marker\",\"mask\",\"metadata\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"rect\",\"stop\",\"switch\",\"symbol\",\"svg\",\"text\",\"tspan\",\"use\",\"view\"];function Bu(e){return typeof e!=\"string\"||e.includes(\"-\")?!1:!!(oS.indexOf(e)>-1||/[A-Z]/u.test(e))}function C0(e,{style:t,vars:n},r,i){Object.assign(e.style,t,i&&i.getProjectionStyles(r));for(const o in n)e.style.setProperty(o,n[o])}const E0=new Set([\"baseFrequency\",\"diffuseConstant\",\"kernelMatrix\",\"kernelUnitLength\",\"keySplines\",\"keyTimes\",\"limitingConeAngle\",\"markerHeight\",\"markerWidth\",\"numOctaves\",\"targetX\",\"targetY\",\"surfaceScale\",\"specularConstant\",\"specularExponent\",\"stdDeviation\",\"tableValues\",\"viewBox\",\"gradientTransform\",\"pathLength\",\"startOffset\",\"textLength\",\"lengthAdjust\"]);function T0(e,t,n,r){C0(e,t,void 0,r);for(const i in t.attrs)e.setAttribute(E0.has(i)?i:cs(i),t.attrs[i])}function k0(e,{layout:t,layoutId:n}){return qt.has(e)||e.startsWith(\"origin\")||(t||n!==void 0)&&(!!Uo[e]||e===\"opacity\")}function Uu(e,t,n){var r;const{style:i}=e,o={};for(const s in i)(me(i[s])||t.style&&me(t.style[s])||k0(s,e)||((r=n==null?void 0:n.getValue(s))===null||r===void 0?void 0:r.liveStyle)!==void 0)&&(o[s]=i[s]);return n&&i&&typeof i.willChange==\"string\"&&(n.applyWillChange=!1),o}function L0(e,t,n){const r=Uu(e,t,n);for(const i in e)if(me(e[i])||me(t[i])){const o=xi.indexOf(i)!==-1?\"attr\"+i.charAt(0).toUpperCase()+i.substring(1):i;r[o]=e[i]}return r}function cr(e){const t=x.useRef(null);return t.current===null&&(t.current=e()),t.current}function sS(e){if(qt.has(e))return\"transform\";if(Um.has(e))return cs(e)}function lS({applyWillChange:e=!1,scrapeMotionValuesFromProps:t,createRenderState:n,onMount:r},i,o,s,l){const a={latestValues:aS(i,o,s,l?!1:e,t),renderState:n()};return r&&(a.mount=u=>r(i,u,a)),a}const R0=e=>(t,n)=>{const r=x.useContext(ps),i=x.useContext(ds),o=()=>lS(e,t,r,i,n);return n?o():cr(o)};function Cd(e,t,n){const r=Array.isArray(t)?t:[t];for(let i=0;i<r.length;i++){const o=pu(e,r[i]);if(o){const{transitionEnd:s,transition:l,...a}=o;n(a,s)}}}function aS(e,t,n,r,i){var o;const s={},l=new Set,a=r&&((o=e.style)===null||o===void 0?void 0:o.willChange)===void 0,u=i(e,{});for(const S in u)s[S]=so(u[S]);let{initial:c,animate:f}=e;const d=gs(e),g=P0(e);t&&g&&!d&&e.inherit!==!1&&(c===void 0&&(c=t.initial),f===void 0&&(f=t.animate));let v=n?n.initial===!1:!1;v=v||c===!1;const y=v?f:c;return y&&typeof y!=\"boolean\"&&!ai(y)&&Cd(e,y,(S,p)=>{for(const h in S){let m=S[h];if(Array.isArray(m)){const w=v?m.length-1:0;m=m[w]}m!==null&&(s[h]=m)}for(const h in p)s[h]=p[h]}),a&&(f&&c!==!1&&!ai(f)&&Cd(e,f,S=>{for(const p in S){const h=sS(p);h&&l.add(h)}}),l.size&&(s.willChange=Array.from(l).join(\",\"))),s}const $u=()=>({style:{},transform:{},transformOrigin:{},vars:{}}),A0=()=>({...$u(),attrs:{}}),M0=(e,t)=>t&&typeof e==\"number\"?t.transform(e):e,uS={x:\"translateX\",y:\"translateY\",z:\"translateZ\",transformPerspective:\"perspective\"},cS=xi.length;function fS(e,t,n){let r=\"\",i=!0;for(let o=0;o<cS;o++){const s=xi[o],l=e[s];if(l===void 0)continue;let a=!0;if(typeof l==\"number\"?a=l===(s.startsWith(\"scale\")?1:0):a=parseFloat(l)===0,!a||n){const u=M0(l,Eu[s]);if(!a){i=!1;const c=uS[s]||s;r+=`${c}(${u}) `}n&&(t[s]=u)}}return r=r.trim(),n?r=n(t,i?\"\":r):i&&(r=\"none\"),r}function Wu(e,t,n){const{style:r,vars:i,transformOrigin:o}=e;let s=!1,l=!1;for(const a in t){const u=t[a];if(qt.has(a)){s=!0;continue}else if(Sm(a)){i[a]=u;continue}else{const c=M0(u,Eu[a]);a.startsWith(\"origin\")?(l=!0,o[a]=c):r[a]=c}}if(t.transform||(s||n?r.transform=fS(t,e.transform,n):r.transform&&(r.transform=\"none\")),l){const{originX:a=\"50%\",originY:u=\"50%\",originZ:c=0}=o;r.transformOrigin=`${a} ${u} ${c}`}}function Ed(e,t,n){return typeof e==\"string\"?e:M.transform(t+n*e)}function dS(e,t,n){const r=Ed(t,e.x,e.width),i=Ed(n,e.y,e.height);return`${r} ${i}`}const hS={offset:\"stroke-dashoffset\",array:\"stroke-dasharray\"},pS={offset:\"strokeDashoffset\",array:\"strokeDasharray\"};function mS(e,t,n=1,r=0,i=!0){e.pathLength=1;const o=i?hS:pS;e[o.offset]=M.transform(-r);const s=M.transform(t),l=M.transform(n);e[o.array]=`${s} ${l}`}function Hu(e,{attrX:t,attrY:n,attrScale:r,originX:i,originY:o,pathLength:s,pathSpacing:l=1,pathOffset:a=0,...u},c,f){if(Wu(e,u,f),c){e.style.viewBox&&(e.attrs.viewBox=e.style.viewBox);return}e.attrs=e.style,e.style={};const{attrs:d,style:g,dimensions:v}=e;d.transform&&(v&&(g.transform=d.transform),delete d.transform),v&&(i!==void 0||o!==void 0||g.transform)&&(g.transformOrigin=dS(v,i!==void 0?i:.5,o!==void 0?o:.5)),t!==void 0&&(d.x=t),n!==void 0&&(d.y=n),r!==void 0&&(d.scale=r),s!==void 0&&mS(d,s,l,a,!1)}const Ku=e=>typeof e==\"string\"&&e.toLowerCase()===\"svg\",gS={useVisualState:R0({scrapeMotionValuesFromProps:L0,createRenderState:A0,onMount:(e,t,{renderState:n,latestValues:r})=>{O.read(()=>{try{n.dimensions=typeof t.getBBox==\"function\"?t.getBBox():t.getBoundingClientRect()}catch{n.dimensions={x:0,y:0,width:0,height:0}}}),O.render(()=>{Hu(n,r,Ku(t.tagName),e.transformTemplate),T0(t,n)})}})},vS={useVisualState:R0({applyWillChange:!0,scrapeMotionValuesFromProps:Uu,createRenderState:$u})};function V0(e,t,n){for(const r in t)!me(t[r])&&!k0(r,n)&&(e[r]=t[r])}function yS({transformTemplate:e},t){return x.useMemo(()=>{const n=$u();return Wu(n,t,e),Object.assign({},n.vars,n.style)},[t])}function xS(e,t){const n=e.style||{},r={};return V0(r,n,e),Object.assign(r,yS(e,t)),r}function wS(e,t){const n={},r=xS(e,t);return e.drag&&e.dragListener!==!1&&(n.draggable=!1,r.userSelect=r.WebkitUserSelect=r.WebkitTouchCallout=\"none\",r.touchAction=e.drag===!0?\"none\":`pan-${e.drag===\"x\"?\"y\":\"x\"}`),e.tabIndex===void 0&&(e.onTap||e.onTapStart||e.whileTap)&&(n.tabIndex=0),n.style=r,n}const SS=new Set([\"animate\",\"exit\",\"variants\",\"initial\",\"style\",\"values\",\"variants\",\"transition\",\"transformTemplate\",\"custom\",\"inherit\",\"onBeforeLayoutMeasure\",\"onAnimationStart\",\"onAnimationComplete\",\"onUpdate\",\"onDragStart\",\"onDrag\",\"onDragEnd\",\"onMeasureDragConstraints\",\"onDirectionLock\",\"onDragTransitionEnd\",\"_dragX\",\"_dragY\",\"onHoverStart\",\"onHoverEnd\",\"onViewportEnter\",\"onViewportLeave\",\"globalTapTarget\",\"ignoreStrict\",\"viewport\"]);function $o(e){return e.startsWith(\"while\")||e.startsWith(\"drag\")&&e!==\"draggable\"||e.startsWith(\"layout\")||e.startsWith(\"onTap\")||e.startsWith(\"onPan\")||e.startsWith(\"onLayout\")||SS.has(e)}let _0=e=>!$o(e);function PS(e){e&&(_0=t=>t.startsWith(\"on\")?!$o(t):e(t))}try{PS(require(\"@emotion/is-prop-valid\").default)}catch{}function CS(e,t,n){const r={};for(const i in e)i===\"values\"&&typeof e.values==\"object\"||(_0(i)||n===!0&&$o(i)||!t&&!$o(i)||e.draggable&&i.startsWith(\"onDrag\"))&&(r[i]=e[i]);return r}function ES(e,t,n,r){const i=x.useMemo(()=>{const o=A0();return Hu(o,t,Ku(r),e.transformTemplate),{...o.attrs,style:{...o.style}}},[t]);if(e.style){const o={};V0(o,e.style,e),i.style={...o,...i.style}}return i}function TS(e=!1){return(n,r,i,{latestValues:o},s)=>{const a=(Bu(n)?ES:wS)(r,o,s,n),u=CS(r,typeof n==\"string\",e),c=n!==x.Fragment?{...u,...a,ref:i}:{},{children:f}=r,d=x.useMemo(()=>me(f)?f.get():f,[f]);return x.createElement(n,{...c,children:d})}}function kS(e,t){return function(r,{forwardMotionProps:i}={forwardMotionProps:!1}){const s={...Bu(r)?gS:vS,preloadedFeatures:e,useRender:TS(i),createVisualElement:t,Component:r};return tS(s)}}const ga={current:null},j0={current:!1};function LS(){if(j0.current=!0,!!Iu)if(window.matchMedia){const e=window.matchMedia(\"(prefers-reduced-motion)\"),t=()=>ga.current=e.matches;e.addListener(t),t()}else ga.current=!1}function RS(e,t,n){for(const r in t){const i=t[r],o=n[r];if(me(i))e.addValue(r,i);else if(me(o))e.addValue(r,rt(i,{owner:e}));else if(o!==i)if(e.hasValue(r)){const s=e.getValue(r);s.liveStyle===!0?s.jump(i):s.hasAnimated||s.set(i)}else{const s=e.getStaticValue(r);e.addValue(r,rt(s!==void 0?s:i,{owner:e}))}}for(const r in n)t[r]===void 0&&e.removeValue(r);return t}const Td=new WeakMap,AS=[...Em,he,Yt],MS=e=>AS.find(Cm(e)),kd=[\"AnimationStart\",\"AnimationComplete\",\"Update\",\"BeforeLayoutMeasure\",\"LayoutMeasure\",\"LayoutAnimationStart\",\"LayoutAnimationComplete\"];class VS{scrapeMotionValuesFromProps(t,n,r){return{}}constructor({parent:t,props:n,presenceContext:r,reducedMotionConfig:i,blockInitialAnimation:o,visualState:s},l={}){this.applyWillChange=!1,this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.KeyframeResolver=Su,this.features={},this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify(\"Update\",this.latestValues),this.render=()=>{this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.renderScheduledAt=0,this.scheduleRender=()=>{const d=lt.now();this.renderScheduledAt<d&&(this.renderScheduledAt=d,O.render(this.render,!1,!0))};const{latestValues:a,renderState:u}=s;this.latestValues=a,this.baseTarget={...a},this.initialValues=n.initial?{...a}:{},this.renderState=u,this.parent=t,this.props=n,this.presenceContext=r,this.depth=t?t.depth+1:0,this.reducedMotionConfig=i,this.options=l,this.blockInitialAnimation=!!o,this.isControllingVariants=gs(n),this.isVariantNode=P0(n),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=!!(t&&t.current);const{willChange:c,...f}=this.scrapeMotionValuesFromProps(n,{},this);for(const d in f){const g=f[d];a[d]!==void 0&&me(g)&&g.set(a[d],!1)}}mount(t){this.current=t,Td.set(t,this),this.projection&&!this.projection.instance&&this.projection.mount(t),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach((n,r)=>this.bindToMotionValue(r,n)),j0.current||LS(),this.shouldReduceMotion=this.reducedMotionConfig===\"never\"?!1:this.reducedMotionConfig===\"always\"?!0:ga.current,this.parent&&this.parent.children.add(this),this.update(this.props,this.presenceContext)}unmount(){Td.delete(this.current),this.projection&&this.projection.unmount(),be(this.notifyUpdate),be(this.render),this.valueSubscriptions.forEach(t=>t()),this.valueSubscriptions.clear(),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent&&this.parent.children.delete(this);for(const t in this.events)this.events[t].clear();for(const t in this.features){const n=this.features[t];n&&(n.unmount(),n.isMounted=!1)}this.current=null}bindToMotionValue(t,n){this.valueSubscriptions.has(t)&&this.valueSubscriptions.get(t)();const r=qt.has(t),i=n.on(\"change\",l=>{this.latestValues[t]=l,this.props.onUpdate&&O.preRender(this.notifyUpdate),r&&this.projection&&(this.projection.isTransformDirty=!0)}),o=n.on(\"renderRequest\",this.scheduleRender);let s;window.MotionCheckAppearSync&&(s=window.MotionCheckAppearSync(this,t,n)),this.valueSubscriptions.set(t,()=>{i(),o(),s&&s(),n.owner&&n.stop()})}sortNodePosition(t){return!this.current||!this.sortInstanceNodePosition||this.type!==t.type?0:this.sortInstanceNodePosition(this.current,t.current)}updateFeatures(){let t=\"animation\";for(t in ir){const n=ir[t];if(!n)continue;const{isEnabled:r,Feature:i}=n;if(!this.features[t]&&i&&r(this.props)&&(this.features[t]=new i(this)),this.features[t]){const o=this.features[t];o.isMounted?o.update():(o.mount(),o.isMounted=!0)}}}triggerBuild(){this.build(this.renderState,this.latestValues,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):X()}getStaticValue(t){return this.latestValues[t]}setStaticValue(t,n){this.latestValues[t]=n}update(t,n){(t.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=t,this.prevPresenceContext=this.presenceContext,this.presenceContext=n;for(let r=0;r<kd.length;r++){const i=kd[r];this.propEventSubscriptions[i]&&(this.propEventSubscriptions[i](),delete this.propEventSubscriptions[i]);const o=\"on\"+i,s=t[o];s&&(this.propEventSubscriptions[i]=this.on(i,s))}this.prevMotionValues=RS(this,this.scrapeMotionValuesFromProps(t,this.prevProps,this),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue()}getProps(){return this.props}getVariant(t){return this.props.variants?this.props.variants[t]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}addVariantChild(t){const n=this.getClosestVariantNode();if(n)return n.variantChildren&&n.variantChildren.add(t),()=>n.variantChildren.delete(t)}addValue(t,n){const r=this.values.get(t);n!==r&&(r&&this.removeValue(t),this.bindToMotionValue(t,n),this.values.set(t,n),this.latestValues[t]=n.get())}removeValue(t){this.values.delete(t);const n=this.valueSubscriptions.get(t);n&&(n(),this.valueSubscriptions.delete(t)),delete this.latestValues[t],this.removeValueFromRenderState(t,this.renderState)}hasValue(t){return this.values.has(t)}getValue(t,n){if(this.props.values&&this.props.values[t])return this.props.values[t];let r=this.values.get(t);return r===void 0&&n!==void 0&&(r=rt(n===null?void 0:n,{owner:this}),this.addValue(t,r)),r}readValue(t,n){var r;let i=this.latestValues[t]!==void 0||!this.current?this.latestValues[t]:(r=this.getBaseTargetFromProps(this.props,t))!==null&&r!==void 0?r:this.readValueFromInstance(this.current,t,this.options);return i!=null&&(typeof i==\"string\"&&(xm(i)||ym(i))?i=parseFloat(i):!MS(i)&&Yt.test(n)&&(i=_m(t,n)),this.setBaseTarget(t,me(i)?i.get():i)),me(i)?i.get():i}setBaseTarget(t,n){this.baseTarget[t]=n}getBaseTarget(t){var n;const{initial:r}=this.props;let i;if(typeof r==\"string\"||typeof r==\"object\"){const s=pu(this.props,r,(n=this.presenceContext)===null||n===void 0?void 0:n.custom);s&&(i=s[t])}if(r&&i!==void 0)return i;const o=this.getBaseTargetFromProps(this.props,t);return o!==void 0&&!me(o)?o:this.initialValues[t]!==void 0&&i===void 0?void 0:this.baseTarget[t]}on(t,n){return this.events[t]||(this.events[t]=new Ou),this.events[t].add(n)}notify(t,...n){this.events[t]&&this.events[t].notify(...n)}}class D0 extends VS{constructor(){super(...arguments),this.KeyframeResolver=jm}sortInstanceNodePosition(t,n){return t.compareDocumentPosition(n)&2?1:-1}getBaseTargetFromProps(t,n){return t.style?t.style[n]:void 0}removeValueFromRenderState(t,{vars:n,style:r}){delete n[t],delete r[t]}}function _S(e){return window.getComputedStyle(e)}class jS extends D0{constructor(){super(...arguments),this.type=\"html\",this.applyWillChange=!0,this.renderInstance=C0}readValueFromInstance(t,n){if(qt.has(n)){const r=Tu(n);return r&&r.default||0}else{const r=_S(t),i=(Sm(n)?r.getPropertyValue(n):r[n])||0;return typeof i==\"string\"?i.trim():i}}measureInstanceViewportBox(t,{transformPagePoint:n}){return l0(t,n)}build(t,n,r){Wu(t,n,r.transformTemplate)}scrapeMotionValuesFromProps(t,n,r){return Uu(t,n,r)}handleChildMotionValue(){this.childSubscription&&(this.childSubscription(),delete this.childSubscription);const{children:t}=this.props;me(t)&&(this.childSubscription=t.on(\"change\",n=>{this.current&&(this.current.textContent=`${n}`)}))}}class DS extends D0{constructor(){super(...arguments),this.type=\"svg\",this.isSVGTag=!1,this.measureInstanceViewportBox=X}getBaseTargetFromProps(t,n){return t[n]}readValueFromInstance(t,n){if(qt.has(n)){const r=Tu(n);return r&&r.default||0}return n=E0.has(n)?n:cs(n),t.getAttribute(n)}scrapeMotionValuesFromProps(t,n,r){return L0(t,n,r)}build(t,n,r){Hu(t,n,this.isSVGTag,r.transformTemplate)}renderInstance(t,n,r,i){T0(t,n,r,i)}mount(t){this.isSVGTag=Ku(t.tagName),super.mount(t)}}const NS=(e,t)=>Bu(e)?new DS(t):new jS(t,{allowProjection:e!==x.Fragment}),OS=kS({...Ex,...Gw,...Nw,...Qw},NS),ye=y1(OS);class zS extends x.Component{getSnapshotBeforeUpdate(t){const n=this.props.childRef.current;if(n&&t.isPresent&&!this.props.isPresent){const r=this.props.sizeRef.current;r.height=n.offsetHeight||0,r.width=n.offsetWidth||0,r.top=n.offsetTop,r.left=n.offsetLeft}return null}componentDidUpdate(){}render(){return this.props.children}}function FS({children:e,isPresent:t}){const n=x.useId(),r=x.useRef(null),i=x.useRef({width:0,height:0,top:0,left:0}),{nonce:o}=x.useContext(hs);return x.useInsertionEffect(()=>{const{width:s,height:l,top:a,left:u}=i.current;if(t||!r.current||!s||!l)return;r.current.dataset.motionPopId=n;const c=document.createElement(\"style\");return o&&(c.nonce=o),document.head.appendChild(c),c.sheet&&c.sheet.insertRule(`\n          [data-motion-pop-id=\"${n}\"] {\n            position: absolute !important;\n            width: ${s}px !important;\n            height: ${l}px !important;\n            top: ${a}px !important;\n            left: ${u}px !important;\n          }\n        `),()=>{document.head.removeChild(c)}},[t]),P.jsx(zS,{isPresent:t,childRef:r,sizeRef:i,children:x.cloneElement(e,{ref:r})})}const IS=({children:e,initial:t,isPresent:n,onExitComplete:r,custom:i,presenceAffectsLayout:o,mode:s})=>{const l=cr(BS),a=x.useId(),u=x.useCallback(f=>{l.set(f,!0);for(const d of l.values())if(!d)return;r&&r()},[l,r]),c=x.useMemo(()=>({id:a,initial:t,isPresent:n,custom:i,onExitComplete:u,register:f=>(l.set(f,!1),()=>l.delete(f))}),o?[Math.random(),u]:[n,u]);return x.useMemo(()=>{l.forEach((f,d)=>l.set(d,!1))},[n]),x.useEffect(()=>{!n&&!l.size&&r&&r()},[n]),s===\"popLayout\"&&(e=P.jsx(FS,{isPresent:n,children:e})),P.jsx(ds.Provider,{value:c,children:e})};function BS(){return new Map}const Ki=e=>e.key||\"\";function Ld(e){const t=[];return x.Children.forEach(e,n=>{x.isValidElement(n)&&t.push(n)}),t}const US=({children:e,exitBeforeEnter:t,custom:n,initial:r=!0,onExitComplete:i,presenceAffectsLayout:o=!0,mode:s=\"sync\"})=>{const l=x.useMemo(()=>Ld(e),[e]),a=l.map(Ki),u=x.useRef(!0),c=x.useRef(l),f=cr(()=>new Map),[d,g]=x.useState(l),[v,y]=x.useState(l);ms(()=>{u.current=!1,c.current=l;for(let h=0;h<v.length;h++){const m=Ki(v[h]);a.includes(m)?f.delete(m):f.get(m)!==!0&&f.set(m,!1)}},[v,a.length,a.join(\"-\")]);const S=[];if(l!==d){let h=[...l];for(let m=0;m<v.length;m++){const w=v[m],C=Ki(w);a.includes(C)||(h.splice(m,0,w),S.push(w))}s===\"wait\"&&S.length&&(h=S),y(Ld(h)),g(l);return}const{forceRender:p}=x.useContext(zu);return P.jsx(P.Fragment,{children:v.map(h=>{const m=Ki(h),w=l===v||a.includes(m),C=()=>{if(f.has(m))f.set(m,!0);else return;let k=!0;f.forEach(R=>{R||(k=!1)}),k&&(p==null||p(),y(c.current),i&&i())};return P.jsx(IS,{isPresent:w,initial:!u.current||r?void 0:!1,custom:w?void 0:n,presenceAffectsLayout:o,mode:s,onExitComplete:w?void 0:C,children:h},m)})})};function $S(e){const t=cr(()=>rt(e)),{isStatic:n}=x.useContext(hs);if(n){const[,r]=x.useState(e);x.useEffect(()=>t.on(\"change\",r),[])}return t}function N0(e,t){const n=$S(t()),r=()=>n.set(t());return r(),ms(()=>{const i=()=>O.preRender(r,!1,!0),o=e.map(s=>s.on(\"change\",i));return()=>{o.forEach(s=>s()),be(r)}}),n}const WS=e=>e&&typeof e==\"object\"&&e.mix,HS=e=>WS(e)?e.mix:void 0;function KS(...e){const t=!Array.isArray(e[0]),n=t?0:-1,r=e[0+n],i=e[1+n],o=e[2+n],s=e[3+n],l=Mu(i,o,{mixer:HS(o[0]),...s});return t?l(r):l}function GS(e){Ir.current=[],e();const t=N0(Ir.current,e);return Ir.current=void 0,t}function Rd(e,t,n,r){if(typeof e==\"function\")return GS(e);const i=typeof t==\"function\"?t:KS(t,n,r);return Array.isArray(e)?Ad(e,i):Ad([e],([o])=>i(o))}function Ad(e,t){const n=cr(()=>[]);return N0(e,()=>{n.length=0;const r=e.length;for(let i=0;i<r;i++)n[i]=e[i].get();return t(n)})}function QS(e,t,n){x.useInsertionEffect(()=>e.on(t,n),[e,t,n])}function YS(e,t,n){return typeof e==\"string\"?e=document.querySelectorAll(e):e instanceof Element&&(e=[e]),Array.from(e||[])}const lo=new WeakMap;let Rt;function XS(e,t){if(t){const{inlineSize:n,blockSize:r}=t[0];return{width:n,height:r}}else return e instanceof SVGElement&&\"getBBox\"in e?e.getBBox():{width:e.offsetWidth,height:e.offsetHeight}}function ZS({target:e,contentRect:t,borderBoxSize:n}){var r;(r=lo.get(e))===null||r===void 0||r.forEach(i=>{i({target:e,contentSize:t,get size(){return XS(e,n)}})})}function bS(e){e.forEach(ZS)}function JS(){typeof ResizeObserver>\"u\"||(Rt=new ResizeObserver(bS))}function qS(e,t){Rt||JS();const n=YS(e);return n.forEach(r=>{let i=lo.get(r);i||(i=new Set,lo.set(r,i)),i.add(t),Rt==null||Rt.observe(r)}),()=>{n.forEach(r=>{const i=lo.get(r);i==null||i.delete(t),i!=null&&i.size||Rt==null||Rt.unobserve(r)})}}const ao=new Set;let $r;function eP(){$r=()=>{const e={width:window.innerWidth,height:window.innerHeight},t={target:window,size:e,contentSize:e};ao.forEach(n=>n(t))},window.addEventListener(\"resize\",$r)}function tP(e){return ao.add(e),$r||eP(),()=>{ao.delete(e),!ao.size&&$r&&($r=void 0)}}function nP(e,t){return typeof e==\"function\"?tP(e):qS(e,t)}const rP=50,Md=()=>({current:0,offset:[],progress:0,scrollLength:0,targetOffset:0,targetLength:0,containerLength:0,velocity:0}),iP=()=>({time:0,x:Md(),y:Md()}),oP={x:{length:\"Width\",position:\"Left\"},y:{length:\"Height\",position:\"Top\"}};function Vd(e,t,n,r){const i=n[t],{length:o,position:s}=oP[t],l=i.current,a=n.time;i.current=e[`scroll${s}`],i.scrollLength=e[`scroll${o}`]-e[`client${o}`],i.offset.length=0,i.offset[0]=0,i.offset[1]=i.scrollLength,i.progress=Pn(0,i.scrollLength,i.current);const u=r-a;i.velocity=u>rP?0:Lu(i.current-l,u)}function sP(e,t,n){Vd(e,\"x\",t,n),Vd(e,\"y\",t,n),t.time=n}function lP(e,t){const n={x:0,y:0};let r=e;for(;r&&r!==t;)if(r instanceof HTMLElement)n.x+=r.offsetLeft,n.y+=r.offsetTop,r=r.offsetParent;else if(r.tagName===\"svg\"){const i=r.getBoundingClientRect();r=r.parentElement;const o=r.getBoundingClientRect();n.x+=i.left-o.left,n.y+=i.top-o.top}else if(r instanceof SVGGraphicsElement){const{x:i,y:o}=r.getBBox();n.x+=i,n.y+=o;let s=null,l=r.parentNode;for(;!s;)l.tagName===\"svg\"&&(s=l),l=r.parentNode;r=s}else break;return n}const aP={Enter:[[0,1],[1,1]],Exit:[[0,0],[1,0]],Any:[[1,0],[0,1]],All:[[0,0],[1,1]]},va={start:0,center:.5,end:1};function _d(e,t,n=0){let r=0;if(e in va&&(e=va[e]),typeof e==\"string\"){const i=parseFloat(e);e.endsWith(\"px\")?r=i:e.endsWith(\"%\")?e=i/100:e.endsWith(\"vw\")?r=i/100*document.documentElement.clientWidth:e.endsWith(\"vh\")?r=i/100*document.documentElement.clientHeight:e=i}return typeof e==\"number\"&&(r=t*e),n+r}const uP=[0,0];function cP(e,t,n,r){let i=Array.isArray(e)?e:uP,o=0,s=0;return typeof e==\"number\"?i=[e,e]:typeof e==\"string\"&&(e=e.trim(),e.includes(\" \")?i=e.split(\" \"):i=[e,va[e]?e:\"0\"]),o=_d(i[0],n,r),s=_d(i[1],t),o-s}const fP={x:0,y:0};function dP(e){return\"getBBox\"in e&&e.tagName!==\"svg\"?e.getBBox():{width:e.clientWidth,height:e.clientHeight}}function hP(e,t,n){const{offset:r=aP.All}=n,{target:i=e,axis:o=\"y\"}=n,s=o===\"y\"?\"height\":\"width\",l=i!==e?lP(i,e):fP,a=i===e?{width:e.scrollWidth,height:e.scrollHeight}:dP(i),u={width:e.clientWidth,height:e.clientHeight};t[o].offset.length=0;let c=!t[o].interpolate;const f=r.length;for(let d=0;d<f;d++){const g=cP(r[d],u[s],a[s],l[o]);!c&&g!==t[o].interpolatorOffsets[d]&&(c=!0),t[o].offset[d]=g}c&&(t[o].interpolate=Mu(t[o].offset,Bm(r)),t[o].interpolatorOffsets=[...t[o].offset]),t[o].progress=t[o].interpolate(t[o].current)}function pP(e,t=e,n){if(n.x.targetOffset=0,n.y.targetOffset=0,t!==e){let r=t;for(;r&&r!==e;)n.x.targetOffset+=r.offsetLeft,n.y.targetOffset+=r.offsetTop,r=r.offsetParent}n.x.targetLength=t===e?t.scrollWidth:t.clientWidth,n.y.targetLength=t===e?t.scrollHeight:t.clientHeight,n.x.containerLength=e.clientWidth,n.y.containerLength=e.clientHeight}function mP(e,t,n,r={}){return{measure:()=>pP(e,r.target,n),update:i=>{sP(e,n,i),(r.offset||r.target)&&hP(e,n,r)},notify:()=>t(n)}}const Pr=new WeakMap,jd=new WeakMap,il=new WeakMap,Dd=e=>e===document.documentElement?window:e;function Gu(e,{container:t=document.documentElement,...n}={}){let r=il.get(t);r||(r=new Set,il.set(t,r));const i=iP(),o=mP(t,e,i,n);if(r.add(o),!Pr.has(t)){const l=()=>{for(const d of r)d.measure()},a=()=>{for(const d of r)d.update(ie.timestamp)},u=()=>{for(const d of r)d.notify()},c=()=>{O.read(l,!1,!0),O.read(a,!1,!0),O.update(u,!1,!0)};Pr.set(t,c);const f=Dd(t);window.addEventListener(\"resize\",c,{passive:!0}),t!==document.documentElement&&jd.set(t,nP(t,c)),f.addEventListener(\"scroll\",c,{passive:!0})}const s=Pr.get(t);return O.read(s,!1,!0),()=>{var l;be(s);const a=il.get(t);if(!a||(a.delete(o),a.size))return;const u=Pr.get(t);Pr.delete(t),u&&(Dd(t).removeEventListener(\"scroll\",u),(l=jd.get(t))===null||l===void 0||l(),window.removeEventListener(\"resize\",u))}}function O0(e,t){let n;const r=()=>{const{currentTime:i}=t,s=(i===null?0:i.value)/100;n!==s&&e(s),n=s};return O.update(r,!0),()=>be(r)}function gP({source:e,container:t,axis:n=\"y\"}){e&&(t=e);const r={value:0},i=Gu(o=>{r.value=o[n].progress*100},{container:t,axis:n});return{currentTime:r,cancel:i}}const ol=new Map;function z0({source:e,container:t=document.documentElement,axis:n=\"y\"}={}){e&&(t=e),ol.has(t)||ol.set(t,{});const r=ol.get(t);return r[n]||(r[n]=Km()?new ScrollTimeline({source:t,axis:n}):gP({source:t,axis:n})),r[n]}function vP(e){return e.length===2}function F0(e){return e&&(e.target||e.offset)}function yP(e,t){return vP(e)||F0(t)?Gu(n=>{e(n[t.axis].progress,n)},t):O0(e,z0(t))}function xP(e,t){if(F0(t))return e.pause(),Gu(n=>{e.time=e.duration*n[t.axis].progress},t);{const n=z0(t);return e.attachTimeline(n,r=>(r.pause(),O0(i=>{r.time=r.duration*i},n)))}}function wP(e,{axis:t=\"y\",...n}={}){const r={axis:t,...n};return typeof e==\"function\"?yP(e,r):xP(e,r)}function Nd(e,t){_1(!!(!t||t.current))}const SP=()=>({scrollX:rt(0),scrollY:rt(0),scrollXProgress:rt(0),scrollYProgress:rt(0)});function I0({container:e,target:t,layoutEffect:n=!0,...r}={}){const i=cr(SP);return(n?ms:x.useEffect)(()=>(Nd(\"target\",t),Nd(\"container\",e),wP((s,{x:l,y:a})=>{i.scrollX.set(l.current),i.scrollXProgress.set(l.progress),i.scrollY.set(a.current),i.scrollYProgress.set(a.progress)},{...r,container:(e==null?void 0:e.current)||void 0,target:(t==null?void 0:t.current)||void 0})),[e,t,JSON.stringify(r.offset)]),i}/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */var PP={xmlns:\"http://www.w3.org/2000/svg\",width:24,height:24,viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:2,strokeLinecap:\"round\",strokeLinejoin:\"round\"};/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */const CP=e=>e.replace(/([a-z0-9])([A-Z])/g,\"$1-$2\").toLowerCase().trim(),fr=(e,t)=>{const n=x.forwardRef(({color:r=\"currentColor\",size:i=24,strokeWidth:o=2,absoluteStrokeWidth:s,className:l=\"\",children:a,...u},c)=>x.createElement(\"svg\",{ref:c,...PP,width:i,height:i,stroke:r,strokeWidth:s?Number(o)*24/Number(i):o,className:[\"lucide\",`lucide-${CP(e)}`,l].join(\" \"),...u},[...t.map(([f,d])=>x.createElement(f,d)),...Array.isArray(a)?a:[a]]));return n.displayName=`${e}`,n};/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */const EP=fr(\"Menu\",[[\"line\",{x1:\"4\",x2:\"20\",y1:\"12\",y2:\"12\",key:\"1e0a9i\"}],[\"line\",{x1:\"4\",x2:\"20\",y1:\"6\",y2:\"6\",key:\"1owob3\"}],[\"line\",{x1:\"4\",x2:\"20\",y1:\"18\",y2:\"18\",key:\"yk5zj1\"}]]);/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */const TP=fr(\"Moon\",[[\"path\",{d:\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\",key:\"a7tn18\"}]]);/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */const kP=fr(\"Sun\",[[\"circle\",{cx:\"12\",cy:\"12\",r:\"4\",key:\"4exip2\"}],[\"path\",{d:\"M12 2v2\",key:\"tus03m\"}],[\"path\",{d:\"M12 20v2\",key:\"1lh1kg\"}],[\"path\",{d:\"m4.93 4.93 1.41 1.41\",key:\"149t6j\"}],[\"path\",{d:\"m17.66 17.66 1.41 1.41\",key:\"ptbguv\"}],[\"path\",{d:\"M2 12h2\",key:\"1t8f8n\"}],[\"path\",{d:\"M20 12h2\",key:\"1q8mjw\"}],[\"path\",{d:\"m6.34 17.66-1.41 1.41\",key:\"1m8zz5\"}],[\"path\",{d:\"m19.07 4.93-1.41 1.41\",key:\"1shlcs\"}]]);/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */const LP=fr(\"X\",[[\"path\",{d:\"M18 6 6 18\",key:\"1bl5f8\"}],[\"path\",{d:\"m6 6 12 12\",key:\"d8bk6v\"}]]);/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */const RP=fr(\"ZoomIn\",[[\"circle\",{cx:\"11\",cy:\"11\",r:\"8\",key:\"4ej97u\"}],[\"line\",{x1:\"21\",x2:\"16.65\",y1:\"21\",y2:\"16.65\",key:\"13gj7c\"}],[\"line\",{x1:\"11\",x2:\"11\",y1:\"8\",y2:\"14\",key:\"1vmskp\"}],[\"line\",{x1:\"8\",x2:\"14\",y1:\"11\",y2:\"11\",key:\"durymu\"}]]);/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */const AP=fr(\"ZoomOut\",[[\"circle\",{cx:\"11\",cy:\"11\",r:\"8\",key:\"4ej97u\"}],[\"line\",{x1:\"21\",x2:\"16.65\",y1:\"21\",y2:\"16.65\",key:\"13gj7c\"}],[\"line\",{x1:\"8\",x2:\"14\",y1:\"11\",y2:\"11\",key:\"durymu\"}]]);var B0={color:void 0,size:void 0,className:void 0,style:void 0,attr:void 0},Od=pt.createContext&&pt.createContext(B0),MP=[\"attr\",\"size\",\"title\"];function VP(e,t){if(e==null)return{};var n=_P(e,t),r,i;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],!(t.indexOf(r)>=0)&&Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}function _P(e,t){if(e==null)return{};var n={};for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){if(t.indexOf(r)>=0)continue;n[r]=e[r]}return n}function Wo(){return Wo=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Wo.apply(this,arguments)}function zd(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable})),n.push.apply(n,r)}return n}function Ho(e){for(var t=1;t<arguments.length;t++){var n=arguments[t]!=null?arguments[t]:{};t%2?zd(Object(n),!0).forEach(function(r){jP(e,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):zd(Object(n)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))})}return e}function jP(e,t,n){return t=DP(t),t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function DP(e){var t=NP(e,\"string\");return typeof t==\"symbol\"?t:t+\"\"}function NP(e,t){if(typeof e!=\"object\"||!e)return e;var n=e[Symbol.toPrimitive];if(n!==void 0){var r=n.call(e,t||\"default\");if(typeof r!=\"object\")return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(t===\"string\"?String:Number)(e)}function U0(e){return e&&e.map((t,n)=>pt.createElement(t.tag,Ho({key:n},t.attr),U0(t.child)))}function Je(e){return t=>pt.createElement(OP,Wo({attr:Ho({},e.attr)},t),U0(e.child))}function OP(e){var t=n=>{var{attr:r,size:i,title:o}=e,s=VP(e,MP),l=i||n.size||\"1em\",a;return n.className&&(a=n.className),e.className&&(a=(a?a+\" \":\"\")+e.className),pt.createElement(\"svg\",Wo({stroke:\"currentColor\",fill:\"currentColor\",strokeWidth:\"0\"},n.attr,r,s,{className:a,style:Ho(Ho({color:e.color||n.color},n.style),e.style),height:l,width:l,xmlns:\"http://www.w3.org/2000/svg\"}),o&&pt.createElement(\"title\",null,o),e.children)};return Od!==void 0?pt.createElement(Od.Consumer,null,n=>t(n)):t(B0)}function lC(e){return Je({tag:\"svg\",attr:{viewBox:\"0 0 448 512\"},child:[{tag:\"path\",attr:{d:\"M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z\"},child:[]}]})(e)}function aC(e){return Je({tag:\"svg\",attr:{viewBox:\"0 0 512 512\"},child:[{tag:\"path\",attr:{d:\"M320 336c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-48H0v144c0 25.6 22.4 48 48 48h416c25.6 0 48-22.4 48-48V288H320v48zm144-208h-80V80c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h512v-80c0-25.6-22.4-48-48-48zm-144 0H192V96h128v32z\"},child:[]}]})(e)}function uC(e){return Je({tag:\"svg\",attr:{viewBox:\"0 0 448 512\"},child:[{tag:\"path\",attr:{d:\"M436 480h-20V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v456H12c-6.627 0-12 5.373-12 12v20h448v-20c0-6.627-5.373-12-12-12zM128 76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76zm0 96c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40zm52 148h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12zm76 160h-64v-84c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v84zm64-172c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40z\"},child:[]}]})(e)}function cC(e){return Je({tag:\"svg\",attr:{viewBox:\"0 0 512 512\"},child:[{tag:\"path\",attr:{d:\"M496 384H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM464 96H345.94c-21.38 0-32.09 25.85-16.97 40.97l32.4 32.4L288 242.75l-73.37-73.37c-12.5-12.5-32.76-12.5-45.25 0l-68.69 68.69c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0L192 237.25l73.37 73.37c12.5 12.5 32.76 12.5 45.25 0l96-96 32.4 32.4c15.12 15.12 40.97 4.41 40.97-16.97V112c.01-8.84-7.15-16-15.99-16z\"},child:[]}]})(e)}function fC(e){return Je({tag:\"svg\",attr:{viewBox:\"0 0 512 512\"},child:[{tag:\"path\",attr:{d:\"M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z\"},child:[]}]})(e)}function zP(e){return Je({tag:\"svg\",attr:{viewBox:\"0 0 384 512\"},child:[{tag:\"path\",attr:{d:\"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 236c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-64c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-72v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm96-114.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"},child:[]}]})(e)}function dC(e){return Je({tag:\"svg\",attr:{viewBox:\"0 0 640 512\"},child:[{tag:\"path\",attr:{d:\"M622.34 153.2L343.4 67.5c-15.2-4.67-31.6-4.67-46.79 0L17.66 153.2c-23.54 7.23-23.54 38.36 0 45.59l48.63 14.94c-10.67 13.19-17.23 29.28-17.88 46.9C38.78 266.15 32 276.11 32 288c0 10.78 5.68 19.85 13.86 25.65L20.33 428.53C18.11 438.52 25.71 448 35.94 448h56.11c10.24 0 17.84-9.48 15.62-19.47L82.14 313.65C90.32 307.85 96 298.78 96 288c0-11.57-6.47-21.25-15.66-26.87.76-15.02 8.44-28.3 20.69-36.72L296.6 284.5c9.06 2.78 26.44 6.25 46.79 0l278.95-85.7c23.55-7.24 23.55-38.36 0-45.6zM352.79 315.09c-28.53 8.76-52.84 3.92-65.59 0l-145.02-44.55L128 384c0 35.35 85.96 64 192 64s192-28.65 192-64l-14.18-113.47-145.03 44.56z\"},child:[]}]})(e)}function hC(e){return Je({tag:\"svg\",attr:{viewBox:\"0 0 640 512\"},child:[{tag:\"path\",attr:{d:\"M434.7 64h-85.9c-8 0-15.7 3-21.6 8.4l-98.3 90c-.1.1-.2.3-.3.4-16.6 15.6-16.3 40.5-2.1 56 12.7 13.9 39.4 17.6 56.1 2.7.1-.1.3-.1.4-.2l79.9-73.2c6.5-5.9 16.7-5.5 22.6 1 6 6.5 5.5 16.6-1 22.6l-26.1 23.9L504 313.8c2.9 2.4 5.5 5 7.9 7.7V128l-54.6-54.6c-5.9-6-14.1-9.4-22.6-9.4zM544 128.2v223.9c0 17.7 14.3 32 32 32h64V128.2h-96zm48 223.9c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zM0 384h64c17.7 0 32-14.3 32-32V128.2H0V384zm48-63.9c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16c0-8.9 7.2-16 16-16zm435.9 18.6L334.6 217.5l-30 27.5c-29.7 27.1-75.2 24.5-101.7-4.4-26.9-29.4-24.8-74.9 4.4-101.7L289.1 64h-83.8c-8.5 0-16.6 3.4-22.6 9.4L128 128v223.9h18.3l90.5 81.9c27.4 22.3 67.7 18.1 90-9.3l.2-.2 17.9 15.5c15.9 13 39.4 10.5 52.3-5.4l31.4-38.6 5.4 4.4c13.7 11.1 33.9 9.1 45-4.7l9.5-11.7c11.2-13.8 9.1-33.9-4.6-45.1z\"},child:[]}]})(e)}function FP(e){return Je({tag:\"svg\",attr:{viewBox:\"0 0 576 512\"},child:[{tag:\"path\",attr:{d:\"M280.37 148.26L96 300.11V464a16 16 0 0 0 16 16l112.06-.29a16 16 0 0 0 15.92-16V368a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v95.64a16 16 0 0 0 16 16.05L464 480a16 16 0 0 0 16-16V300L295.67 148.26a12.19 12.19 0 0 0-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 0 0-12-12h-56a12 12 0 0 0-12 12v72.61L318.47 43a48 48 0 0 0-61 0L4.34 251.47a12 12 0 0 0-1.6 16.9l25.5 31A12 12 0 0 0 45.15 301l235.22-193.74a12.19 12.19 0 0 1 15.3 0L530.9 301a12 12 0 0 0 16.9-1.6l25.5-31a12 12 0 0 0-1.7-16.93z\"},child:[]}]})(e)}function IP(e){return Je({tag:\"svg\",attr:{viewBox:\"0 0 512 512\"},child:[{tag:\"path\",attr:{d:\"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z\"},child:[]}]})(e)}function BP(e){return Je({tag:\"svg\",attr:{viewBox:\"0 0 512 512\"},child:[{tag:\"path\",attr:{d:\"M493.4 24.6l-104-24c-11.3-2.6-22.9 3.3-27.5 13.9l-48 112c-4.2 9.8-1.4 21.3 6.9 28l60.6 49.6c-36 76.7-98.9 140.5-177.2 177.2l-49.6-60.6c-6.8-8.3-18.2-11.1-28-6.9l-112 48C3.9 366.5-2 378.1.6 389.4l24 104C27.1 504.2 36.7 512 48 512c256.1 0 464-207.5 464-464 0-11.2-7.7-20.9-18.6-23.4z\"},child:[]}]})(e)}const UP=()=>{const[e,t]=x.useState(!1),{scrollY:n}=I0(),[r,i]=x.useState(!1),o=Rd(n,[0,100],[\"rgba(0, 0, 0, 0.5)\",\"rgba(255, 255, 255, 0.95)\"]),s=Rd(n,[0,100],[\"rgba(255, 255, 255, 1)\",\"rgba(51, 51, 51, 1)\"]);QS(n,\"change\",u=>{i(u>50)}),x.useEffect(()=>{t(!1),window.scrollTo(0,0)},[location]);const l=[{id:1,path:\"/\",label:\"Home\",icon:P.jsx(FP,{className:\"text-xl\"})},{id:2,path:\"/about\",label:\"About\",icon:P.jsx(IP,{className:\"text-xl\"})},{id:3,path:\"/services\",label:\"Services\",icon:P.jsx(zP,{className:\"text-xl\"})},{id:4,path:\"/contact\",label:\"Contact\",icon:P.jsx(BP,{className:\"text-xl\"})}],a=()=>{window.scrollTo({top:0,behavior:\"smooth\"})};return P.jsxs(ye.header,{className:\"fixed top-0 left-0 right-0 z-50\",style:{backgroundColor:o},initial:{y:-100},animate:{y:0},transition:{duration:.5},children:[P.jsxs(\"div\",{className:\"container mx-auto px-4 py-4 flex items-center\",children:[P.jsx(Qe,{to:\"/\",className:\"text-2xl font-bold font-serif\",onClick:a,children:P.jsx(ye.span,{style:{color:s},children:\"PA Real Estate Support\"})}),P.jsx(\"nav\",{className:\"hidden lg:flex flex-grow justify-center\",children:P.jsx(\"ul\",{className:\"flex space-x-8\",children:l.map((u,c)=>P.jsx(ye.li,{whileHover:{scale:1.1},whileTap:{scale:.95},children:P.jsxs(Qe,{to:u.path,className:\"flex flex-col items-center transition-all duration-300 hover:text-blue-400\",onClick:a,children:[P.jsx(ye.div,{className:\"mb-1\",style:{color:s},whileHover:{y:-2},children:u.icon}),P.jsx(ye.span,{style:{color:s},className:\"text-sm\",children:u.label})]})},c))})}),P.jsx(\"div\",{className:\"hidden lg:block\",children:P.jsx(ye.div,{whileHover:{scale:1.05},whileTap:{scale:.95},children:P.jsx(Qe,{to:\"/contact\",className:\"bg-blue-500 text-white px-6 py-2 rounded-full hover:bg-blue-600 transition-all duration-300 shadow-lg hover:shadow-xl\",onClick:a,children:\"Get Started\"})})}),P.jsx(\"button\",{className:\"lg:hidden ml-auto\",onClick:()=>t(!e),children:P.jsx(ye.span,{style:{color:s},children:e?P.jsx(LP,{size:24}):P.jsx(EP,{size:24})})})]}),e&&P.jsx(ye.div,{className:\"lg:hidden bg-white py-4\",initial:{opacity:0,y:-20},animate:{opacity:1,y:0},exit:{opacity:0,y:-20},children:P.jsxs(\"ul\",{className:\"flex flex-col items-center space-y-4\",children:[l.map((u,c)=>P.jsx(ye.li,{whileHover:{scale:1.05},whileTap:{scale:.95},children:P.jsxs(Qe,{to:u.path,className:\"flex items-center text-primary hover:text-blue-500 transition-all duration-300\",onClick:a,children:[P.jsx(\"span\",{className:\"mr-2\",children:u.icon}),u.label]})},c)),P.jsx(Qe,{to:\"/contact\",className:\"bg-blue-500 text-white px-6 py-2 rounded-full hover:bg-blue-600 transition-all duration-300\",onClick:a,children:\"Get Started\"})]})})]})},$P=()=>{const e=()=>{window.scrollTo({top:0,behavior:\"smooth\"})};return P.jsxs(\"footer\",{className:\"bg-gradient-to-b from-gray-800 to-gray-900 text-white py-12 relative overflow-hidden\",children:[P.jsxs(\"div\",{className:\"container\",children:[P.jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-8\",children:[P.jsxs(\"div\",{children:[P.jsx(\"h3\",{className:\"text-xl font-semibold mb-4 font-serif\",children:\"PA Real Estate Support Services\"}),P.jsx(\"p\",{className:\"mb-4\",children:\"Your trusted partner in real estate transaction coordination in the Pocono Mountains.\"})]}),P.jsxs(\"div\",{children:[P.jsx(\"h4\",{className:\"text-lg font-semibold mb-4 font-serif\",children:\"Quick Links\"}),P.jsxs(\"ul\",{className:\"space-y-2\",children:[P.jsx(\"li\",{children:P.jsx(Qe,{to:\"/\",className:\"hover:text-primary transition duration-300\",onClick:e,children:\"Home\"})}),P.jsx(\"li\",{children:P.jsx(Qe,{to:\"/about\",className:\"hover:text-primary transition duration-300\",onClick:e,children:\"About Us\"})}),P.jsx(\"li\",{children:P.jsx(Qe,{to:\"/services\",className:\"hover:text-primary transition duration-300\",onClick:e,children:\"Services\"})}),P.jsx(\"li\",{children:P.jsx(Qe,{to:\"/contact\",className:\"hover:text-primary transition duration-300\",onClick:e,children:\"Contact\"})})]})]}),P.jsxs(\"div\",{children:[P.jsx(\"h4\",{className:\"text-lg font-semibold mb-4 font-serif\",children:\"Legal\"}),P.jsxs(\"ul\",{className:\"space-y-2\",children:[P.jsx(\"li\",{children:P.jsx(Qe,{to:\"/terms\",className:\"hover:text-primary transition duration-300\",onClick:e,children:\"Terms of Service\"})}),P.jsx(\"li\",{children:P.jsx(Qe,{to:\"/privacy\",className:\"hover:text-primary transition duration-300\",onClick:e,children:\"Privacy Policy\"})})]})]}),P.jsxs(\"div\",{children:[P.jsx(\"h4\",{className:\"text-lg font-semibold mb-4 font-serif\",children:\"Follow Us\"}),P.jsx(\"div\",{className:\"flex space-x-4\"})]})]}),P.jsx(\"div\",{className:\"mt-8 pt-8 border-t border-gray-700 text-center\",children:P.jsxs(\"p\",{children:[\"© \",new Date().getFullYear(),\" PA Real Estate Support Services LLC. All rights reserved.\"]})})]}),P.jsx(ye.div,{className:\"absolute inset-0 bg-gradient-to-b from-transparent to-primary opacity-10\",initial:{y:\"100%\"},animate:{y:0},transition:{duration:20,repeat:1/0,repeatType:\"reverse\",ease:\"linear\"}})]})},et=({children:e})=>P.jsx(ye.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:-20},transition:{duration:.3},children:e}),WP=()=>{const[e,t]=x.useState(!1),[n,r]=x.useState(!1),[i,o]=x.useState(16),s=()=>t(!e),l=()=>{r(!n),document.body.classList.toggle(\"high-contrast\")},a=()=>o(c=>Math.min(c+2,24)),u=()=>o(c=>Math.max(c-2,12));return pt.useEffect(()=>{document.documentElement.style.fontSize=`${i}px`},[i]),P.jsxs(\"div\",{className:\"fixed bottom-4 left-4 z-50\",children:[P.jsx(ye.button,{className:\"bg-primary text-white p-2 rounded-full shadow-lg\",onClick:s,whileHover:{scale:1.1},whileTap:{scale:.9},children:\"A11y\"}),e&&P.jsxs(ye.div,{className:\"absolute bottom-12 left-0 bg-white p-4 rounded-lg shadow-lg\",initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:20},children:[P.jsxs(\"button\",{onClick:l,className:\"block mb-2\",children:[n?P.jsx(kP,{}):P.jsx(TP,{}),\" Toggle High Contrast\"]}),P.jsxs(\"div\",{className:\"flex items-center mb-2\",children:[P.jsx(\"button\",{onClick:u,children:P.jsx(AP,{})}),P.jsx(\"span\",{className:\"mx-2\",children:\"Font Size\"}),P.jsx(\"button\",{onClick:a,children:P.jsx(RP,{})})]})]})]})},HP=()=>{const{scrollYProgress:e}=I0();return P.jsx(ye.div,{className:\"fixed top-0 left-0 right-0 h-1 bg-primary z-50\",style:{scaleX:e}})},KP=({rows:e=5,className:t=\"\"})=>{const n=Array.from({length:e},(r,i)=>`loading-row-${i}`);return P.jsx(\"div\",{className:`space-y-4 ${t}`,children:n.map(r=>P.jsx(ye.div,{className:\"h-4 bg-gray-200 rounded animate-pulse\",initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},transition:{duration:.2}},r))})},GP=x.lazy(()=>at(()=>import(\"./Home-LjjMtf8L.js\"),__vite__mapDeps([0,1,2,3,4,5,6]))),QP=x.lazy(()=>at(()=>import(\"./AboutUs-Bwlags-U.js\"),__vite__mapDeps([7,8,9]))),YP=x.lazy(()=>at(()=>import(\"./Services-BQV9mYGG.js\"),__vite__mapDeps([10,1,2,3,6]))),XP=x.lazy(()=>at(()=>import(\"./Testimonials-BXXp8lg0.js\"),__vite__mapDeps([11,8,4]))),ZP=x.lazy(()=>at(()=>import(\"./Blog-BkyKB4Ux.js\"),__vite__mapDeps([12,8,9]))),bP=x.lazy(()=>at(()=>import(\"./BlogPost-Bwl3Gkua.js\"),__vite__mapDeps([13,8,9]))),JP=x.lazy(()=>at(()=>import(\"./Resources-CQBByDHe.js\"),__vite__mapDeps([14,8,9,2,15]))),qP=x.lazy(()=>at(()=>import(\"./Contact-cCiLj5hT.js\"),__vite__mapDeps([16,5,3,6]))),eC=x.lazy(()=>at(()=>import(\"./WorkWithUs-DFrYzmf0.js\"),__vite__mapDeps([17,8,6,15]))),tC=x.lazy(()=>at(()=>import(\"./FAQ-CYSXS3V9.js\"),__vite__mapDeps([18,8]))),nC=()=>{const e=yi();return P.jsx(US,{mode:\"wait\",children:P.jsx(x.Suspense,{fallback:P.jsx(KP,{rows:5,className:\"p-8\"}),children:P.jsxs(l1,{location:e,children:[P.jsx(We,{path:\"/\",element:P.jsx(et,{children:P.jsx(GP,{})})}),P.jsx(We,{path:\"/about\",element:P.jsx(et,{children:P.jsx(QP,{})})}),P.jsx(We,{path:\"/services\",element:P.jsx(et,{children:P.jsx(YP,{})})}),P.jsx(We,{path:\"/testimonials\",element:P.jsx(et,{children:P.jsx(XP,{})})}),P.jsx(We,{path:\"/blog\",element:P.jsx(et,{children:P.jsx(ZP,{})})}),P.jsx(We,{path:\"/blog/:slug\",element:P.jsx(et,{children:P.jsx(bP,{})})}),P.jsx(We,{path:\"/resources\",element:P.jsx(et,{children:P.jsx(JP,{})})}),P.jsx(We,{path:\"/contact\",element:P.jsx(et,{children:P.jsx(qP,{})})}),P.jsx(We,{path:\"/work-with-us\",element:P.jsx(et,{children:P.jsx(eC,{})})}),P.jsx(We,{path:\"/faq\",element:P.jsx(et,{children:P.jsx(tC,{})})})]},e.pathname)})})};function rC(){return P.jsx(p1,{children:P.jsxs(\"div\",{className:\"min-h-screen flex flex-col font-sans\",children:[P.jsx(HP,{}),P.jsx(UP,{}),P.jsx(\"main\",{className:\"flex-grow\",children:P.jsx(nC,{})}),P.jsx($P,{}),P.jsx(WP,{})]})})}Zp(document.getElementById(\"root\")).render(P.jsx(x.StrictMode,{children:P.jsx(rC,{})}));export{US as A,fC as F,Je as G,Qe as L,Rd as a,BP as b,dC as c,aC as d,uC as e,lC as f,hC as g,cC as h,fr as i,P as j,iC as k,ye as m,x as r,I0 as u};\n"
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 100567
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 11,
          "receive": 7
        },
        "time": 18,
        "_securityState": "insecure",
        "serverIPAddress": "127.0.0.1",
        "connection": "4173",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.138-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "http://localhost:4173/assets/index-Db97OO48.css",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Host",
              "value": "localhost:4173"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "text/css,*/*;q=0.1"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "http://localhost:4173/about"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "style"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Priority",
              "value": "u=2"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 476
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Content-Type",
              "value": "text/css"
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 24 Oct 2024 14:35:31 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"29981-1729780531829\""
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Date",
              "value": "Thu, 24 Oct 2024 14:38:16 GMT"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "name": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "text/css",
            "size": 29981,
            "text": "@import\"https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Merriweather:wght@400;700&display=swap\";*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: \"\"}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:Inter,sans-serif;font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}.container{width:100%}@media (min-width: 640px){.container{max-width:640px}}@media (min-width: 768px){.container{max-width:768px}}@media (min-width: 1024px){.container{max-width:1024px}}@media (min-width: 1280px){.container{max-width:1280px}}@media (min-width: 1536px){.container{max-width:1536px}}.visible{visibility:visible}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.sticky{position:sticky}.inset-0{top:0;right:0;bottom:0;left:0}.bottom-0{bottom:0}.bottom-12{bottom:3rem}.bottom-4{bottom:1rem}.left-0{left:0}.left-1\\/2{left:50%}.left-4{left:1rem}.right-0{right:0}.right-3{right:.75rem}.right-4{right:1rem}.top-0{top:0}.top-1\\/2{top:50%}.z-10{z-index:10}.z-50{z-index:50}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-auto{margin-left:auto;margin-right:auto}.mb-0\\.5{margin-bottom:.125rem}.mb-1{margin-bottom:.25rem}.mb-12{margin-bottom:3rem}.mb-16{margin-bottom:4rem}.mb-2{margin-bottom:.5rem}.mb-3{margin-bottom:.75rem}.mb-4{margin-bottom:1rem}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.ml-12{margin-left:3rem}.ml-2{margin-left:.5rem}.ml-4{margin-left:1rem}.ml-auto{margin-left:auto}.mr-2{margin-right:.5rem}.mr-4{margin-right:1rem}.mt-1{margin-top:.25rem}.mt-1\\.5{margin-top:.375rem}.mt-12{margin-top:3rem}.mt-16{margin-top:4rem}.mt-2{margin-top:.5rem}.mt-4{margin-top:1rem}.mt-8{margin-top:2rem}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.flex{display:flex}.inline-flex{display:inline-flex}.grid{display:grid}.hidden{display:none}.h-0\\.5{height:.125rem}.h-1{height:.25rem}.h-10{height:2.5rem}.h-12{height:3rem}.h-16{height:4rem}.h-2{height:.5rem}.h-20{height:5rem}.h-3{height:.75rem}.h-4{height:1rem}.h-48{height:12rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.h-64{height:16rem}.h-8{height:2rem}.h-80{height:20rem}.h-\\[400px\\]{height:400px}.h-auto{height:auto}.h-full{height:100%}.h-screen{height:100vh}.min-h-screen{min-height:100vh}.w-0\\.5{width:.125rem}.w-10{width:2.5rem}.w-12{width:3rem}.w-16{width:4rem}.w-2{width:.5rem}.w-2\\/12{width:16.666667%}.w-20{width:5rem}.w-3{width:.75rem}.w-5{width:1.25rem}.w-5\\/12{width:41.666667%}.w-6{width:1.5rem}.w-64{width:16rem}.w-8{width:2rem}.w-80{width:20rem}.w-auto{width:auto}.w-full{width:100%}.max-w-3xl{max-width:48rem}.max-w-4xl{max-width:56rem}.max-w-5xl{max-width:64rem}.max-w-7xl{max-width:80rem}.max-w-md{max-width:28rem}.flex-shrink-0{flex-shrink:0}.flex-grow,.grow{flex-grow:1}.origin-left{transform-origin:left}.-translate-x-1\\/2{--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-y-1\\/2{--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-x-2{--tw-translate-x: .5rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-y-2{--tw-translate-y: .5rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.scale-x-0{--tw-scale-x: 0;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.scale-x-100{--tw-scale-x: 1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.animate-pulse{animation:pulse 2s cubic-bezier(.4,0,.6,1) infinite}.list-inside{list-style-position:inside}.list-disc{list-style-type:disc}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.items-start{align-items:flex-start}.items-center{align-items:center}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-12{gap:3rem}.gap-2{gap:.5rem}.gap-4{gap:1rem}.gap-8{gap:2rem}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-8>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2rem * var(--tw-space-x-reverse));margin-left:calc(2rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-12>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(3rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(3rem * var(--tw-space-y-reverse))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem * var(--tw-space-y-reverse))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.5rem * var(--tw-space-y-reverse))}.space-y-8>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2rem * var(--tw-space-y-reverse))}.overflow-hidden{overflow:hidden}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:.5rem}.rounded-xl{border-radius:.75rem}.border{border-width:1px}.border-2{border-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-gray-200{--tw-border-opacity: 1;border-color:rgb(229 231 235 / var(--tw-border-opacity))}.border-gray-300{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity))}.border-gray-700{--tw-border-opacity: 1;border-color:rgb(55 65 81 / var(--tw-border-opacity))}.border-indigo-600{--tw-border-opacity: 1;border-color:rgb(79 70 229 / var(--tw-border-opacity))}.bg-black{--tw-bg-opacity: 1;background-color:rgb(0 0 0 / var(--tw-bg-opacity))}.bg-blue-500{--tw-bg-opacity: 1;background-color:rgb(59 130 246 / var(--tw-bg-opacity))}.bg-blue-600{--tw-bg-opacity: 1;background-color:rgb(37 99 235 / var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity: 1;background-color:rgb(229 231 235 / var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity))}.bg-gray-light{--tw-bg-opacity: 1;background-color:rgb(245 245 245 / var(--tw-bg-opacity))}.bg-indigo-100{--tw-bg-opacity: 1;background-color:rgb(224 231 255 / var(--tw-bg-opacity))}.bg-indigo-50{--tw-bg-opacity: 1;background-color:rgb(238 242 255 / var(--tw-bg-opacity))}.bg-indigo-600{--tw-bg-opacity: 1;background-color:rgb(79 70 229 / var(--tw-bg-opacity))}.bg-indigo-900{--tw-bg-opacity: 1;background-color:rgb(49 46 129 / var(--tw-bg-opacity))}.bg-primary{--tw-bg-opacity: 1;background-color:rgb(51 51 51 / var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-white\\/80{background-color:#fffc}.bg-opacity-10{--tw-bg-opacity: .1}.bg-opacity-50{--tw-bg-opacity: .5}.bg-gradient-to-b{background-image:linear-gradient(to bottom,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-t{background-image:linear-gradient(to top,var(--tw-gradient-stops))}.from-black\\/70{--tw-gradient-from: rgb(0 0 0 / .7) var(--tw-gradient-from-position);--tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-blue-300{--tw-gradient-from: #93c5fd var(--tw-gradient-from-position);--tw-gradient-to: rgb(147 197 253 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-blue-500{--tw-gradient-from: #3b82f6 var(--tw-gradient-from-position);--tw-gradient-to: rgb(59 130 246 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-gray-800{--tw-gradient-from: #1f2937 var(--tw-gradient-from-position);--tw-gradient-to: rgb(31 41 55 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-indigo-900{--tw-gradient-from: #312e81 var(--tw-gradient-from-position);--tw-gradient-to: rgb(49 46 129 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-primary{--tw-gradient-from: #333333 var(--tw-gradient-from-position);--tw-gradient-to: rgb(51 51 51 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-transparent{--tw-gradient-from: transparent var(--tw-gradient-from-position);--tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-white{--tw-gradient-from: #fff var(--tw-gradient-from-position);--tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.to-gray-50{--tw-gradient-to: #f9fafb var(--tw-gradient-to-position)}.to-gray-900{--tw-gradient-to: #111827 var(--tw-gradient-to-position)}.to-gray-dark{--tw-gradient-to: #666666 var(--tw-gradient-to-position)}.to-indigo-800{--tw-gradient-to: #3730a3 var(--tw-gradient-to-position)}.to-primary{--tw-gradient-to: #333333 var(--tw-gradient-to-position)}.to-purple-300{--tw-gradient-to: #d8b4fe var(--tw-gradient-to-position)}.to-purple-600{--tw-gradient-to: #9333ea var(--tw-gradient-to-position)}.to-transparent{--tw-gradient-to: transparent var(--tw-gradient-to-position)}.bg-clip-text{-webkit-background-clip:text;background-clip:text}.fill-current{fill:currentColor}.object-cover{-o-object-fit:cover;object-fit:cover}.p-2{padding:.5rem}.p-3{padding:.75rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-8{padding:2rem}.px-4{padding-left:1rem;padding-right:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.px-8{padding-left:2rem;padding-right:2rem}.py-12{padding-top:3rem;padding-bottom:3rem}.py-16{padding-top:4rem;padding-bottom:4rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-20{padding-top:5rem;padding-bottom:5rem}.py-24{padding-top:6rem;padding-bottom:6rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.py-4{padding-top:1rem;padding-bottom:1rem}.pb-4{padding-bottom:1rem}.pl-6{padding-left:1.5rem}.pt-8{padding-top:2rem}.text-left{text-align:left}.text-center{text-align:center}.font-sans{font-family:Inter,sans-serif}.font-serif{font-family:Merriweather,serif}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-5xl{font-size:3rem;line-height:1}.text-h2{font-size:2.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-extrabold{font-weight:800}.font-medium{font-weight:500}.font-semibold{font-weight:600}.italic{font-style:italic}.leading-relaxed{line-height:1.625}.text-blue-500{--tw-text-opacity: 1;color:rgb(59 130 246 / var(--tw-text-opacity))}.text-blue-600{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity: 1;color:rgb(29 78 216 / var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity))}.text-gray-50{--tw-text-opacity: 1;color:rgb(249 250 251 / var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity))}.text-green-500{--tw-text-opacity: 1;color:rgb(34 197 94 / var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity: 1;color:rgb(79 70 229 / var(--tw-text-opacity))}.text-indigo-900{--tw-text-opacity: 1;color:rgb(49 46 129 / var(--tw-text-opacity))}.text-primary{--tw-text-opacity: 1;color:rgb(51 51 51 / var(--tw-text-opacity))}.text-transparent{color:transparent}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.text-white\\/90{color:#ffffffe6}.text-yellow-400{--tw-text-opacity: 1;color:rgb(250 204 21 / var(--tw-text-opacity))}.opacity-0{opacity:0}.opacity-10{opacity:.1}.opacity-100{opacity:1}.opacity-90{opacity:.9}.shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / .1), 0 4px 6px -4px rgb(0 0 0 / .1);--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-md{--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-xl{--tw-shadow: 0 20px 25px -5px rgb(0 0 0 / .1), 0 8px 10px -6px rgb(0 0 0 / .1);--tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-colors{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-shadow{transition-property:box-shadow;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-transform{transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.duration-300{transition-duration:.3s}.duration-500{transition-duration:.5s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}body{font-family:Inter,sans-serif;color:#333;line-height:1.5;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.hero-section{background-image:linear-gradient(#00000080,#00000080);background-size:cover;background-position:center;position:relative}.hero-section:before{content:\"\";position:absolute;top:0;left:0;right:0;bottom:0;background-image:url(https://images.unsplash.com/photo-1600585154340-be6161a56a0c?ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80);background-size:cover;background-position:center;opacity:0;transition:opacity .5s ease;z-index:-1}.hero-section.loaded:before{opacity:1}.section-title{position:relative;margin-bottom:2rem;display:inline-block;font-family:Merriweather,serif;font-size:2.25rem;line-height:2.5rem;font-weight:700;perspective:1000px}.section-title:after{content:\"\";position:absolute;bottom:0;left:0;height:.125rem;width:0px;--tw-bg-opacity: 1;background-color:rgb(51 51 51 / var(--tw-bg-opacity));transform-origin:left;transition:width .3s ease,transform .3s ease}.section-title:hover:after{width:100%;transform:scaleX(1)}@keyframes pulse{50%{opacity:.5}}.skeleton{animation:pulse 2s cubic-bezier(.4,0,.6,1) infinite;border-radius:.25rem;--tw-bg-opacity: 1;background-color:rgb(229 231 235 / var(--tw-bg-opacity));background:linear-gradient(90deg,#e5e7eb99 25%,#e5e7ebe6,#e5e7eb99 75%);background-size:200% 100%;animation:shimmer 1.5s infinite}@keyframes shimmer{0%{background-position:200% 0}to{background-position:-200% 0}}.btn{position:relative;display:inline-block;overflow:hidden;padding:.75rem 2rem;font-weight:600;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.3s;transform:translateZ(0)}.btn-primary{--tw-bg-opacity: 1;background-color:rgb(51 51 51 / var(--tw-bg-opacity));--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity));box-shadow:0 4px 6px #0000001a}.btn-primary:hover{--tw-bg-opacity: .9;transform:translateY(-2px);box-shadow:0 6px 8px #00000026}.btn-primary:active{transform:translateY(0)}.btn-secondary{border-width:1px;--tw-border-opacity: 1;border-color:rgb(51 51 51 / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity));--tw-text-opacity: 1;color:rgb(51 51 51 / var(--tw-text-opacity));box-shadow:0 4px 6px #0000001a}.btn-secondary:hover{--tw-bg-opacity: 1;background-color:rgb(51 51 51 / var(--tw-bg-opacity));--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity));transform:translateY(-2px);box-shadow:0 6px 8px #00000026}.hover-lift{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.3s;transition-timing-function:cubic-bezier(0,0,.2,1);transform:perspective(1000px) translateZ(0);backface-visibility:hidden}.hover-lift:hover{transform:perspective(1000px) translateZ(20px) translateY(-5px);box-shadow:0 10px 20px #0000001a}html{scroll-behavior:smooth;scroll-padding-top:2rem}:focus-visible{outline:2px solid transparent;outline-offset:2px;--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000);--tw-ring-opacity: 1;--tw-ring-color: rgb(51 51 51 / var(--tw-ring-opacity));--tw-ring-offset-width: 2px}.container{margin-left:auto;margin-right:auto;max-width:80rem;padding-left:1rem;padding-right:1rem}@media (min-width: 640px){.container{padding-left:1.5rem;padding-right:1.5rem}}@media (min-width: 1024px){.container{padding-left:2rem;padding-right:2rem}}.text-shadow{text-shadow:2px 2px 4px rgba(0,0,0,.5)}.text-shadow-sm{text-shadow:1px 1px 2px rgba(0,0,0,.5)}.text-shadow-lg{text-shadow:4px 4px 8px rgba(0,0,0,.5)}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes slideUp{0%{transform:translateY(20px);opacity:0}to{transform:translateY(0);opacity:1}}.fade-in{animation:fadeIn .5s ease-out}.slide-up{animation:slideUp .5s ease-out}@media (prefers-reduced-motion: reduce){*{animation-duration:.01ms!important;animation-iteration-count:1!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}@media (min-width: 640px){.section-title{font-size:3rem;line-height:1}.section-subtitle{font-size:1.5rem;line-height:2rem}}@media print{.btn,.hover-lift{transform:none!important;box-shadow:none!important}.hero-section:before{display:none}}.last\\:border-0:last-child{border-width:0px}.hover\\:bg-blue-600:hover{--tw-bg-opacity: 1;background-color:rgb(37 99 235 / var(--tw-bg-opacity))}.hover\\:bg-gray-100:hover{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.hover\\:bg-gray-200:hover{--tw-bg-opacity: 1;background-color:rgb(229 231 235 / var(--tw-bg-opacity))}.hover\\:bg-gray-50:hover{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity))}.hover\\:bg-indigo-50:hover{--tw-bg-opacity: 1;background-color:rgb(238 242 255 / var(--tw-bg-opacity))}.hover\\:bg-indigo-700:hover{--tw-bg-opacity: 1;background-color:rgb(67 56 202 / var(--tw-bg-opacity))}.hover\\:bg-white:hover{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.hover\\:bg-opacity-90:hover{--tw-bg-opacity: .9}.hover\\:text-blue-400:hover{--tw-text-opacity: 1;color:rgb(96 165 250 / var(--tw-text-opacity))}.hover\\:text-blue-500:hover{--tw-text-opacity: 1;color:rgb(59 130 246 / var(--tw-text-opacity))}.hover\\:text-blue-700:hover{--tw-text-opacity: 1;color:rgb(29 78 216 / var(--tw-text-opacity))}.hover\\:text-indigo-600:hover{--tw-text-opacity: 1;color:rgb(79 70 229 / var(--tw-text-opacity))}.hover\\:text-primary:hover{--tw-text-opacity: 1;color:rgb(51 51 51 / var(--tw-text-opacity))}.hover\\:shadow-lg:hover{--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / .1), 0 4px 6px -4px rgb(0 0 0 / .1);--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.hover\\:shadow-xl:hover{--tw-shadow: 0 20px 25px -5px rgb(0 0 0 / .1), 0 8px 10px -6px rgb(0 0 0 / .1);--tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-500:focus{--tw-border-opacity: 1;border-color:rgb(99 102 241 / var(--tw-border-opacity))}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-2:focus{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus\\:ring-indigo-500:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(99 102 241 / var(--tw-ring-opacity))}.focus\\:ring-primary:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(51 51 51 / var(--tw-ring-opacity))}.focus\\:ring-offset-2:focus{--tw-ring-offset-width: 2px}.group:hover .group-hover\\:scale-x-100{--tw-scale-x: 1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@media (min-width: 640px){.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.sm\\:flex-row{flex-direction:row}.sm\\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\\:text-4xl{font-size:2.25rem;line-height:2.5rem}}@media (min-width: 768px){.md\\:col-span-2{grid-column:span 2 / span 2}.md\\:col-span-3{grid-column:span 3 / span 3}.md\\:mb-0{margin-bottom:0}.md\\:mr-12{margin-right:3rem}.md\\:flex{display:flex}.md\\:hidden{display:none}.md\\:w-2\\/3{width:66.666667%}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.md\\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.md\\:grid-cols-5{grid-template-columns:repeat(5,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:items-start{align-items:flex-start}.md\\:space-x-12>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(3rem * var(--tw-space-x-reverse));margin-left:calc(3rem * calc(1 - var(--tw-space-x-reverse)))}.md\\:space-y-0>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(0px * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0px * var(--tw-space-y-reverse))}.md\\:text-5xl{font-size:3rem;line-height:1}.md\\:text-6xl{font-size:3.75rem;line-height:1}}@media (min-width: 1024px){.lg\\:block{display:block}.lg\\:flex{display:flex}.lg\\:hidden{display:none}.lg\\:w-1\\/3{width:33.333333%}.lg\\:w-2\\/3{width:66.666667%}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:px-8{padding-left:2rem;padding-right:2rem}}\n"
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 5846
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 10,
          "receive": 0
        },
        "time": 10,
        "_securityState": "insecure",
        "serverIPAddress": "127.0.0.1",
        "connection": "4173",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.164-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Merriweather:wght@400;700&display=swap",
          "httpVersion": "",
          "headers": [
            {
              "name": "Host",
              "value": "fonts.googleapis.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "text/css,*/*;q=0.1"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "http://localhost:4173/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "style"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "cross-site"
            },
            {
              "name": "Priority",
              "value": "u=2"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [
            {
              "name": "family",
              "value": "Inter:wght@400;600;700"
            },
            {
              "name": "family",
              "value": "Merriweather:wght@400;700"
            },
            {
              "name": "display",
              "value": "swap"
            }
          ],
          "headersSize": 534
        },
        "response": {
          "status": 0,
          "statusText": "",
          "httpVersion": "",
          "headers": [
            {
              "name": "content-type",
              "value": "text/css; charset=utf-8"
            },
            {
              "name": "vary",
              "value": "Sec-Fetch-Dest, Sec-Fetch-Mode, Sec-Fetch-Site"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "link",
              "value": "<https://fonts.gstatic.com>; rel=preconnect; crossorigin"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000"
            },
            {
              "name": "expires",
              "value": "Thu, 24 Oct 2024 14:38:17 GMT"
            },
            {
              "name": "date",
              "value": "Thu, 24 Oct 2024 14:38:17 GMT"
            },
            {
              "name": "cache-control",
              "value": "private, max-age=86400"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "same-origin-allow-popups"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "server",
              "value": "ESF"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 11443,
            "text": "/* cyrillic-ext */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa2JL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa0ZL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* greek-ext */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa2ZL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+1F00-1FFF;\n}\n/* greek */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa1pL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa2pL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa25L7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa1ZL7W0I5nvwU.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n/* cyrillic-ext */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa2JL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa0ZL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* greek-ext */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa2ZL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+1F00-1FFF;\n}\n/* greek */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa1pL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa2pL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa25L7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa1ZL7W0I5nvwU.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n/* cyrillic-ext */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa2JL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa0ZL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* greek-ext */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa2ZL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+1F00-1FFF;\n}\n/* greek */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa1pL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa2pL7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa25L7W0I5nvwUgHU.woff2) format('woff2');\n  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa1ZL7W0I5nvwU.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n/* cyrillic-ext */\n@font-face {\n  font-family: 'Merriweather';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/merriweather/v30/u-440qyriQwlOrhSvowK_l5-cSZMZ-Y.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Merriweather';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/merriweather/v30/u-440qyriQwlOrhSvowK_l5-eCZMZ-Y.woff2) format('woff2');\n  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Merriweather';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/merriweather/v30/u-440qyriQwlOrhSvowK_l5-cyZMZ-Y.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Merriweather';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/merriweather/v30/u-440qyriQwlOrhSvowK_l5-ciZMZ-Y.woff2) format('woff2');\n  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Merriweather';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/merriweather/v30/u-440qyriQwlOrhSvowK_l5-fCZM.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n/* cyrillic-ext */\n@font-face {\n  font-family: 'Merriweather';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/merriweather/v30/u-4n0qyriQwlOrhSvowK_l52xwNZVcf6lvg.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Merriweather';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/merriweather/v30/u-4n0qyriQwlOrhSvowK_l52xwNZXMf6lvg.woff2) format('woff2');\n  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Merriweather';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/merriweather/v30/u-4n0qyriQwlOrhSvowK_l52xwNZV8f6lvg.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Merriweather';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/merriweather/v30/u-4n0qyriQwlOrhSvowK_l52xwNZVsf6lvg.woff2) format('woff2');\n  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Merriweather';\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/merriweather/v30/u-4n0qyriQwlOrhSvowK_l52xwNZWMf6.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n"
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": -1
        },
        "cache": {},
        "timings": {},
        "time": 0,
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.293-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "http://localhost:4173/assets/AboutUs-Bwlags-U.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Host",
              "value": "localhost:4173"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "http://localhost:4173/about"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Priority",
              "value": "u=1"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 463
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Content-Type",
              "value": "text/javascript"
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 24 Oct 2024 14:35:31 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"11144-1729780531829\""
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Date",
              "value": "Thu, 24 Oct 2024 14:38:16 GMT"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "name": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "text/javascript",
            "size": 11144,
            "text": "import{G as d,r as c,j as e,F as u,b as g,A as p,m,c as f,d as r,e as x,f as b,g as v,h as j}from\"./index-Bwf9VAWW.js\";import{P as y}from\"./PageHero-mt02hWK2.js\";import{u as w,A as l}from\"./AnimatedSection-BY5jeHuA.js\";function N(t){return d({tag:\"svg\",attr:{viewBox:\"0 0 512 512\"},child:[{tag:\"path\",attr:{d:\"M217.9 256L345 129c9.4-9.4 9.4-24.6 0-33.9-9.4-9.4-24.6-9.3-34 0L167 239c-9.1 9.1-9.3 23.7-.7 33.1L310.9 417c4.7 4.7 10.9 7 17 7s12.3-2.3 17-7c9.4-9.4 9.4-24.6 0-33.9L217.9 256z\"},child:[]}]})(t)}function A(t){return d({tag:\"svg\",attr:{viewBox:\"0 0 512 512\"},child:[{tag:\"path\",attr:{d:\"M294.1 256L167 129c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.3 34 0L345 239c9.1 9.1 9.3 23.7.7 33.1L201.1 417c-4.7 4.7-10.9 7-17 7s-12.3-2.3-17-7c-9.4-9.4-9.4-24.6 0-33.9l127-127.1z\"},child:[]}]})(t)}function P(t){return d({tag:\"svg\",attr:{viewBox:\"0 0 1024 1024\"},child:[{tag:\"path\",attr:{d:\"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 0 0 .6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0 0 46.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\"},child:[]}]})(t)}const E=()=>{const[t,i]=c.useState(0),s=[{id:1,name:\"John Doe\",position:\"Real Estate Agent\",review:\"Debbie's expertise and professionalism made my transactions seamless. She's become an invaluable partner in my business.\"},{id:2,name:\"Jane Smith\",position:\"Property Manager\",review:\"Working with Debbie transformed how I handle transactions. Her organizational skills are unmatched.\"},{id:3,name:\"Mike Johnson\",position:\"Home Buyer\",review:\"Debbie's personal attention to detail made my home-buying journey stress-free. She was there every step of the way.\"}],n=()=>{i(a=>(a+1)%s.length)},o=()=>{i(a=>(a-1+s.length)%s.length)};return e.jsx(\"div\",{className:\"bg-gray-50 py-16 px-4 sm:px-6 lg:px-8\",children:e.jsxs(\"div\",{className:\"max-w-7xl mx-auto\",children:[e.jsx(\"h2\",{className:\"text-3xl font-extrabold text-gray-900 sm:text-4xl text-center mb-12\",children:\"Meet Debbie O'Brien, Your Transaction Coordinator\"}),e.jsxs(\"div\",{className:\"flex flex-col md:flex-row items-center mb-16\",children:[e.jsx(\"img\",{src:\"/debbie_obrien_new.jpg\",alt:\"Debbie O'Brien\",className:\"w-64 h-64 rounded-full object-cover mb-8 md:mb-0 md:mr-12\"}),e.jsxs(\"div\",{className:\"md:w-2/3\",children:[e.jsx(\"p\",{className:\"text-lg text-gray-700 leading-relaxed\",children:\"With over 30 years of experience in the real estate industry, I founded PA Real Estate Support Services, LLC to provide dedicated transaction coordination for Keller Williams agents in the Pocono Mountains. My passion for efficient real estate processes, personal dedication to client satisfaction, and meticulous attention to detail have made me a trusted partner to real estate professionals throughout the region.\"}),e.jsxs(\"ul\",{className:\"list-disc pl-6 mt-4 text-gray-700\",children:[e.jsx(\"li\",{children:\"30+ years of experience in PA real estate\"}),e.jsx(\"li\",{children:\"Organized and detail-oriented\"}),e.jsx(\"li\",{children:\"Excellent at multi-tasking\"}),e.jsx(\"li\",{children:\"Works well with diverse cultures\"}),e.jsx(\"li\",{children:\"Handles public with confidence and sensitivity\"})]})]})]}),e.jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-5 gap-8\",children:[e.jsxs(\"div\",{className:\"md:col-span-3 bg-white shadow-xl rounded-lg p-8\",children:[e.jsx(\"h3\",{className:\"text-2xl font-bold text-gray-900 mb-6\",children:\"What My Clients Say\"}),e.jsxs(\"div\",{className:\"relative\",children:[e.jsx(\"div\",{className:\"overflow-hidden\",children:e.jsx(\"div\",{className:\"flex transition-transform duration-300 ease-in-out\",style:{transform:`translateX(-${t*100}%)`},children:s.map(a=>e.jsx(\"div\",{className:\"w-full flex-shrink-0 px-4\",children:e.jsxs(\"div\",{className:\"flex flex-col items-center text-center\",children:[e.jsxs(\"p\",{className:\"text-gray-600 italic mb-4\",children:['\"',a.review,'\"']}),e.jsx(\"p\",{className:\"font-semibold text-gray-800\",children:a.name}),e.jsx(\"p\",{className:\"text-gray-500\",children:a.position}),e.jsx(\"div\",{className:\"flex mt-2\",children:[...Array(5)].map((L,h)=>e.jsx(P,{className:\"text-yellow-400\"},h))})]})},a.id))})}),e.jsx(\"button\",{onClick:o,className:\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white rounded-full p-2 shadow-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\"aria-label\":\"Previous testimonial\",children:e.jsx(N,{className:\"text-gray-600\",size:24})}),e.jsx(\"button\",{onClick:n,className:\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white rounded-full p-2 shadow-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\"aria-label\":\"Next testimonial\",children:e.jsx(A,{className:\"text-gray-600\",size:24})})]})]}),e.jsxs(\"div\",{className:\"md:col-span-2 bg-white shadow-xl rounded-lg p-8\",children:[e.jsx(\"h3\",{className:\"text-2xl font-bold text-gray-900 mb-6\",children:\"Let's Connect\"}),e.jsxs(\"div\",{className:\"flex flex-col gap-4 mb-8\",children:[e.jsxs(\"a\",{href:\"mailto:debbie@parealestatesupport.com\",className:\"flex items-center text-gray-600 hover:text-indigo-600 transition-colors duration-300\",children:[e.jsx(u,{className:\"mr-2\"}),\"debbie@parealestatesupport.com\"]}),e.jsxs(\"a\",{href:\"tel:+5705884637\",className:\"flex items-center text-gray-600 hover:text-indigo-600 transition-colors duration-300\",children:[e.jsx(g,{className:\"mr-2\"}),\"(570) 588-4637\"]})]}),e.jsx(\"div\",{className:\"text-center\",children:e.jsx(\"button\",{className:\"bg-indigo-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-indigo-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",children:\"Schedule a Consultation\"})})]})]})]})})},C=t=>t.icon||e.jsx(r,{}),S=({event:t,index:i})=>{const[s,n]=w({triggerOnce:!0,threshold:.3}),o=i%2===0,a={hidden:{opacity:0,y:20},visible:{opacity:1,y:0,transition:{type:\"spring\",stiffness:100,damping:20,delay:i*.1}}};return e.jsxs(m.div,{ref:s,initial:\"hidden\",animate:n?\"visible\":\"hidden\",variants:a,className:`mb-2 flex justify-between items-center w-full ${o?\"flex-row\":\"flex-row-reverse\"}`,style:{marginTop:i>0?\"-2rem\":\"0\"},children:[e.jsx(\"div\",{className:\"w-5/12\"}),e.jsx(\"div\",{className:\"w-2/12 flex justify-center\",children:e.jsx(\"div\",{className:\"bg-gradient-to-r from-blue-500 to-purple-600 rounded-full h-10 w-10 flex items-center justify-center text-white text-lg shadow-lg z-10\",children:C(t)})}),e.jsxs(m.div,{className:\"w-5/12 bg-white p-3 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\",whileHover:{scale:1.02},children:[e.jsx(\"h3\",{className:\"text-md font-bold mb-0.5 text-blue-700\",children:t.title}),e.jsx(\"p\",{className:\"text-xs text-gray-600 mb-0.5 font-semibold\",children:t.date}),e.jsx(\"p\",{className:\"text-xs text-gray-700\",children:t.description})]})]})},k=()=>{const[t,i]=c.useState([]);return c.useEffect(()=>{(async()=>{try{i([{id:1,title:\"Graduated from Kittatinny Regional High School\",date:\"1984\",description:\"Hampton, NJ\",category:\"education\",icon:e.jsx(f,{})},{id:2,title:\"Closing Administrator at Associates Abstract, Inc.\",date:\"1985-1989\",description:\"Hawley, PA\",category:\"early career\",icon:e.jsx(r,{})},{id:3,title:\"Office Manager at MAC Mortgage Co., Inc.\",date:\"1989-1991\",description:\"Greentown, PA\",category:\"mortgage industry\",icon:e.jsx(x,{})},{id:4,title:\"Bookkeeper/Secretary at John C. Ernst Company\",date:\"1998-2000\",description:\"Dover, NJ\",category:\"diversifying experience\",icon:e.jsx(r,{})},{id:5,title:\"Office Manager at Pocono Builders Association\",date:\"2000-2005\",description:\"East Stroudsburg, PA\",category:\"real estate development\",icon:e.jsx(x,{})},{id:6,title:\"Obtained PA Real Estate License\",date:\"2005\",description:\"Pocono Real Estate Academy\",category:\"professional development\",icon:e.jsx(b,{})},{id:7,title:\"Closing Administrator at Fidelity Home Abstract, Inc.\",date:\"2005-2006\",description:\"East Stroudsburg, PA\",category:\"title industry\",icon:e.jsx(r,{})},{id:8,title:\"Transaction Coordinator, Compliance Review Officer, Assistant to Broker of Record at Keller Williams Real Estate\",date:\"2006-2013\",description:\"Stroudsburg, PA\",category:\"real estate brokerage\",icon:e.jsx(v,{})},{id:9,title:\"Owner/President, Transaction Coordinator at PA Real Estate Support Services, LLC\",date:\"2013-Present\",description:\"Bushkill, PA\",category:\"entrepreneurship\",icon:e.jsx(j,{})}])}catch(n){console.error(\"Error fetching events:\",n)}})()},[]),e.jsx(\"div\",{className:\"container mx-auto px-4 py-4\",children:e.jsxs(\"div\",{className:\"relative\",children:[e.jsx(\"div\",{className:\"absolute left-1/2 transform -translate-x-1/2 h-full w-0.5 bg-gradient-to-b from-blue-300 to-purple-300\"}),e.jsx(p,{children:t.map((s,n)=>e.jsx(S,{event:s,index:n},s.id))})]})})},R=()=>e.jsxs(\"div\",{className:\"bg-light-gray\",children:[e.jsx(y,{title:\"About PA Real Estate Support Services, LLC\",subtitle:\"Your Trusted Partner in Real Estate Transaction Coordination\",backgroundImage:\"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\",overlay:!0}),e.jsx(l,{className:\"py-16\",children:e.jsxs(\"div\",{className:\"container\",children:[e.jsx(\"h2\",{className:\"text-3xl font-bold mb-8 text-center\",children:\"Our Story\"}),e.jsx(\"p\",{className:\"text-lg mb-8\",children:\"PA Real Estate Support Services, LLC was founded with a vision to provide exceptional transaction coordination services to Keller Williams Agents and other real estate professionals in the Pocono Mountains of Pennsylvania. With over 30 years of experience in the real estate industry, we understand the unique challenges and opportunities in this beautiful region.\"}),e.jsx(\"p\",{className:\"text-lg mb-8\",children:\"Our mission is to streamline the real estate transaction process, allowing agents to focus on what they do best - building client relationships and closing deals. We take pride in our attention to detail, professionalism, and commitment to excellence in every transaction we handle.\"})]})}),e.jsx(E,{}),e.jsx(l,{className:\"py-16 bg-white\",children:e.jsxs(\"div\",{className:\"container\",children:[e.jsx(\"h2\",{className:\"text-3xl font-bold mb-8 text-center\",children:\"Professional Timeline\"}),e.jsx(k,{})]})}),e.jsx(l,{className:\"py-16\",children:e.jsxs(\"div\",{className:\"container\",children:[e.jsx(\"h2\",{className:\"text-3xl font-bold mb-8 text-center\",children:\"Our Commitment\"}),e.jsx(\"p\",{className:\"text-lg mb-8\",children:\"At PA Real Estate Support Services, we are committed to providing the highest level of service to our clients. We continuously update our knowledge and skills to stay ahead of industry trends and regulations, ensuring that we can offer the most effective and efficient transaction coordination services possible.\"}),e.jsx(\"p\",{className:\"text-lg\",children:\"Our goal is to be more than just a service provider - we aim to be a trusted partner in your real estate business, helping you achieve success and growth in the competitive Pocono Mountains market.\"})]})})]});export{R as default};\n"
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 4381
        },
        "cache": {},
        "timings": {
          "blocked": -1,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 34,
          "receive": 0
        },
        "time": 34,
        "_securityState": "insecure",
        "serverIPAddress": "127.0.0.1",
        "connection": "4173",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.294-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "http://localhost:4173/assets/PageHero-mt02hWK2.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Host",
              "value": "localhost:4173"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "http://localhost:4173/about"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Priority",
              "value": "u=1"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 464
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Content-Type",
              "value": "text/javascript"
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 24 Oct 2024 14:35:31 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"4792-1729780531831\""
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Date",
              "value": "Thu, 24 Oct 2024 14:38:16 GMT"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "name": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "text/javascript",
            "size": 4792,
            "text": "import{r as s,j as e,m as r}from\"./index-Bwf9VAWW.js\";const c=({src:a,alt:i,className:t=\"\",width:v,height:h})=>{const[o,n]=s.useState(!1),[g,d]=s.useState(!1);return s.useEffect(()=>{const l=new Image;l.src=a,l.onload=()=>n(!0),l.onerror=()=>d(!0)},[a]),g?e.jsx(\"div\",{className:`bg-gray-200 flex items-center justify-center ${t}`,style:{width:v,height:h},children:e.jsx(\"span\",{className:\"text-gray-400\",children:\"Image not available\"})}):e.jsxs(\"div\",{className:\"relative\",children:[!o&&e.jsx(\"div\",{className:`skeleton ${t}`,style:{width:v,height:h}}),e.jsx(\"img\",{src:a,alt:i,className:`${t} ${o?\"opacity-100\":\"opacity-0\"} transition-opacity duration-300`,width:v,height:h,loading:\"lazy\"})]})},m=({title:a,subtitle:i,type:t=\"default\"})=>{const v={default:\"linear-gradient(to right, #4338ca, #3730a3)\",services:\"linear-gradient(135deg, #4338ca 0%, #3730a3 100%)\",about:\"linear-gradient(135deg, #4338ca 0%, #312e81 100%)\",contact:\"linear-gradient(135deg, #3730a3 0%, #312e81 100%)\",blog:\"linear-gradient(135deg, #4338ca 0%, #1e1b4b 100%)\",resources:\"linear-gradient(135deg, #3730a3 0%, #1e1b4b 100%)\"},h={default:\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",services:\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",about:\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",contact:\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",blog:\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",resources:\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"};return e.jsxs(\"header\",{className:\"relative py-24 overflow-hidden\",style:{background:v[t],backgroundSize:\"cover\",backgroundPosition:\"center\"},\"aria-label\":`${a} page header`,children:[e.jsx(\"div\",{className:\"absolute inset-0 opacity-10\",style:{backgroundImage:`url(\"${h[t]}\")`,backgroundRepeat:\"repeat\"},\"aria-hidden\":\"true\"}),e.jsx(\"div\",{className:\"container mx-auto px-4 relative z-10\",children:e.jsxs(\"div\",{className:\"max-w-4xl mx-auto text-center\",children:[e.jsx(r.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.6},children:e.jsx(c,{src:\"/pa-real-estate-logo-new.png\",alt:\"PA Real Estate Support Services\",className:\"mx-auto mb-8 h-16 w-auto\"})}),e.jsx(r.h1,{className:\"text-4xl md:text-5xl font-bold text-white mb-4\",initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.6,delay:.2},children:a}),e.jsx(r.p,{className:\"text-xl text-white/90\",initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.6,delay:.3},children:i})]})}),e.jsx(\"div\",{className:\"absolute bottom-0 left-0 right-0\",\"aria-hidden\":\"true\",children:e.jsx(\"svg\",{className:\"w-full h-8 text-gray-50 fill-current\",viewBox:\"0 0 1200 120\",preserveAspectRatio:\"none\",children:e.jsx(\"path\",{d:\"M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z\"})})})]})};export{m as P};\n"
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 1715
        },
        "cache": {},
        "timings": {
          "blocked": -1,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 21,
          "receive": 0
        },
        "time": 21,
        "_securityState": "insecure",
        "serverIPAddress": "127.0.0.1",
        "connection": "4173",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.294-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "http://localhost:4173/assets/AnimatedSection-BY5jeHuA.js",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Host",
              "value": "localhost:4173"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "http://localhost:4173/about"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "script"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Priority",
              "value": "u=1"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 471
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Content-Type",
              "value": "text/javascript"
            },
            {
              "name": "Last-Modified",
              "value": "Thu, 24 Oct 2024 14:35:31 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"2207-1729780531831\""
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "Date",
              "value": "Thu, 24 Oct 2024 14:38:16 GMT"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "name": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "text/javascript",
            "size": 2207,
            "text": "import{r as v,j as I,m as V}from\"./index-Bwf9VAWW.js\";var w=new Map,b=new WeakMap,A=0,j=void 0;function O(e){return e?(b.has(e)||(A+=1,b.set(e,A.toString())),b.get(e)):\"0\"}function M(e){return Object.keys(e).sort().filter(t=>e[t]!==void 0).map(t=>`${t}_${t===\"root\"?O(e.root):e[t]}`).toString()}function T(e){const t=M(e);let n=w.get(t);if(!n){const s=new Map;let c;const o=new IntersectionObserver(i=>{i.forEach(r=>{var u;const g=r.isIntersecting&&c.some(d=>r.intersectionRatio>=d);e.trackVisibility&&typeof r.isVisible>\"u\"&&(r.isVisible=g),(u=s.get(r.target))==null||u.forEach(d=>{d(g,r)})})},e);c=o.thresholds||(Array.isArray(e.threshold)?e.threshold:[e.threshold||0]),n={id:t,observer:o,elements:s},w.set(t,n)}return n}function _(e,t,n={},s=j){if(typeof window.IntersectionObserver>\"u\"&&s!==void 0){const u=e.getBoundingClientRect();return t(s,{isIntersecting:s,target:e,intersectionRatio:typeof n.threshold==\"number\"?n.threshold:0,time:0,boundingClientRect:u,intersectionRect:u,rootBounds:u}),()=>{}}const{id:c,observer:o,elements:i}=T(n),r=i.get(e)||[];return i.has(e)||i.set(e,r),r.push(t),o.observe(e),function(){r.splice(r.indexOf(t),1),r.length===0&&(i.delete(e),o.unobserve(e)),i.size===0&&(o.disconnect(),w.delete(c))}}function B({threshold:e,delay:t,trackVisibility:n,rootMargin:s,root:c,triggerOnce:o,skip:i,initialInView:r,fallbackInView:u,onChange:g}={}){var d;const[h,E]=v.useState(null),l=v.useRef(),[y,S]=v.useState({inView:!!r,entry:void 0});l.current=g,v.useEffect(()=>{if(i||!h)return;let f;return f=_(h,(x,p)=>{S({inView:x,entry:p}),l.current&&l.current(x,p),p.isIntersecting&&o&&f&&(f(),f=void 0)},{root:c,rootMargin:s,threshold:e,trackVisibility:n,delay:t},u),()=>{f&&f()}},[Array.isArray(e)?e.toString():e,h,c,s,o,i,n,u,t]);const R=(d=y.entry)==null?void 0:d.target,m=v.useRef();!h&&R&&!o&&!i&&m.current!==R&&(m.current=R,S({inView:!!r,entry:void 0}));const a=[E,y.inView,y.entry];return a.ref=a[0],a.inView=a[1],a.entry=a[2],a}const $=({children:e,className:t})=>{const[n,s]=B({triggerOnce:!0,threshold:.1});return I.jsx(V.section,{ref:n,initial:{opacity:0,y:50},animate:s?{opacity:1,y:0}:{opacity:0,y:50},transition:{duration:.5},className:t,children:e})};export{$ as A,B as u};\n"
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 1448
        },
        "cache": {},
        "timings": {
          "blocked": -1,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 20,
          "receive": 0
        },
        "time": 20,
        "_securityState": "insecure",
        "serverIPAddress": "127.0.0.1",
        "connection": "4173",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.337-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa1ZL7W0I5nvwU.woff2",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "fonts.gstatic.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "identity"
            },
            {
              "name": "Origin",
              "value": "http://localhost:4173"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "https://fonts.googleapis.com/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "font"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "cross-site"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 565
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "content-security-policy-report-only",
              "value": "require-trusted-types-for 'script'; report-uri https://csp.withgoogle.com/csp/apps-themes"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "same-origin; report-to=\"apps-themes\""
            },
            {
              "name": "report-to",
              "value": "{\"group\":\"apps-themes\",\"max_age\":2592000,\"endpoints\":[{\"url\":\"https://csp.withgoogle.com/csp/report-to/apps-themes\"}]}"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "content-length",
              "value": "48496"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "server",
              "value": "sffe"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "date",
              "value": "Wed, 23 Oct 2024 16:19:31 GMT"
            },
            {
              "name": "expires",
              "value": "Thu, 23 Oct 2025 16:19:31 GMT"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000"
            },
            {
              "name": "age",
              "value": "80326"
            },
            {
              "name": "last-modified",
              "value": "Mon, 29 Jul 2024 22:47:09 GMT"
            },
            {
              "name": "content-type",
              "value": "font/woff2"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "font/woff2",
            "size": 48496,
            "encoding": "base64",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 49328
        },
        "cache": {},
        "timings": {
          "blocked": -1,
          "dns": 0,
          "connect": 30,
          "ssl": 0,
          "send": 0,
          "wait": 75,
          "receive": 55
        },
        "time": 160,
        "_securityState": "secure",
        "serverIPAddress": "142.251.41.3",
        "connection": "443",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.340-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://fonts.gstatic.com/s/merriweather/v30/u-4n0qyriQwlOrhSvowK_l52xwNZWMf6.woff2",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "fonts.gstatic.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "identity"
            },
            {
              "name": "Origin",
              "value": "http://localhost:4173"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "https://fonts.googleapis.com/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "font"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "cross-site"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 560
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "content-security-policy-report-only",
              "value": "require-trusted-types-for 'script'; report-uri https://csp.withgoogle.com/csp/apps-themes"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "same-origin; report-to=\"apps-themes\""
            },
            {
              "name": "report-to",
              "value": "{\"group\":\"apps-themes\",\"max_age\":2592000,\"endpoints\":[{\"url\":\"https://csp.withgoogle.com/csp/report-to/apps-themes\"}]}"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "content-length",
              "value": "19740"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "server",
              "value": "sffe"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "date",
              "value": "Wed, 23 Oct 2024 12:23:33 GMT"
            },
            {
              "name": "expires",
              "value": "Thu, 23 Oct 2025 12:23:33 GMT"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000"
            },
            {
              "name": "age",
              "value": "94484"
            },
            {
              "name": "last-modified",
              "value": "Tue, 26 Apr 2022 15:48:38 GMT"
            },
            {
              "name": "content-type",
              "value": "font/woff2"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "font/woff2",
            "size": 19740,
            "encoding": "base64",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 20572
        },
        "cache": {},
        "timings": {
          "blocked": 29,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 65,
          "receive": 0
        },
        "time": 94,
        "_securityState": "secure",
        "serverIPAddress": "142.251.41.3",
        "connection": "443",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.353-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "http://localhost:4173/debbie_obrien_new.jpg",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Host",
              "value": "localhost:4173"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "image/avif,image/webp,image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "http://localhost:4173/about"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "image"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Priority",
              "value": "u=4, i"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 529
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Content-Type",
              "value": "text/html"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Etag",
              "value": "W/\"284-hKPBXl/apSm/MVMWOCIoggE0dg4\""
            },
            {
              "name": "Date",
              "value": "Thu, 24 Oct 2024 14:38:16 GMT"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "name": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "text/html",
            "size": 644,
            "text": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>PA Real Estate Support Services LLC</title>\n    <meta name=\"description\" content=\"Professional real estate transaction coordination services for Keller Williams agents and other real estate professionals.\">\n    <script type=\"module\" crossorigin src=\"/assets/index-Bwf9VAWW.js\"></script>\n    <link rel=\"stylesheet\" crossorigin href=\"/assets/index-Db97OO48.css\">\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>"
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 900
        },
        "cache": {},
        "timings": {
          "blocked": -1,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 15,
          "receive": 0
        },
        "time": 15,
        "_securityState": "insecure",
        "serverIPAddress": "127.0.0.1",
        "connection": "4173",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.354-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "http://localhost:4173/pa-real-estate-logo-new.png",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Host",
              "value": "localhost:4173"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "image/avif,image/webp,image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "http://localhost:4173/about"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "image"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Priority",
              "value": "u=5, i"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 535
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Content-Length",
              "value": "255695"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            },
            {
              "name": "Last-Modified",
              "value": "Wed, 23 Oct 2024 17:47:57 GMT"
            },
            {
              "name": "ETag",
              "value": "W/\"255695-1729705677755\""
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Date",
              "value": "Thu, 24 Oct 2024 14:38:16 GMT"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "image/png",
            "size": 255695,
            "encoding": "base64",
            "text": "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"
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 255982
        },
        "cache": {},
        "timings": {
          "blocked": -1,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 15,
          "receive": 0
        },
        "time": 15,
        "_securityState": "insecure",
        "serverIPAddress": "127.0.0.1",
        "connection": "4173",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.366-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa1ZL7W0I5nvwU.woff2",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "fonts.gstatic.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "identity"
            },
            {
              "name": "Origin",
              "value": "http://localhost:4173"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "https://fonts.googleapis.com/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "font"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "cross-site"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 565
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "content-security-policy-report-only",
              "value": "require-trusted-types-for 'script'; report-uri https://csp.withgoogle.com/csp/apps-themes"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "same-origin; report-to=\"apps-themes\""
            },
            {
              "name": "report-to",
              "value": "{\"group\":\"apps-themes\",\"max_age\":2592000,\"endpoints\":[{\"url\":\"https://csp.withgoogle.com/csp/report-to/apps-themes\"}]}"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "content-length",
              "value": "48496"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "server",
              "value": "sffe"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "date",
              "value": "Wed, 23 Oct 2024 16:19:31 GMT"
            },
            {
              "name": "expires",
              "value": "Thu, 23 Oct 2025 16:19:31 GMT"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000"
            },
            {
              "name": "age",
              "value": "80326"
            },
            {
              "name": "last-modified",
              "value": "Mon, 29 Jul 2024 22:47:09 GMT"
            },
            {
              "name": "content-type",
              "value": "font/woff2"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "font/woff2",
            "size": 48496,
            "encoding": "base64",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 49328
        },
        "cache": {},
        "timings": {
          "blocked": 3,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 103,
          "receive": 31
        },
        "time": 137,
        "_securityState": "secure",
        "serverIPAddress": "142.251.41.3",
        "connection": "443",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.367-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://fonts.gstatic.com/s/inter/v18/UcC73FwrK3iLTeHuS_nVMrMxCp50SjIa1ZL7W0I5nvwU.woff2",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "fonts.gstatic.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "identity"
            },
            {
              "name": "Origin",
              "value": "http://localhost:4173"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "https://fonts.googleapis.com/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "font"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "cross-site"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 565
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "content-security-policy-report-only",
              "value": "require-trusted-types-for 'script'; report-uri https://csp.withgoogle.com/csp/apps-themes"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "same-origin; report-to=\"apps-themes\""
            },
            {
              "name": "report-to",
              "value": "{\"group\":\"apps-themes\",\"max_age\":2592000,\"endpoints\":[{\"url\":\"https://csp.withgoogle.com/csp/report-to/apps-themes\"}]}"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "content-length",
              "value": "48496"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "server",
              "value": "sffe"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "date",
              "value": "Wed, 23 Oct 2024 16:19:31 GMT"
            },
            {
              "name": "expires",
              "value": "Thu, 23 Oct 2025 16:19:31 GMT"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000"
            },
            {
              "name": "age",
              "value": "80326"
            },
            {
              "name": "last-modified",
              "value": "Mon, 29 Jul 2024 22:47:09 GMT"
            },
            {
              "name": "content-type",
              "value": "font/woff2"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "font/woff2",
            "size": 48496,
            "encoding": "base64",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 49328
        },
        "cache": {},
        "timings": {
          "blocked": 1,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 118,
          "receive": 25
        },
        "time": 144,
        "_securityState": "secure",
        "serverIPAddress": "142.251.41.3",
        "connection": "443",
        "pageref": "page_3"
      },
      {
        "startedDateTime": "2024-10-24T10:38:16.541-04:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "http://localhost:4173/vite.svg",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Host",
              "value": "localhost:4173"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0"
            },
            {
              "name": "Accept",
              "value": "image/avif,image/webp,image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "http://localhost:4173/about"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "image"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "no-cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Priority",
              "value": "u=6"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 513
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Content-Type",
              "value": "text/html"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "Etag",
              "value": "W/\"284-hKPBXl/apSm/MVMWOCIoggE0dg4\""
            },
            {
              "name": "Date",
              "value": "Thu, 24 Oct 2024 14:38:16 GMT"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "name": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "text/html",
            "size": 644,
            "text": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>PA Real Estate Support Services LLC</title>\n    <meta name=\"description\" content=\"Professional real estate transaction coordination services for Keller Williams agents and other real estate professionals.\">\n    <script type=\"module\" crossorigin src=\"/assets/index-Bwf9VAWW.js\"></script>\n    <link rel=\"stylesheet\" crossorigin href=\"/assets/index-Db97OO48.css\">\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>"
          },
          "redirectURL": "",
          "headersSize": 0,
          "bodySize": 644
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 7,
          "receive": 0
        },
        "time": 7,
        "_securityState": "insecure",
        "serverIPAddress": "127.0.0.1",
        "connection": "4173",
        "pageref": "page_3"
      }
    ]
  }
}